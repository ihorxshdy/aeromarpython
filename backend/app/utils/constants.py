# Константы для планировщика рейсов

DAY_START = -6 * 60  # начинаем ось с 18:00 предыдущего дня (-6 часов)
DAY_END = 30 * 60    # до 06:00 следующего дня (+30 часов от полуночи)
GRID_STEP = 60  # шаг сетки 60 мин
FLEX_HOURS = 9  # длительность flex-смены (ч)

class RULE:
    # derivation из STD - ПРАВИЛЬНЫЕ ЗНАЧЕНИЯ СОГЛАСНО ТГ
    LOAD_SMS = 155  # начало загрузки автолифта до STD (SMS) - 2ч35мин согласно ТГ
    LOAD_DMS = 180  # для DMS - 3ч00мин согласно ТГ
    
    # время выезда от окна
    WINDOW_TO_DEPARTURE_DMS = 120  # 2ч00мин для DMS согласно ТГ
    WINDOW_TO_DEPARTURE_SMS = 95   # 1ч35мин для SMS согласно ТГ
    
    WINDOW_TO_SERVICE = 25  # от выезда до начала обслуживания - 25 мин (время пути до МС) согласно ТГ
    SERVICE_SMS = 19  # длительность обслуживания SMS - 19 минут согласно ТГ
    SERVICE_DMS = 45  # длительность обслуживания DMS - 45 минут согласно ТГ
    LEAVE_BEFORE_STD = 60  # отъезд от ВС до STD - 1 час согласно ТГ
    RETURN_UNLOAD = 20  # возврат в окно после обслуживания - 20 минут согласно ТГ
    TRAVEL = 25  # переезд между бортами - 25 минут согласно ТГ
    
    # визуал «скобки»
    BRACKET_PAD_LEFT = 120  # −2:00 от первого бара в цепочке
    BRACKET_PAD_RIGHT = 0  # без дополнительного хвоста — скобка заканчивается по разгрузке
    
    # подсказка-буфер при dnd
    RED_ZONE = 15  # 15 минут

# Типы воздушных судов - используем ту же классификацию что в bracket.py
DMS_TYPES = {"777", "350", "330", "787", "77W", "77R", "773", "744", "333", "359"}  # DMS типы из bracket.py
SMS_TYPES = {"320", "321", "737", "319", "32A", "32B", "32N", "32Q", "73H", "739", "SU9"}  # SMS типы из bracket.py

# ВАЖНО: Используем комбинации из bracket.py - НЕ дублируем здесь!
# Все комбинации определены в backend/app/models/bracket.py:
# - SMS_COMBINATIONS
# - DMS_BUSINESS_COMBINATIONS  
# - DMS_SMS_COMBINATIONS
# - DMS_ECONOMY_TYPES
# - BUSINESS_CAPABLE_AUTOLIFTS

DMS_ECONOMY_TYPES = {"777", "350", "330", "787", "77W", "77R", "773", "744", "333", "359"}  # все DMS типы для эконом

# Окна для погрузки/разгрузки
LOADING_WINDOWS = list(range(1, 20))  # окна 1-19 для погрузки
UNLOADING_WINDOWS = list(range(20, 24))  # окна 20-23 для разгрузки грязи

# Правила для DMS флота с 2 автолифтами
DMS_REQUIRES_TWO_VEHICLES = True  # для одного DMS рейса используется 2 машины
DMS_ADJACENT_WINDOWS = True  # 2 автолифта грузятся в 2 соседних окнах
