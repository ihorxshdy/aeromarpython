{"ast":null,"code":"// Константы\nexport const DAY_START=0;// начинаем ось с 00:00\nexport const DAY_END=24*60;// до 24:00\nexport const GRID_STEP=30;// шаг сетки 30 мин (было 60) для более детального отображения\nexport const FLEX_HOURS=9;// длительность flex-смены (ч)\nexport const RULE={// derivation из STD\nLOAD_SMS:180,// начало загрузки автолифта до STD (SMS)\nLOAD_DMS:240,// для DMS\nWINDOW_TO_SERVICE:15,// от окна до начала обслуживания\nSERVICE_SMS:19,// длительность обслуживания SMS\nSERVICE_DMS:45,// длительность обслуживания DMS\nLEAVE_BEFORE_STD:60,// отъезд от ВС до STD\nRETURN_UNLOAD:20,// возврат в окно после обслуживания (20 мин)\nTRAVEL:20,// переезд между бортами\n// визуал «скобки»\nBRACKET_PAD_LEFT:120,// −2:00 от первого бара в цепочке\nBRACKET_PAD_RIGHT:0,// без дополнительного хвоста — скобка заканчивается по разгрузке\n// подсказка-буфер при dnd\nRED_ZONE:15// 15 минут\n};// Утилиты\nexport const uid=()=>Math.random().toString(36).slice(2,9);export const clamp=(v,a,b)=>Math.max(a,Math.min(b,v));export const clampDay=m=>clamp(m,DAY_START,DAY_END);export function toHHMM(m){m=Math.round((m%(24*60)+24*60)%(24*60));const h=Math.floor(m/60).toString().padStart(2,'0');const mm=(m%60).toString().padStart(2,'0');return\"\".concat(h,\":\").concat(mm);}// Функция для компактного отображения времени\nexport function toCompactTime(start,end,width){if(width>=90){// Полное время с пробелами для широких баров\nreturn\"\".concat(toHHMM(start),\" - \").concat(toHHMM(end));}else if(width>=65){// Без пробелов для средних баров\nreturn\"\".concat(toHHMM(start),\"-\").concat(toHHMM(end));}else if(width>=50){// Сокращенное время без ведущих нулей\nconst shortStart=toHHMM(start).replace(/^0/,'');const shortEnd=toHHMM(end).replace(/^0/,'');return\"\".concat(shortStart,\"-\").concat(shortEnd);}else{// Только время начала для очень узких баров\nreturn toHHMM(start).replace(/^0/,'');}}export function toMin(hhmm){const match=hhmm.match(/(\\d{1,2}):(\\d{2})/);if(!match)return NaN;return+match[1]*60+ +match[2];}export const DMS_TYPES=new Set(['77W','77R','773','744','333','359']);export const SMS_TYPES=new Set(['320','321','32A','32B','32N','32Q','73H','739','SU9']);export const isDMS=t=>DMS_TYPES.has(t.toUpperCase());export const isSMS=t=>SMS_TYPES.has(t.toUpperCase());export const normType=t=>t.toUpperCase().trim();","map":{"version":3,"names":["DAY_START","DAY_END","GRID_STEP","FLEX_HOURS","RULE","LOAD_SMS","LOAD_DMS","WINDOW_TO_SERVICE","SERVICE_SMS","SERVICE_DMS","LEAVE_BEFORE_STD","RETURN_UNLOAD","TRAVEL","BRACKET_PAD_LEFT","BRACKET_PAD_RIGHT","RED_ZONE","uid","Math","random","toString","slice","clamp","v","a","b","max","min","clampDay","m","toHHMM","round","h","floor","padStart","mm","concat","toCompactTime","start","end","width","shortStart","replace","shortEnd","toMin","hhmm","match","NaN","DMS_TYPES","Set","SMS_TYPES","isDMS","t","has","toUpperCase","isSMS","normType","trim"],"sources":["/Users/igordvoretskii/Documents/aeromar-python/frontend/src/utils.ts"],"sourcesContent":["// Константы\nexport const DAY_START = 0;            // начинаем ось с 00:00\nexport const DAY_END = 24 * 60;        // до 24:00\nexport const GRID_STEP = 30;           // шаг сетки 30 мин (было 60) для более детального отображения\nexport const FLEX_HOURS = 9;           // длительность flex-смены (ч)\n\nexport const RULE = {\n  // derivation из STD\n  LOAD_SMS: 180,                // начало загрузки автолифта до STD (SMS)\n  LOAD_DMS: 240,                // для DMS\n  WINDOW_TO_SERVICE: 15,        // от окна до начала обслуживания\n  SERVICE_SMS: 19,              // длительность обслуживания SMS\n  SERVICE_DMS: 45,              // длительность обслуживания DMS\n  LEAVE_BEFORE_STD: 60,         // отъезд от ВС до STD\n  RETURN_UNLOAD: 20,            // возврат в окно после обслуживания (20 мин)\n  TRAVEL: 20,                   // переезд между бортами\n\n  // визуал «скобки»\n  BRACKET_PAD_LEFT: 120,        // −2:00 от первого бара в цепочке\n  BRACKET_PAD_RIGHT: 0,         // без дополнительного хвоста — скобка заканчивается по разгрузке\n\n  // подсказка-буфер при dnd\n  RED_ZONE: 15,                 // 15 минут\n} as const;\n\n// Утилиты\nexport const uid = () => Math.random().toString(36).slice(2, 9);\nexport const clamp = (v: number, a: number, b: number) => Math.max(a, Math.min(b, v));\nexport const clampDay = (m: number) => clamp(m, DAY_START, DAY_END);\n\nexport function toHHMM(m: number): string {\n  m = Math.round(((m % (24*60)) + 24*60) % (24*60));\n  const h = Math.floor(m/60).toString().padStart(2,'0');\n  const mm = (m%60).toString().padStart(2,'0');\n  return `${h}:${mm}`;\n}\n\n// Функция для компактного отображения времени\nexport function toCompactTime(start: number, end: number, width: number): string {\n  if (width >= 90) {\n    // Полное время с пробелами для широких баров\n    return `${toHHMM(start)} - ${toHHMM(end)}`;\n  } else if (width >= 65) {\n    // Без пробелов для средних баров\n    return `${toHHMM(start)}-${toHHMM(end)}`;\n  } else if (width >= 50) {\n    // Сокращенное время без ведущих нулей\n    const shortStart = toHHMM(start).replace(/^0/, '');\n    const shortEnd = toHHMM(end).replace(/^0/, '');\n    return `${shortStart}-${shortEnd}`;\n  } else {\n    // Только время начала для очень узких баров\n    return toHHMM(start).replace(/^0/, '');\n  }\n}\n\nexport function toMin(hhmm: string): number {\n  const match = hhmm.match(/(\\d{1,2}):(\\d{2})/);\n  if (!match) return NaN;\n  return +match[1]*60 + +match[2];\n}\n\nexport const DMS_TYPES = new Set(['77W','77R','773','744','333','359']);\nexport const SMS_TYPES = new Set(['320','321','32A','32B','32N','32Q','73H','739','SU9']);\nexport const isDMS = (t: string) => DMS_TYPES.has(t.toUpperCase());\nexport const isSMS = (t: string) => SMS_TYPES.has(t.toUpperCase());\nexport const normType = (t: string) => t.toUpperCase().trim();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}