{"ast":null,"code":"var _jsxFileName = \"/Users/igordvoretskii/Documents/aeromar-python/frontend/src/PlannerPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { DndContext, DragOverlay, rectIntersection } from '@dnd-kit/core';\nimport { flightAPI, machineAPI } from './api';\nimport { DAY_START, DAY_END, GRID_STEP, toHHMM } from './utils';\nimport { DraggableFlight } from './components/DraggableFlight';\nimport { DroppableMachineSlot } from './components/DroppableMachineSlot';\nimport { DroppableUnassigned } from './components/DroppableUnassigned';\n\n// Интерфейс для изменений назначений\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Кастомный модификатор для ограничения перемещения только по вертикали\nconst restrictToVerticalAxis = args => {\n  const {\n    transform,\n    draggingNodeRect,\n    activatorEvent\n  } = args;\n  if (!draggingNodeRect || !activatorEvent) {\n    return transform;\n  }\n  return {\n    x: 0,\n    // Блокируем горизонтальное перемещение\n    y: transform.y,\n    // Оставляем вертикальное перемещение\n    scaleX: transform.scaleX,\n    scaleY: transform.scaleY\n  };\n};\nconst PlannerPage = () => {\n  _s();\n  const [machines, setMachines] = useState([]);\n  const [flights, setFlights] = useState([]);\n  const [autolifts, setAutolifts] = useState([]); // Добавляем состояние для автолифтов\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Drag and Drop состояние\n  const [activeFlight, setActiveFlight] = useState(null);\n\n  // Состояние для отслеживания изменений назначений\n  const [pendingChanges, setPendingChanges] = useState([]);\n  const [showSaveDialog, setShowSaveDialog] = useState(false);\n\n  // Водители и назначения машин\n  const [drivers, setDrivers] = useState([]);\n\n  // Состояние для редактируемых времен смены водителей\n  const [customShiftTimes, setCustomShiftTimes] = useState({});\n\n  // Состояние для высоты подвала\n  const [basementHeight, setBasementHeight] = useState(120); // Высота для неназначенных рейсов\n  const [isResizing, setIsResizing] = useState(false);\n\n  // Новые состояния для управления\n  const [horizontalScale, setHorizontalScale] = useState(1);\n  // Состояние окон для каждой цепочки отдельно\n  const [chainWindows, setChainWindows] = useState({});\n\n  // Состояние автолифтов для каждой цепочки\n  const [chainAutolifts, setChainAutolifts] = useState({});\n\n  // Статусы рейсов\n  const [flightStatuses, setFlightStatuses] = useState({});\n\n  // Множественный выбор рейсов для создания скобок\n  const [selectedFlights, setSelectedFlights] = useState(new Set());\n  const [isMultiSelectMode, setIsMultiSelectMode] = useState(false);\n  const [selectedChain, setSelectedChain] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n\n  // Состояние для отображения временного зазора при перетаскивании\n  const [hoverMachineId, setHoverMachineId] = useState(null);\n  const [timeGapInfo, setTimeGapInfo] = useState(null);\n\n  // Функция для получения статуса рейса\n  const getFlightStatus = flight => {\n    return flightStatuses[flight.flightNo] || 'planned';\n  };\n\n  // Функция для обновления статуса рейса\n  const updateFlightStatus = (flightNo, status) => {\n    setFlightStatuses(prev => ({\n      ...prev,\n      [flightNo]: status\n    }));\n  };\n\n  // Загружаем данные при инициализации\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        console.log('🔄 Загружаем данные...');\n        const [machinesData, flightsData, autoliftsResponse] = await Promise.all([machineAPI.getMachines(), flightAPI.getFlights(), fetch('/autolifts.csv') // Загружаем список автолифтов\n        ]);\n        console.log('✅ Машины загружены:', machinesData.length);\n        console.log('✅ Рейсы загружены:', flightsData.length);\n        setMachines(machinesData);\n        setFlights(flightsData);\n\n        // Парсим автолифты из CSV\n        try {\n          const autoliftsText = await autoliftsResponse.text();\n          console.log('📄 Сырой текст автолифтов:', autoliftsText.substring(0, 200));\n          const autoliftsData = autoliftsText.split('\\n').slice(1) // Пропускаем заголовок\n          .map(line => line.trim()).filter(line => line.length > 0);\n          console.log('✅ Автолифты загружены:', autoliftsData);\n          setAutolifts(autoliftsData);\n        } catch (e) {\n          console.warn('⚠️ Ошибка загрузки автолифтов, используем резервный список:', e);\n          // Резервный список автолифтов\n          const fallbackAutolifts = ['133', '135', '136', '139', '140', '141', '149', '150', '151', '152', '153', '154', '155', '156', '157', '158', '159', '160'];\n          setAutolifts(fallbackAutolifts);\n        }\n\n        // Создаем водителей на основе машин\n        const driversData = machinesData.map(machine => ({\n          id: `driver-${machine.id}`,\n          name: machine.driver,\n          machineId: machine.id,\n          shiftStart: machine.shiftStart,\n          shiftEnd: machine.shiftEnd\n        }));\n        setDrivers(driversData);\n\n        // Инициализируем времена смен водителей по умолчанию\n        const defaultTimes = {};\n        driversData.forEach(driver => {\n          defaultTimes[driver.id] = {\n            shiftStart: driver.shiftStart,\n            shiftEnd: driver.shiftEnd\n          };\n        });\n        setCustomShiftTimes(defaultTimes);\n        console.log('✅ Водители созданы:', driversData.length);\n\n        // Загружаем сохраненные цепочки из localStorage\n        const savedChains = localStorage.getItem('flight-chains');\n        if (savedChains) {\n          try {\n            const chainData = JSON.parse(savedChains);\n            console.log('✅ Загружены сохраненные цепочки:', Object.keys(chainData).length);\n\n            // Применяем сохраненные chainId к рейсам\n            const updatedFlights = flightsData.map(flight => ({\n              ...flight,\n              chainId: chainData[flight.id] || flight.chainId || ''\n            }));\n            setFlights(updatedFlights);\n          } catch (e) {\n            console.warn('⚠️ Ошибка загрузки сохраненных цепочек:', e);\n          }\n        }\n\n        // Загружаем сохраненные автолифты для цепочек\n        const savedAutolifts = localStorage.getItem('chain-autolifts');\n        if (savedAutolifts) {\n          try {\n            const autoliftData = JSON.parse(savedAutolifts);\n            console.log('✅ Загружены сохраненные автолифты:', Object.keys(autoliftData).length);\n            setChainAutolifts(autoliftData);\n          } catch (e) {\n            console.warn('⚠️ Ошибка загрузки сохраненных автолифтов:', e);\n          }\n        }\n      } catch (err) {\n        console.error('❌ Ошибка загрузки данных:', err);\n        setError('Ошибка загрузки данных');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n\n  // Сохранение цепочек в localStorage при изменении\n  useEffect(() => {\n    if (flights.length > 0) {\n      const chainData = {};\n      flights.forEach(flight => {\n        if (flight.chainId) {\n          chainData[flight.id] = flight.chainId;\n        }\n      });\n      localStorage.setItem('flight-chains', JSON.stringify(chainData));\n      console.log('💾 Цепочки сохранены в localStorage');\n    }\n  }, [flights]);\n\n  // Сохранение автолифтов в localStorage при изменении\n  useEffect(() => {\n    localStorage.setItem('chain-autolifts', JSON.stringify(chainAutolifts));\n    console.log('💾 Автолифты сохранены в localStorage');\n  }, [chainAutolifts]);\n\n  // Функция для извлечения номера автолифта из машины\n  const getAutoliftFromMachine = machineId => {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return '';\n\n    // Извлекаем номер из ID машины (например, \"M133\" -> \"133\")\n    const autoliftNumber = machine.id.replace('M', '');\n    return autoliftNumber;\n  };\n\n  // Функция для автоматического назначения автолифта цепочке на основе машины\n  const autoAssignAutolift = (chainId, machineId) => {\n    // Если автолифт уже назначен, не меняем\n    if (chainAutolifts[chainId]) return;\n    const autoliftNumber = getAutoliftFromMachine(machineId);\n    if (autoliftNumber) {\n      setChainAutolifts(prev => ({\n        ...prev,\n        [chainId]: autoliftNumber\n      }));\n      console.log(`🔧 Автоматически назначен автолифт ${autoliftNumber} для цепочки ${chainId}`);\n    }\n  };\n\n  // Функция для получения времени смены водителя (пользовательское или по умолчанию)\n  const getDriverShiftTime = driverId => {\n    return customShiftTimes[driverId] || drivers.find(d => d.id === driverId) || {\n      shiftStart: 6 * 60,\n      shiftEnd: 22 * 60\n    };\n  };\n\n  // Функция для вычисления длительности смены\n  const calculateShiftDuration = (shiftStart, shiftEnd) => {\n    const duration = shiftEnd - shiftStart;\n    const hours = Math.floor(duration / 60);\n    const minutes = duration % 60;\n    return `${hours}ч ${minutes > 0 ? minutes + 'м' : ''}`.trim();\n  };\n\n  // Функция для обновления времени смены водителя\n  const updateDriverShiftTime = (driverId, field, value) => {\n    setCustomShiftTimes(prev => ({\n      ...prev,\n      [driverId]: {\n        ...prev[driverId],\n        [field]: value\n      }\n    }));\n  };\n\n  // Функция для сокращения имени до формата \"Фамилия И.О.\"\n  const formatDriverName = fullName => {\n    if (!fullName || fullName.trim() === '') return 'Без имени';\n    const parts = fullName.trim().split(/\\s+/);\n    if (parts.length === 1) return parts[0]; // Если только одно слово\n\n    if (parts.length === 2) {\n      // Если два слова: \"Фамилия Имя\" -> \"Фамилия И.\"\n      const surname = parts[0];\n      const firstName = parts[1];\n      return `${surname} ${firstName.charAt(0).toUpperCase()}.`;\n    }\n    if (parts.length >= 3) {\n      // Если три или больше слов: \"Фамилия Имя Отчество\" -> \"Фамилия И.О.\"\n      const surname = parts[0];\n      const firstName = parts[1];\n      const middleName = parts[2];\n      return `${surname} ${firstName.charAt(0).toUpperCase()}.${middleName.charAt(0).toUpperCase()}.`;\n    }\n    return fullName; // Fallback\n  };\n\n  // Константы для ширины колонок\n  const DRIVER_INFO_WIDTH = 140; // Ширина колонки с информацией о водителе (уменьшена с 160 до 140)\n  const MACHINE_SELECT_WIDTH = 75; // Ширина колонки с выбором машины (увеличена с 65 до 75)\n  const SHIFT_TIME_WIDTH = 95; // Ширина колонки с временем смены (увеличена с 80 до 95)\n  const WORK_DURATION_WIDTH = 59; // Ширина колонки с расчетным временем работы (уменьшена с 79 до 59)\n  const TOTAL_DRIVERS_WIDTH = 369; // Фиксированная общая ширина (140 + 75 + 95 + 59 = 369)\n\n  // Масштаб и настройки отображения\n  const basePxPerMin = 4; // Увеличили с 2 до 4 для лучшего разделения\n  const pxPerMin = basePxPerMin * horizontalScale; // X - масштабируется только горизонтально\n  const laneH = 55; // Увеличили высоту строк с 45 до 55 для отображения полной информации\n  const fontPx = Math.max(9, Math.min(11, laneH / 5)); // Адаптировали размер шрифта\n\n  // Скролл и «сейчас»\n  const mainRef = useRef(null);\n  const footRef = useRef(null);\n  const basementRef = useRef(null); // Для подвала с неназначенными рейсами\n  const driversRef = useRef(null); // Для синхронизации скролла водителей\n\n  useEffect(() => {\n    // Синхронизация горизонтального скролла между временной шкалой, основной диаграммой и basement\n    const timer = setTimeout(() => {\n      const timeHeader = footRef.current;\n      const mainArea = mainRef.current;\n      const basement = basementRef.current;\n      console.log('🔄 Настройка синхронизации скролла...');\n      if (!timeHeader || !mainArea || !basement) {\n        console.log('❌ Не все контейнеры найдены:', {\n          timeHeader: !!timeHeader,\n          mainArea: !!mainArea,\n          basement: !!basement\n        });\n        return;\n      }\n      let isScrolling = false;\n\n      // Основная диаграмма - главный источник скролла\n      const onMainScroll = () => {\n        if (isScrolling) return;\n        isScrolling = true;\n        const scrollLeft = mainArea.scrollLeft;\n\n        // Синхронизируем заголовок и подвал\n        if (timeHeader.scrollLeft !== scrollLeft) {\n          timeHeader.scrollLeft = scrollLeft;\n        }\n        if (basement.scrollLeft !== scrollLeft) {\n          basement.scrollLeft = scrollLeft;\n        }\n        requestAnimationFrame(() => {\n          isScrolling = false;\n        });\n      };\n\n      // Добавляем только один слушатель - на основную диаграмму\n      mainArea.addEventListener('scroll', onMainScroll, {\n        passive: true\n      });\n      console.log('✅ Синхронизация горизонтального скролла настроена');\n      return () => {\n        mainArea.removeEventListener('scroll', onMainScroll);\n      };\n    }, 500);\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Синхронизация вертикального скролла между основной диаграммой и блоком водителей\n  useEffect(() => {\n    const mainArea = mainRef.current;\n    const driversArea = driversRef.current;\n    if (!mainArea || !driversArea) return;\n    let isVerticalScrolling = false;\n    const syncScrollTop = (sourceScrollTop, source) => {\n      if (isVerticalScrolling) return;\n      isVerticalScrolling = true;\n      if (source !== 'main') mainArea.scrollTop = sourceScrollTop;\n      if (source !== 'drivers') driversArea.scrollTop = sourceScrollTop;\n      requestAnimationFrame(() => {\n        isVerticalScrolling = false;\n      });\n    };\n    const onMainVerticalScroll = () => {\n      if (!isVerticalScrolling) {\n        syncScrollTop(mainArea.scrollTop, 'main');\n      }\n    };\n    const onDriversVerticalScroll = () => {\n      if (!isVerticalScrolling) {\n        syncScrollTop(driversArea.scrollTop, 'drivers');\n      }\n    };\n    mainArea.addEventListener('scroll', onMainVerticalScroll);\n    driversArea.addEventListener('scroll', onDriversVerticalScroll);\n    return () => {\n      mainArea.removeEventListener('scroll', onMainVerticalScroll);\n      driversArea.removeEventListener('scroll', onDriversVerticalScroll);\n    };\n  }, []);\n  const [nowLeft, setNowLeft] = useState(0);\n  useEffect(() => {\n    const tick = () => {\n      const d = new Date();\n      const m = d.getHours() * 60 + d.getMinutes();\n      const left = (m - DAY_START) * pxPerMin;\n      setNowLeft(left);\n    };\n    tick();\n    const timer = setInterval(tick, 10000);\n    return () => clearInterval(timer);\n  }, [pxPerMin]);\n\n  // Обработка клавиш для управления режимом multi-select\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.key === 'Escape' && isMultiSelectMode) {\n        clearSelection();\n        console.log('🔄 Выход из режима multi-select по Escape');\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isMultiSelectMode]);\n\n  // Очистка overflow при размонтировании компонента\n  useEffect(() => {\n    return () => {\n      document.body.style.overflow = '';\n    };\n  }, []);\n\n  // Импорт CSV\n  const fileRef = useRef(null);\n  const [autoAfterImport, setAutoAfterImport] = useState(true);\n  const onPick = () => {\n    var _fileRef$current;\n    return (_fileRef$current = fileRef.current) === null || _fileRef$current === void 0 ? void 0 : _fileRef$current.click();\n  };\n  const onFile = async e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!file) return;\n    try {\n      setLoading(true);\n      setError(null); // Очищаем предыдущие ошибки\n      console.log('📁 Импортируем файл:', file.name, 'размер:', file.size);\n      const importedFlights = await flightAPI.importCSV(file);\n      console.log('✅ Импорт завершен, получено рейсов:', importedFlights.length);\n\n      // Принудительно обновляем состояние\n      setFlights([...importedFlights]); // Создаем новый массив для триггера ререндера\n\n      if (autoAfterImport) {\n        console.log('🤖 Запускаем автоназначение...');\n        await handleAutoAssign();\n      }\n\n      // Очищаем input для возможности повторного импорта того же файла\n      if (fileRef.current) {\n        fileRef.current.value = '';\n      }\n    } catch (err) {\n      console.error('❌ Ошибка импорта CSV:', err);\n      setError(`Ошибка импорта CSV: ${err instanceof Error ? err.message : 'Неизвестная ошибка'}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Автоназначение\n  const handleAutoAssign = async () => {\n    try {\n      setLoading(true);\n      await flightAPI.autoAssign();\n      const updatedFlights = await flightAPI.getFlights();\n      setFlights(updatedFlights);\n      setError(null);\n    } catch (err) {\n      setError('Ошибка автоназначения');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Сброс назначений\n  const handleResetAssign = async () => {\n    try {\n      setLoading(true);\n      await flightAPI.resetAssignments();\n      const updatedFlights = await flightAPI.getFlights();\n      setFlights(updatedFlights);\n      setError(null);\n    } catch (err) {\n      setError('Ошибка сброса');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Вычисления для отображения\n  const totalWidth = (DAY_END - DAY_START) * pxPerMin;\n  const gridLines = [];\n  for (let m = DAY_START; m <= DAY_END; m += GRID_STEP) {\n    gridLines.push(m);\n  }\n\n  // Группируем рейсы по машинам\n  const flightsByMachine = useMemo(() => {\n    const byMachine = {};\n    machines.forEach(m => byMachine[m.id] = []);\n    flights.forEach(f => {\n      if (f.vehicleId && f.vehicleId.trim() !== '') {\n        byMachine[f.vehicleId] = byMachine[f.vehicleId] || [];\n        byMachine[f.vehicleId].push(f);\n      }\n    });\n\n    // Сортируем по времени\n    Object.values(byMachine).forEach(list => list.sort((a, b) => a.serviceStart - b.serviceStart));\n    console.log('🔄 Рейсы по машинам:', byMachine);\n    console.log('🔄 Всего рейсов:', flights.length, 'назначенных:', flights.filter(f => f.vehicleId && f.vehicleId.trim() !== '').length);\n    return byMachine;\n  }, [flights, machines]);\n\n  // Функция для расчета слоев перекрывающихся рейсов\n  const calculateFlightLayers = useMemo(() => {\n    const layersByMachine = {};\n    Object.entries(flightsByMachine).forEach(([machineId, machineFlights]) => {\n      const flightsWithLayers = [];\n      machineFlights.forEach(flight => {\n        // Находим подходящий слой для этого рейса\n        let layer = 0;\n        let placed = false;\n        while (!placed) {\n          // Проверяем, есть ли конфликт с рейсами на этом слое\n          const conflictOnLayer = flightsWithLayers.some(item => item.layer === layer && !(flight.serviceEnd <= item.flight.serviceStart || flight.serviceStart >= item.flight.serviceEnd));\n          if (!conflictOnLayer) {\n            flightsWithLayers.push({\n              flight,\n              layer\n            });\n            placed = true;\n          } else {\n            layer++;\n          }\n        }\n      });\n      layersByMachine[machineId] = flightsWithLayers;\n    });\n    return layersByMachine;\n  }, [flightsByMachine]);\n\n  // Функция для получения количества слоев для машины\n  const getLayerCount = machineId => {\n    const layers = calculateFlightLayers[machineId] || [];\n    return Math.max(1, ...layers.map(item => item.layer + 1));\n  };\n\n  // Функция для получения слоя рейса\n  const getFlightLayer = (flightId, machineId) => {\n    const layers = calculateFlightLayers[machineId] || [];\n    const item = layers.find(item => item.flight.id === flightId);\n    return (item === null || item === void 0 ? void 0 : item.layer) || 0;\n  };\n\n  // Функция для получения границ цепочки по слоям (верхний и нижний слой)\n  const getChainLayerBounds = (chainId, machineId) => {\n    const layers = calculateFlightLayers[machineId] || [];\n    const chainLayers = layers.filter(item => item.flight.chainId === chainId).map(item => item.layer);\n    if (chainLayers.length === 0) {\n      return {\n        minLayer: 0,\n        maxLayer: 0,\n        top: 0,\n        height: 25\n      };\n    }\n    const minLayer = Math.min(...chainLayers);\n    const maxLayer = Math.max(...chainLayers);\n    const totalLayers = getLayerCount(machineId);\n    const flightHeight = laneH - 12; // Увеличили высоту рейса\n    const layerSpacing = flightHeight + 6; // Увеличили расстояние между слоями\n\n    if (totalLayers === 1) {\n      // Если только один слой, скобка центрируется как обычно\n      return {\n        minLayer: 0,\n        maxLayer: 0,\n        top: (laneH - 25) / 2,\n        // Центрируем скобку увеличенной высоты\n        height: 25 // Увеличили высоту скобки\n      };\n    } else {\n      // Если несколько слоев, скобка охватывает все слои цепочки\n      const dynamicLaneH = Math.max(laneH, totalLayers * layerSpacing + 12);\n      const totalHeight = totalLayers * layerSpacing;\n      const centerY = dynamicLaneH / 2;\n      const startY = centerY - totalHeight / 2;\n      const chainTop = startY + minLayer * layerSpacing;\n      const chainBottom = startY + maxLayer * layerSpacing + flightHeight;\n      const chainHeight = Math.max(25, chainBottom - chainTop); // Увеличили минимальную высоту\n\n      return {\n        minLayer,\n        maxLayer,\n        top: chainTop,\n        height: chainHeight\n      };\n    }\n  };\n\n  // Неназначенные рейсы\n  const unassignedFlights = flights.filter(f => !f.vehicleId || f.vehicleId.trim() === '');\n\n  // Цепочки/скобки по chainId, от kitchenOut первого до unloadEnd последнего\n  const chainsByMachine = useMemo(() => {\n    // сгруппировать рейсы по машине и chainId (пустым рейсам даём свой \"solo-...\" chainId)\n    const byM = {};\n    for (const m of machines) byM[m.id] = {};\n    for (const f of flights) if (f.vehicleId) {\n      const mid = f.vehicleId;\n      const cid = f.chainId && f.chainId.length ? f.chainId : `solo-${f.id}`;\n      (byM[mid][cid] ??= []).push(f);\n    }\n    const res = {};\n    for (const mid of Object.keys(byM)) {\n      const chains = byM[mid];\n      const arr = [];\n      for (const cid of Object.keys(chains)) {\n        const list = chains[cid].slice().sort((a, b) => a.serviceStart - b.serviceStart);\n        // Показываем скобки только для реальных цепочек (не solo) и если в цепочке больше 1 рейса\n        if (cid.startsWith('solo-') || list.length < 2) continue;\n        const start = Math.min(...list.map(x => x.kitchenOut));\n        const end = Math.max(...list.map(x => x.unloadEnd));\n        arr.push({\n          chainId: cid,\n          machineId: mid,\n          start: Math.max(DAY_START, start),\n          end: Math.min(DAY_END, end)\n        });\n      }\n      // сортируем только для стабильного рендера\n      arr.sort((a, b) => a.start - b.start);\n      res[mid] = arr;\n    }\n    return res;\n  }, [flights, machines]);\n\n  // Алгоритм размещения неназначенных рейсов без наложений\n  const arrangeUnassignedFlights = useMemo(() => {\n    const flightsWithPositions = [...unassignedFlights].sort((a, b) => a.serviceStart - b.serviceStart);\n    const lanes = {};\n    return flightsWithPositions.map(flight => {\n      let laneIndex = 0;\n\n      // Найдем свободную полосу\n      while (lanes[laneIndex]) {\n        const hasConflict = lanes[laneIndex].some(existing => !(flight.serviceEnd <= existing.start || flight.serviceStart >= existing.end));\n        if (!hasConflict) break;\n        laneIndex++;\n      }\n\n      // Добавим рейс в эту полосу\n      if (!lanes[laneIndex]) lanes[laneIndex] = [];\n      lanes[laneIndex].push({\n        start: flight.serviceStart,\n        end: flight.serviceEnd\n      });\n      return {\n        ...flight,\n        laneIndex\n      };\n    });\n  }, [unassignedFlights]);\n\n  // Custom collision detection для приоритизации области неназначенных\n  const customCollisionDetection = args => {\n    const {\n      droppableRects,\n      droppableContainers,\n      active,\n      pointerCoordinates\n    } = args;\n    if (!pointerCoordinates) {\n      return rectIntersection(args);\n    }\n\n    // Сначала проверяем, находимся ли мы в области неназначенных\n    const unassignedContainer = droppableContainers.find(container => container.id === 'unassigned');\n    if (unassignedContainer) {\n      const rect = droppableRects.get('unassigned');\n      if (rect) {\n        const isWithinUnassigned = pointerCoordinates.x >= rect.left && pointerCoordinates.x <= rect.right && pointerCoordinates.y >= rect.top && pointerCoordinates.y <= rect.bottom;\n        if (isWithinUnassigned) {\n          return [{\n            id: 'unassigned'\n          }];\n        }\n      }\n    }\n\n    // Если не в области неназначенных, используем стандартный алгоритм\n    return rectIntersection(args);\n  };\n\n  // Функция для вычисления временных зазоров при вставке рейса\n  const calculateTimeGap = (machineId, insertTime) => {\n    const machineFlights = flightsByMachine[machineId] || [];\n    const sortedFlights = [...machineFlights].sort((a, b) => a.serviceStart - b.serviceStart);\n    if (!activeFlight) return {\n      machineId\n    };\n    const draggedFlightStart = activeFlight.serviceStart;\n    const draggedFlightEnd = activeFlight.serviceEnd;\n    const draggedFlightDuration = draggedFlightEnd - draggedFlightStart;\n    let beforeFlight;\n    let afterFlight;\n\n    // Находим рейсы до и после позиции вставки\n    for (let i = 0; i < sortedFlights.length; i++) {\n      const flight = sortedFlights[i];\n      if (flight.serviceStart <= insertTime) {\n        beforeFlight = flight;\n      }\n      if (flight.serviceStart > insertTime && !afterFlight) {\n        afterFlight = flight;\n        break;\n      }\n    }\n    const result = {\n      machineId\n    };\n\n    // Вычисляем зазор слева от перетаскиваемого рейса (от начала обслуживания)\n    if (beforeFlight) {\n      const beforeGap = draggedFlightStart - beforeFlight.serviceEnd;\n      if (beforeGap >= 0) {\n        result.beforeGap = {\n          flight: beforeFlight,\n          gap: beforeGap,\n          insertTime: beforeFlight.serviceEnd\n        };\n      }\n    } else {\n      // Перед первым рейсом\n      const beforeGap = draggedFlightStart - DAY_START;\n      if (beforeGap >= 0) {\n        result.beforeGap = {\n          gap: beforeGap,\n          insertTime: DAY_START\n        };\n      }\n    }\n\n    // Вычисляем зазор справа от перетаскиваемого рейса (от конца обслуживания)\n    if (afterFlight) {\n      const afterGap = afterFlight.serviceStart - draggedFlightEnd;\n      if (afterGap >= 0) {\n        result.afterGap = {\n          flight: afterFlight,\n          gap: afterGap,\n          insertTime: draggedFlightEnd\n        };\n      }\n    } else {\n      // После последнего рейса\n      const afterGap = DAY_END - draggedFlightEnd;\n      if (afterGap >= 0) {\n        result.afterGap = {\n          gap: afterGap,\n          insertTime: draggedFlightEnd\n        };\n      }\n    }\n    return result;\n  };\n  const handleDragStart = event => {\n    const {\n      active\n    } = event;\n    const flight = flights.find(f => f.id === active.id);\n    if (flight) {\n      setActiveFlight(flight);\n      setIsDragging(true);\n      // Блокируем скролл страницы во время перетаскивания\n      document.body.style.overflow = 'hidden';\n    }\n  };\n  const handleDragOver = event => {\n    var _over$data$current;\n    const {\n      active,\n      over\n    } = event;\n    if (!active || !over || !activeFlight) return;\n\n    // Если наводимся на машину, вычисляем временной зазор\n    if (((_over$data$current = over.data.current) === null || _over$data$current === void 0 ? void 0 : _over$data$current.type) === 'machine') {\n      const machineId = over.id;\n\n      // Используем время начала обслуживания рейса как позицию вставки\n      const currentTime = activeFlight.serviceStart;\n      const gapInfo = calculateTimeGap(machineId, currentTime);\n      setTimeGapInfo(gapInfo);\n      setHoverMachineId(machineId);\n    } else {\n      // Сбрасываем информацию о зазоре\n      setTimeGapInfo(null);\n      setHoverMachineId(null);\n    }\n  };\n  const handleDragEnd = async event => {\n    var _over$data$current2, _over$data$current3, _over$data$current4;\n    const {\n      active,\n      over\n    } = event;\n    setActiveFlight(null);\n    setIsDragging(false);\n    setTimeGapInfo(null); // Очищаем информацию о зазоре\n    setHoverMachineId(null);\n    // Восстанавливаем скролл страницы\n    document.body.style.overflow = '';\n    console.log('🎯 DragEnd:', {\n      activeId: active.id,\n      overId: over === null || over === void 0 ? void 0 : over.id,\n      overType: over === null || over === void 0 ? void 0 : (_over$data$current2 = over.data.current) === null || _over$data$current2 === void 0 ? void 0 : _over$data$current2.type\n    });\n    if (!over) {\n      return;\n    }\n    const flightId = active.id;\n    const flight = flights.find(f => f.id === flightId);\n    if (!flight) return;\n\n    // Если перетаскиваем на машину\n    if (((_over$data$current3 = over.data.current) === null || _over$data$current3 === void 0 ? void 0 : _over$data$current3.type) === 'machine') {\n      const machineId = over.id;\n      const machine = machines.find(m => m.id === machineId);\n\n      // Проверяем, действительно ли это изменение (не на ту же машину)\n      if (flight.vehicleId === machineId) {\n        return; // Никаких изменений не было\n      }\n\n      // Проверяем, есть ли уже изменение для этого рейса\n      const existingChangeIndex = pendingChanges.findIndex(c => c.flightId === flight.id);\n      if (existingChangeIndex >= 0) {\n        // Обновляем существующее изменение\n        const existingChange = pendingChanges[existingChangeIndex];\n\n        // Если возвращаем на исходную машину, удаляем изменение\n        if (existingChange.originalVehicleId === machineId) {\n          setPendingChanges(prev => prev.filter(c => c.flightId !== flight.id));\n          setFlights(prev => prev.map(f => f.id === flightId ? {\n            ...f,\n            vehicleId: machineId\n          } : f));\n          return;\n        }\n\n        // Иначе обновляем изменение\n        const updatedChange = {\n          ...existingChange,\n          toMachine: (machine === null || machine === void 0 ? void 0 : machine.name) || machineId,\n          newVehicleId: machineId\n        };\n        setPendingChanges(prev => prev.map(c => c.id === existingChange.id ? updatedChange : c));\n      } else {\n        var _machines$find;\n        // Создаем новое изменение\n        const changeId = Date.now().toString();\n        const change = {\n          id: changeId,\n          flightId: flight.id,\n          flightNo: flight.flightNo,\n          fromMachine: flight.vehicleId ? (_machines$find = machines.find(m => m.id === flight.vehicleId)) === null || _machines$find === void 0 ? void 0 : _machines$find.name : 'Неназначенные',\n          toMachine: (machine === null || machine === void 0 ? void 0 : machine.name) || machineId,\n          originalVehicleId: flight.vehicleId,\n          newVehicleId: machineId\n        };\n        setPendingChanges(prev => [...prev, change]);\n      }\n\n      // Локально обновляем рейс\n      setFlights(prev => prev.map(f => f.id === flightId ? {\n        ...f,\n        vehicleId: machineId\n      } : f));\n    }\n\n    // Если перетаскиваем в неназначенные\n    if (((_over$data$current4 = over.data.current) === null || _over$data$current4 === void 0 ? void 0 : _over$data$current4.type) === 'unassigned') {\n      // Проверяем, действительно ли это изменение (не был ли уже неназначенным)\n      if (!flight.vehicleId) {\n        return; // Никаких изменений не было\n      }\n\n      // Проверяем, есть ли уже изменение для этого рейса\n      const existingChangeIndex = pendingChanges.findIndex(c => c.flightId === flight.id);\n      if (existingChangeIndex >= 0) {\n        const existingChange = pendingChanges[existingChangeIndex];\n\n        // Если возвращаем к исходному неназначенному состоянию, удаляем изменение\n        if (!existingChange.originalVehicleId) {\n          setPendingChanges(prev => prev.filter(c => c.flightId !== flight.id));\n          setFlights(prev => prev.map(f => f.id === flightId ? {\n            ...f,\n            vehicleId: ''\n          } : f));\n          return;\n        }\n\n        // Иначе обновляем изменение\n        const updatedChange = {\n          ...existingChange,\n          toMachine: 'Неназначенные',\n          newVehicleId: ''\n        };\n        setPendingChanges(prev => prev.map(c => c.id === existingChange.id ? updatedChange : c));\n      } else {\n        const changeId = Date.now().toString();\n        const machine = machines.find(m => m.id === flight.vehicleId);\n        const change = {\n          id: changeId,\n          flightId: flight.id,\n          flightNo: flight.flightNo,\n          fromMachine: (machine === null || machine === void 0 ? void 0 : machine.name) || flight.vehicleId,\n          toMachine: 'Неназначенные',\n          originalVehicleId: flight.vehicleId,\n          newVehicleId: ''\n        };\n        setPendingChanges(prev => [...prev, change]);\n      }\n\n      // Локально обновляем рейс\n      setFlights(prev => prev.map(f => f.id === flightId ? {\n        ...f,\n        vehicleId: ''\n      } : f));\n    }\n  };\n\n  // Функции для работы с изменениями назначений\n  const handleRemoveChange = changeId => {\n    const change = pendingChanges.find(c => c.id === changeId);\n    if (!change) return;\n\n    // Возвращаем рейс к оригинальному состоянию\n    setFlights(prev => prev.map(f => f.id === change.flightId ? {\n      ...f,\n      vehicleId: change.originalVehicleId || ''\n    } : f));\n\n    // Удаляем изменение из списка\n    setPendingChanges(prev => prev.filter(c => c.id !== changeId));\n  };\n  const handleApplyChanges = async () => {\n    try {\n      setLoading(true);\n\n      // Применяем все изменения на сервере\n      for (const change of pendingChanges) {\n        if (change.newVehicleId) {\n          await flightAPI.assignFlight(change.flightId, change.newVehicleId);\n        } else {\n          await flightAPI.unassignFlight(change.flightId);\n        }\n      }\n\n      // Обновляем данные с сервера\n      const updatedFlights = await flightAPI.getFlights();\n      setFlights(updatedFlights);\n\n      // Очищаем список изменений\n      setPendingChanges([]);\n      setShowSaveDialog(false);\n    } catch (err) {\n      setError('Ошибка применения изменений');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCancelChanges = () => {\n    // Возвращаем все рейсы к оригинальному состоянию\n    let updatedFlights = [...flights];\n    pendingChanges.forEach(change => {\n      updatedFlights = updatedFlights.map(f => f.id === change.flightId ? {\n        ...f,\n        vehicleId: change.originalVehicleId || ''\n      } : f);\n    });\n    setFlights(updatedFlights);\n    setPendingChanges([]);\n    setShowSaveDialog(false);\n  };\n  // Функции для работы с изменениями назначений\n\n  // Функции для работы с множественным выбором и скобками\n  const toggleFlightSelection = flightId => {\n    const flight = flights.find(f => f.id === flightId);\n    if (!flight) return;\n    setSelectedFlights(prev => {\n      const newSelected = new Set(prev);\n      if (newSelected.has(flightId)) {\n        // Убираем рейс из выбора\n        newSelected.delete(flightId);\n      } else {\n        // Добавляем рейс в выбор, но только если он на той же машине\n        if (newSelected.size > 0) {\n          var _selectedFlightObject;\n          // Проверяем что все уже выбранные рейсы на той же машине\n          const selectedFlightIds = Array.from(newSelected);\n          const selectedFlightObjects = flights.filter(f => selectedFlightIds.includes(f.id));\n          const firstMachine = (_selectedFlightObject = selectedFlightObjects[0]) === null || _selectedFlightObject === void 0 ? void 0 : _selectedFlightObject.vehicleId;\n          if (flight.vehicleId !== firstMachine) {\n            // Показываем сообщение и не добавляем рейс\n            console.log('Нельзя выбрать рейсы с разных машин');\n            return prev; // Возвращаем предыдущий набор без изменений\n          }\n        }\n\n        // Все проверки пройдены - добавляем рейс\n        newSelected.add(flightId);\n      }\n      return newSelected;\n    });\n  };\n  const clearSelection = () => {\n    setSelectedFlights(new Set());\n    setIsMultiSelectMode(false);\n    setSelectedChain(null);\n  };\n  const handleChainClick = chainId => {\n    setSelectedChain(selectedChain === chainId ? null : chainId);\n  };\n  const breakSelectedChain = () => {\n    if (!selectedChain) {\n      alert('Выберите скобку для разбития, кликнув по ней');\n      return;\n    }\n    breakChain(selectedChain);\n    setSelectedChain(null);\n  };\n  const createChainFromSelected = () => {\n    if (selectedFlights.size < 2) {\n      alert('Выберите минимум 2 рейса для создания скобки');\n      return;\n    }\n\n    // Проверяем что все выбранные рейсы на одной машине\n    const selectedFlightIds = Array.from(selectedFlights);\n    const selectedFlightObjects = flights.filter(f => selectedFlightIds.includes(f.id));\n    if (selectedFlightObjects.length === 0) return;\n    const firstMachine = selectedFlightObjects[0].vehicleId;\n    const allOnSameMachine = selectedFlightObjects.every(f => f.vehicleId === firstMachine);\n    if (!allOnSameMachine) {\n      alert('Все рейсы должны быть на одной машине для создания скобки');\n      return;\n    }\n    if (!firstMachine) {\n      alert('Нельзя создать скобку для неназначенных рейсов');\n      return;\n    }\n\n    // Создаем новый chainId\n    const newChainId = `chain-${Date.now()}`;\n\n    // Обновляем рейсы\n    setFlights(prev => prev.map(f => selectedFlightIds.includes(f.id) ? {\n      ...f,\n      chainId: newChainId\n    } : f));\n\n    // Автоматически назначаем автолифт для новой цепочки на основе машины\n    autoAssignAutolift(newChainId, firstMachine);\n\n    // Очищаем выбор\n    clearSelection();\n  };\n  const breakChain = chainId => {\n    if (!chainId || chainId.startsWith('solo-')) return;\n\n    // Убираем chainId у всех рейсов в этой скобке\n    setFlights(prev => prev.map(f => f.chainId === chainId ? {\n      ...f,\n      chainId: ''\n    } : f));\n  };\n  const handleFlightClick = (event, flightId) => {\n    if (event.shiftKey) {\n      setIsMultiSelectMode(true);\n      const flight = flights.find(f => f.id === flightId);\n      if (!flight) return;\n\n      // Проверяем совместимость с уже выбранными рейсами\n      if (selectedFlights.size > 0) {\n        var _selectedFlightObject2;\n        const selectedFlightIds = Array.from(selectedFlights);\n        const selectedFlightObjects = flights.filter(f => selectedFlightIds.includes(f.id));\n        const firstMachine = (_selectedFlightObject2 = selectedFlightObjects[0]) === null || _selectedFlightObject2 === void 0 ? void 0 : _selectedFlightObject2.vehicleId;\n        if (flight.vehicleId !== firstMachine) {\n          // Визуальная обратная связь - подсветим неудачную попытку\n          console.log('❌ Нельзя выбрать рейсы с разных машин');\n\n          // Временно подсветим рейс красным\n          const element = event.currentTarget;\n          const originalBorder = element.style.border;\n          element.style.border = '3px solid #DC2626';\n          element.style.backgroundColor = '#FEE2E2';\n          setTimeout(() => {\n            element.style.border = originalBorder;\n            element.style.backgroundColor = '';\n          }, 500);\n          event.preventDefault();\n          event.stopPropagation();\n          return;\n        }\n      }\n      toggleFlightSelection(flightId);\n      event.preventDefault();\n      event.stopPropagation();\n    } else if (!isMultiSelectMode) {\n      // Обычный клик без shift - очищаем выбор\n      clearSelection();\n    }\n  };\n\n  // Функция для назначения машины водителю\n  const handleDriverMachineChange = (driverId, machineId) => {\n    setDrivers(prevDrivers => prevDrivers.map(d => d.id === driverId ? {\n      ...d,\n      machineId: machineId || ''\n    } : {\n      ...d,\n      machineId: d.machineId === machineId ? '' : d.machineId\n    } // Убираем машину у других водителей\n    ));\n  };\n\n  // Функция для проверки превышения времени смены\n  const checkDriverOvertime = driverId => {\n    const driver = drivers.find(d => d.id === driverId);\n    if (!driver || !driver.machineId || driver.machineId === '') return false;\n    const machineFlights = flightsByMachine[driver.machineId] || [];\n    if (machineFlights.length === 0) return false;\n    const firstFlight = machineFlights[0];\n    const lastFlight = machineFlights[machineFlights.length - 1];\n    const shiftTime = getDriverShiftTime(driver.id);\n    return firstFlight.serviceStart < shiftTime.shiftStart || lastFlight.serviceEnd > shiftTime.shiftEnd;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lg\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1229,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    onDragStart: handleDragStart,\n    onDragOver: handleDragOver,\n    onDragEnd: handleDragEnd,\n    onDragCancel: () => {\n      setActiveFlight(null);\n      setIsDragging(false);\n      setTimeGapInfo(null);\n      setHoverMachineId(null);\n      document.body.style.overflow = '';\n    },\n    autoScroll: false,\n    collisionDetection: customCollisionDetection,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen flex flex-col overflow-hidden\",\n      style: {\n        background: 'linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)',\n        cursor: isResizing ? 'ns-resize' : 'default'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shadow-md border-b flex-none z-50\",\n        style: {\n          background: 'linear-gradient(135deg, #e3eef7 0%, #d7e8f0 100%)',\n          height: '32px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-semibold\",\n          style: {\n            margin: 0,\n            lineHeight: '1',\n            color: '#475569'\n          },\n          children: \"\\u0410\\u044D\\u0440\\u043E\\u043C\\u0430\\u0440\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1263,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1255,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-b px-4 py-2 flex-none z-40\",\n        style: {\n          background: 'linear-gradient(135deg, #e3eef7 0%, #d7e8f0 100%)',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onPick,\n              disabled: loading,\n              className: \"px-3 py-1 text-xs font-semibold rounded shadow-sm border transition-all duration-200\",\n              style: {\n                backgroundColor: '#e0f2fe',\n                color: '#0c4a6e',\n                borderColor: '#7dd3fc',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n              },\n              title: \"\\u0418\\u043C\\u043F\\u043E\\u0440\\u0442 CSV \\u0444\\u0430\\u0439\\u043B\\u0430\",\n              children: \"\\u0418\\u043C\\u043F\\u043E\\u0440\\u0442\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1281,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: fileRef,\n              type: \"file\",\n              accept: \".csv\",\n              onChange: onFile,\n              className: \"hidden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1296,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAutoAssign,\n              disabled: loading || flights.length === 0,\n              className: \"px-3 py-1 text-xs font-semibold rounded shadow-sm border transition-all duration-200\",\n              style: {\n                backgroundColor: '#e0f2fe',\n                color: '#0c4a6e',\n                borderColor: '#7dd3fc',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n              },\n              title: \"\\u0410\\u0432\\u0442\\u043E\\u043C\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u043E\\u0435 \\u043D\\u0430\\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 \\u0440\\u0435\\u0439\\u0441\\u043E\\u0432\",\n              children: \"\\u0410\\u0432\\u0442\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1305,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleResetAssign,\n              disabled: loading,\n              className: \"px-3 py-1 text-xs font-semibold rounded shadow-sm border transition-all duration-200\",\n              style: {\n                backgroundColor: '#e0f2fe',\n                color: '#0c4a6e',\n                borderColor: '#7dd3fc',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n              },\n              title: \"\\u0421\\u0431\\u0440\\u043E\\u0441 \\u0432\\u0441\\u0435\\u0445 \\u043D\\u0430\\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0439\",\n              children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1321,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: async () => {\n                console.log('🔄 Перезагружаем данные...');\n                try {\n                  setLoading(true);\n                  const [machinesData, flightsData] = await Promise.all([machineAPI.getMachines(), flightAPI.getFlights()]);\n                  console.log('✅ Обновлены данные - машины:', machinesData.length, 'рейсы:', flightsData.length);\n                  setMachines(machinesData);\n                  setFlights(flightsData);\n                } catch (err) {\n                  console.error('❌ Ошибка обновления:', err);\n                } finally {\n                  setLoading(false);\n                }\n              },\n              disabled: loading,\n              className: \"px-3 py-1 text-xs font-semibold rounded shadow-sm border transition-all duration-200\",\n              style: {\n                backgroundColor: '#e0f2fe',\n                color: '#0c4a6e',\n                borderColor: '#7dd3fc',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n              },\n              title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\",\n              children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1337,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowSaveDialog(true),\n              disabled: loading || pendingChanges.length === 0,\n              className: \"px-3 py-1 text-xs font-semibold rounded shadow-sm border transition-all duration-200\",\n              style: {\n                backgroundColor: pendingChanges.length > 0 ? '#e0f2fe' : '#f1f5f9',\n                color: pendingChanges.length > 0 ? '#0c4a6e' : '#64748b',\n                borderColor: pendingChanges.length > 0 ? '#7dd3fc' : '#cbd5e1',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n              },\n              title: `Сохранить изменения (${pendingChanges.length})`,\n              children: [\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \", pendingChanges.length > 0 && `(${pendingChanges.length})`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1369,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-1 border-l pl-3 ml-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: createChainFromSelected,\n                disabled: selectedFlights.size < 2,\n                className: \"px-3 py-1 text-xs font-medium rounded shadow-sm border transition-all duration-200\",\n                style: {\n                  backgroundColor: selectedFlights.size >= 2 ? '#e0f2fe' : '#f8fafc',\n                  color: selectedFlights.size >= 2 ? '#0369a1' : '#94a3b8',\n                  borderColor: selectedFlights.size >= 2 ? '#7dd3fc' : '#e2e8f0',\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n                },\n                title: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0441\\u043A\\u043E\\u0431\\u043A\\u0443 \\u0438\\u0437 \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0440\\u0435\\u0439\\u0441\\u043E\\u0432 (Shift+\\u043A\\u043B\\u0438\\u043A \\u0434\\u043B\\u044F \\u0432\\u044B\\u0431\\u043E\\u0440\\u0430)\",\n                children: [\"\\u0421\\u043A\\u043E\\u0431\\u043A\\u0430 (\", selectedFlights.size, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1386,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: breakSelectedChain,\n                disabled: !selectedChain,\n                className: \"px-3 py-1 text-xs font-medium rounded shadow-sm border transition-all duration-200\",\n                style: {\n                  backgroundColor: selectedChain ? '#fecaca' : '#f8fafc',\n                  color: selectedChain ? '#dc2626' : '#94a3b8',\n                  borderColor: selectedChain ? '#fca5a5' : '#e2e8f0',\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n                },\n                title: \"\\u0420\\u0430\\u0437\\u0431\\u0438\\u0442\\u044C \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u0443\\u044E \\u0441\\u043A\\u043E\\u0431\\u043A\\u0443 (\\u0441\\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \\u043A\\u043B\\u0438\\u043A\\u043D\\u0438\\u0442\\u0435 \\u043F\\u043E \\u0441\\u043A\\u043E\\u0431\\u043A\\u0435)\",\n                children: \"\\u0420\\u0430\\u0437\\u0431\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1401,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: clearSelection,\n                disabled: selectedFlights.size === 0,\n                className: \"px-3 py-1 text-xs font-medium rounded shadow-sm border transition-all duration-200\",\n                style: {\n                  backgroundColor: selectedFlights.size > 0 ? '#fef3c7' : '#f8fafc',\n                  color: selectedFlights.size > 0 ? '#92400e' : '#94a3b8',\n                  borderColor: selectedFlights.size > 0 ? '#fde68a' : '#e2e8f0',\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n                },\n                title: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C \\u0432\\u044B\\u0431\\u043E\\u0440\",\n                children: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1416,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1385,\n              columnNumber: 13\n            }, this), isMultiSelectMode && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-2 py-1 text-xs font-medium rounded border transition-all duration-200\",\n              style: {\n                backgroundColor: '#fef3c7',\n                color: '#92400e',\n                borderColor: '#fde68a',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n              },\n              title: \"\\u0420\\u0435\\u0436\\u0438\\u043C \\u0432\\u044B\\u0431\\u043E\\u0440\\u0430 \\u0440\\u0435\\u0439\\u0441\\u043E\\u0432 \\u0430\\u043A\\u0442\\u0438\\u0432\\u0435\\u043D. \\u041F\\u0435\\u0440\\u0435\\u0442\\u0430\\u0441\\u043A\\u0438\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043E\\u0442\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u043E. \\u041D\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435 '\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C' \\u0434\\u043B\\u044F \\u0432\\u044B\\u0445\\u043E\\u0434\\u0430.\",\n              children: \"\\uD83C\\uDFAF \\u0420\\u0435\\u0436\\u0438\\u043C \\u0432\\u044B\\u0431\\u043E\\u0440\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1434,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1279,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"px-3 py-1 text-xs font-semibold rounded shadow-sm border transition-all duration-200 flex items-center gap-2 cursor-pointer\",\n              style: {\n                backgroundColor: autoAfterImport ? '#e0f2fe' : '#f8fafc',\n                color: autoAfterImport ? '#0c4a6e' : '#64748b',\n                borderColor: autoAfterImport ? '#7dd3fc' : '#e2e8f0',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n              },\n              title: \"\\u0410\\u0432\\u0442\\u043E\\u043C\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438 \\u043D\\u0430\\u0437\\u043D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0440\\u0435\\u0439\\u0441\\u044B \\u043F\\u043E\\u0441\\u043B\\u0435 \\u0438\\u043C\\u043F\\u043E\\u0440\\u0442\\u0430\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: autoAfterImport,\n                onChange: e => setAutoAfterImport(e.target.checked),\n                className: \"hidden\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1461,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"w-3 h-3 rounded border flex items-center justify-center text-xs\",\n                style: {\n                  backgroundColor: autoAfterImport ? '#0c4a6e' : 'transparent',\n                  borderColor: autoAfterImport ? '#0c4a6e' : '#94a3b8',\n                  color: 'white'\n                },\n                children: autoAfterImport && '✓'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1467,\n                columnNumber: 15\n              }, this), \"\\u0410\\u0432\\u0442\\u043E\\u043D\\u0430\\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1451,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: horizontalScale,\n                onChange: e => setHorizontalScale(Number(e.target.value)),\n                className: \"px-3 py-1 text-xs font-semibold rounded shadow-sm border transition-all duration-200\",\n                style: {\n                  backgroundColor: '#e0f2fe',\n                  color: '#0c4a6e',\n                  borderColor: '#7dd3fc',\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n                  cursor: 'pointer'\n                },\n                title: \"\\u041C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431 \\u0434\\u0438\\u0430\\u0433\\u0440\\u0430\\u043C\\u043C\\u044B\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 0.5,\n                  children: \"\\u041C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431 50%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1494,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 1,\n                  children: \"\\u041C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431 100%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1495,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 1.5,\n                  children: \"\\u041C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431 150%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1496,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 2,\n                  children: \"\\u041C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431 200%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1497,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1481,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1480,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1449,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1277,\n          columnNumber: 9\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-1 p-2 rounded text-xs\",\n          style: {\n            background: 'linear-gradient(135deg, #fee2e2 0%, #fecaca 100%)',\n            color: '#dc2626',\n            border: '1px solid #fca5a5',\n            boxShadow: '0 1px 2px rgba(220, 38, 38, 0.1)'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1504,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1273,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex flex-col min-h-0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 flex flex-col min-h-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-none border-b flex z-30\",\n            style: {\n              background: 'linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)',\n              borderBottomColor: '#cbd5e1',\n              boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\n              height: `${laneH}px`,\n              boxSizing: 'border-box'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-none flex\",\n              style: {\n                width: `${TOTAL_DRIVERS_WIDTH}px`,\n                borderRight: '1px solid #e5e7eb'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-none px-2 py-1 flex items-center justify-center\",\n                style: {\n                  width: `${DRIVER_INFO_WIDTH}px`,\n                  height: '100%',\n                  borderRight: '1px solid #cbd5e1',\n                  background: 'linear-gradient(135deg, #e3eef7 0%, #d7e8f0 100%)',\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.1), inset -1px 0 3px rgba(0,0,0,0.05)',\n                  boxSizing: 'border-box'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs font-semibold\",\n                  style: {\n                    color: '#475569'\n                  },\n                  children: \"\\u0420\\u0430\\u0431\\u043E\\u0442\\u043D\\u0438\\u043A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1544,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1533,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-none px-2 py-1 flex items-center justify-center\",\n                style: {\n                  width: `${MACHINE_SELECT_WIDTH}px`,\n                  height: '100%',\n                  borderRight: '1px solid #cbd5e1',\n                  background: 'linear-gradient(135deg, #e3eef7 0%, #d7e8f0 100%)',\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.1), inset -1px 0 3px rgba(0,0,0,0.05)',\n                  boxSizing: 'border-box'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs font-semibold\",\n                  style: {\n                    color: '#475569'\n                  },\n                  children: \"\\u0410\\u0432\\u0442\\u043E\\u043B\\u0438\\u0444\\u0442\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1563,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1552,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-none px-2 py-1 flex items-center justify-center\",\n                style: {\n                  width: `${SHIFT_TIME_WIDTH}px`,\n                  height: '100%',\n                  borderRight: '1px solid #cbd5e1',\n                  background: 'linear-gradient(135deg, #e3eef7 0%, #d7e8f0 100%)',\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.1), inset -1px 0 3px rgba(0,0,0,0.05)',\n                  boxSizing: 'border-box'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs font-semibold\",\n                  style: {\n                    color: '#475569'\n                  },\n                  children: \"\\u0412\\u0440\\u0435\\u043C\\u044F \\u0441\\u043C\\u0435\\u043D\\u044B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1582,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1571,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-none px-2 py-1 flex items-center justify-center\",\n                style: {\n                  width: `${WORK_DURATION_WIDTH}px`,\n                  height: '100%',\n                  background: 'linear-gradient(135deg, #e3eef7 0%, #d7e8f0 100%)',\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.1), inset -1px 0 3px rgba(0,0,0,0.05)',\n                  boxSizing: 'border-box'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs font-semibold\",\n                  style: {\n                    color: '#475569'\n                  },\n                  children: \"\\u0394t\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1600,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1590,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1528,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: footRef,\n              className: \"flex-1 overflow-x-auto overflow-y-hidden\",\n              style: {\n                height: `${laneH}px`,\n                boxSizing: 'border-box'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'relative',\n                  width: totalWidth,\n                  height: '100%',\n                  background: 'linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%)',\n                  boxShadow: 'inset 0 1px 3px rgba(0,0,0,0.1)'\n                },\n                children: [gridLines.map(minutes => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    position: 'absolute',\n                    left: (minutes - DAY_START) * pxPerMin,\n                    top: 0,\n                    bottom: 0,\n                    width: '1px',\n                    backgroundColor: minutes % 60 === 0 ? '#64748b' : '#cbd5e1',\n                    display: 'flex',\n                    alignItems: 'flex-end',\n                    justifyContent: 'center',\n                    paddingBottom: '2px',\n                    boxShadow: minutes % 60 === 0 ? '0 0 2px rgba(100,116,139,0.3)' : 'none'\n                  },\n                  children: minutes % 60 === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: '8px',\n                      color: '#475569',\n                      backgroundColor: 'rgba(255,255,255,0.9)',\n                      padding: '1px 3px',\n                      borderRadius: '2px',\n                      border: '1px solid #cbd5e1',\n                      fontWeight: '500',\n                      textShadow: '0 1px 1px rgba(255,255,255,0.8)',\n                      boxShadow: '0 1px 2px rgba(0,0,0,0.1)'\n                    },\n                    children: toHHMM(minutes)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1639,\n                    columnNumber: 27\n                  }, this)\n                }, minutes, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1622,\n                  columnNumber: 23\n                }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    position: 'absolute',\n                    left: nowLeft,\n                    top: 0,\n                    bottom: 0,\n                    width: '2px',\n                    background: 'linear-gradient(180deg, #ef4444 0%, #dc2626 100%)',\n                    zIndex: 10,\n                    boxShadow: '0 0 8px rgba(239,68,68,0.6), 0 0 4px rgba(239,68,68,0.8)'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1657,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1614,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1609,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1520,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 overflow-y-auto\",\n            style: {\n              maxHeight: 'calc(100vh - 200px)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex\",\n              style: {\n                minHeight: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                ref: driversRef,\n                className: \"flex-none bg-white sticky left-0 z-10\",\n                style: {\n                  width: `${TOTAL_DRIVERS_WIDTH}px`,\n                  borderRight: '1px solid #e5e7eb',\n                  boxShadow: '2px 0 8px rgba(0,0,0,0.1)'\n                },\n                children: drivers.map((driver, index) => {\n                  var _machines$find2;\n                  const hasNoMachine = !driver.machineId || driver.machineId === '';\n                  const hasOvertime = checkDriverOvertime(driver.id);\n                  const machine = driver.machineId && driver.machineId !== '' ? machines.find(m => m.id === driver.machineId) : null;\n                  const layerCount = machine ? getLayerCount(machine.id) : 1;\n                  const flightHeight = laneH - 12;\n                  const layerSpacing = flightHeight + 6;\n                  const dynamicLaneH = layerCount === 1 ? laneH : Math.max(laneH, layerCount * layerSpacing + 12);\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"border-b border-gray-200 flex\",\n                    style: {\n                      height: dynamicLaneH,\n                      boxSizing: 'border-box'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `flex-none px-2 py-1 ${hasOvertime ? 'bg-red-100' : 'bg-white'} flex flex-col justify-center`,\n                      style: {\n                        width: `${DRIVER_INFO_WIDTH}px`,\n                        borderRight: '1px solid #e5e7eb',\n                        boxSizing: 'border-box'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          fontSize: '11px',\n                          fontWeight: '600',\n                          color: '#111827',\n                          lineHeight: '1.2',\n                          marginBottom: '2px'\n                        },\n                        children: formatDriverName(driver.name)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1707,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          fontSize: '9px',\n                          color: '#6b7280',\n                          lineHeight: '1.2'\n                        },\n                        children: [toHHMM(driver.shiftStart), \" - \", toHHMM(driver.shiftEnd)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1718,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1698,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `flex-none px-2 py-1 ${hasNoMachine ? 'bg-red-100' : 'bg-white'} flex flex-col justify-center`,\n                      style: {\n                        width: `${MACHINE_SELECT_WIDTH}px`,\n                        borderRight: '1px solid #e5e7eb',\n                        boxSizing: 'border-box'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                        value: driver.machineId || '',\n                        onChange: e => handleDriverMachineChange(driver.id, e.target.value),\n                        className: \"w-full text-xs border border-gray-300 rounded px-2 py-1 bg-white mb-1\",\n                        style: {\n                          fontSize: '10px'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043C\\u0430\\u0448\\u0438\\u043D\\u0443\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1742,\n                          columnNumber: 27\n                        }, this), machines.map(machine => /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: machine.id,\n                          children: machine.name\n                        }, machine.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1744,\n                          columnNumber: 29\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1736,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          fontSize: '9px',\n                          color: '#6b7280',\n                          lineHeight: '1.2'\n                        },\n                        children: driver.machineId && driver.machineId !== '' ? ((_machines$find2 = machines.find(m => m.id === driver.machineId)) === null || _machines$find2 === void 0 ? void 0 : _machines$find2.name) || 'Машина не найдена' : 'Машина не назначена'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1751,\n                        columnNumber: 25\n                      }, this), hasNoMachine && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-xs text-red-600\",\n                        style: {\n                          fontSize: '8px',\n                          lineHeight: '1.2'\n                        },\n                        children: \"\\u26A0\\uFE0F \\u041D\\u0430\\u0437\\u043D\\u0430\\u0447\\u0438\\u0442\\u044C \\u043C\\u0430\\u0448\\u0438\\u043D\\u0443\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1760,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1728,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex-none bg-white flex flex-col justify-center items-center gap-1\",\n                      style: {\n                        width: `${SHIFT_TIME_WIDTH}px`,\n                        borderRight: '1px solid #e5e7eb',\n                        boxSizing: 'border-box',\n                        padding: '1px 2px'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"time\",\n                        value: toHHMM(getDriverShiftTime(driver.id).shiftStart),\n                        onChange: e => {\n                          const [hours, minutes] = e.target.value.split(':').map(Number);\n                          updateDriverShiftTime(driver.id, 'shiftStart', hours * 60 + minutes);\n                        },\n                        className: \"text-xs border border-gray-300 rounded bg-white\",\n                        style: {\n                          fontSize: '9px',\n                          height: '16px',\n                          width: '65px',\n                          padding: '1px 3px',\n                          textAlign: 'center'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1777,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"time\",\n                        value: toHHMM(getDriverShiftTime(driver.id).shiftEnd),\n                        onChange: e => {\n                          const [hours, minutes] = e.target.value.split(':').map(Number);\n                          updateDriverShiftTime(driver.id, 'shiftEnd', hours * 60 + minutes);\n                        },\n                        className: \"text-xs border border-gray-300 rounded bg-white\",\n                        style: {\n                          fontSize: '9px',\n                          height: '16px',\n                          width: '65px',\n                          padding: '1px 3px',\n                          textAlign: 'center'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1795,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1767,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex-none px-1 py-1 bg-gray-50 flex items-center justify-center\",\n                      style: {\n                        width: `${WORK_DURATION_WIDTH}px`,\n                        boxSizing: 'border-box'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-center\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            fontSize: '11px',\n                            fontWeight: '600',\n                            color: '#374151',\n                            lineHeight: '1.2'\n                          },\n                          children: (() => {\n                            const shiftTime = getDriverShiftTime(driver.id);\n                            return calculateShiftDuration(shiftTime.shiftStart, shiftTime.shiftEnd);\n                          })()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1822,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            fontSize: '8px',\n                            color: '#6b7280',\n                            lineHeight: '1.2'\n                          },\n                          children: \"\\u0447\\u0430\\u0441\\u043E\\u0432\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1833,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1821,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1814,\n                      columnNumber: 23\n                    }, this)]\n                  }, driver.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1696,\n                    columnNumber: 21\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1677,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: mainRef,\n                className: \"flex-1 bg-gray-50 overflow-x-auto\",\n                style: {\n                  boxShadow: 'inset 2px 0 8px rgba(0,0,0,0.05)'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: totalWidth,\n                    minHeight: '100%'\n                  },\n                  children: drivers.map((driver, index) => {\n                    var _chainsByMachine$mach;\n                    const machine = driver.machineId && driver.machineId !== '' ? machines.find(m => m.id === driver.machineId) : null;\n                    const machineFlights = machine ? flightsByMachine[machine.id] || [] : [];\n                    const layerCount = machine ? getLayerCount(machine.id) : 1;\n                    const flightHeight = laneH - 12;\n                    const layerSpacing = flightHeight + 6;\n                    const dynamicLaneH = layerCount === 1 ? laneH : Math.max(laneH, layerCount * layerSpacing + 12);\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"border-b border-gray-200\",\n                      style: {\n                        height: dynamicLaneH,\n                        boxSizing: 'border-box'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          position: 'relative',\n                          width: totalWidth,\n                          height: '100%',\n                          boxSizing: 'border-box'\n                        },\n                        children: [gridLines.map(minutes => /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: 'absolute',\n                            left: (minutes - DAY_START) * pxPerMin,\n                            top: 0,\n                            bottom: 0,\n                            width: '1px',\n                            backgroundColor: minutes % 60 === 0 ? '#9ca3af' : '#e5e7eb',\n                            opacity: 0.7,\n                            zIndex: 1\n                          }\n                        }, minutes, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1867,\n                          columnNumber: 29\n                        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: 'absolute',\n                            left: (getDriverShiftTime(driver.id).shiftStart - DAY_START) * pxPerMin,\n                            top: 0,\n                            width: (getDriverShiftTime(driver.id).shiftEnd - getDriverShiftTime(driver.id).shiftStart) * pxPerMin,\n                            height: '100%',\n                            backgroundColor: '#87ceeb',\n                            // Небесно-голубой\n                            opacity: 0.15,\n                            // Уменьшенная прозрачность для лучшей читаемости\n                            borderRadius: '2px',\n                            zIndex: 1\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1883,\n                          columnNumber: 27\n                        }, this), timeGapInfo && timeGapInfo.machineId === (machine === null || machine === void 0 ? void 0 : machine.id) && activeFlight && /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: [timeGapInfo.beforeGap && /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              position: 'absolute',\n                              left: (timeGapInfo.beforeGap.insertTime - DAY_START) * pxPerMin,\n                              top: '50%',\n                              transform: 'translateY(-50%)',\n                              width: Math.max(30, timeGapInfo.beforeGap.gap * pxPerMin),\n                              height: 10,\n                              backgroundColor: timeGapInfo.beforeGap.gap < 25 ? 'rgba(239, 68, 68, 0.15)' // Красный если < 25 мин (более прозрачный)\n                              : 'rgba(107, 114, 128, 0.15)',\n                              // Серый если >= 25 мин (более прозрачный)\n                              border: timeGapInfo.beforeGap.gap < 25 ? '1px dashed #ef4444' : '1px dashed #6b7280',\n                              borderRadius: '3px',\n                              zIndex: 15,\n                              display: 'flex',\n                              alignItems: 'center',\n                              justifyContent: 'center',\n                              fontSize: '8px',\n                              color: timeGapInfo.beforeGap.gap < 25 ? '#dc2626' : '#374151',\n                              fontWeight: '500'\n                            },\n                            children: [Math.floor(timeGapInfo.beforeGap.gap), \"\\u043C\\u0438\\u043D\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1902,\n                            columnNumber: 33\n                          }, this), timeGapInfo.afterGap && /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              position: 'absolute',\n                              left: (timeGapInfo.afterGap.insertTime - DAY_START) * pxPerMin,\n                              top: '30%',\n                              transform: 'translateY(-50%)',\n                              width: Math.max(30, timeGapInfo.afterGap.gap * pxPerMin),\n                              height: 10,\n                              backgroundColor: timeGapInfo.afterGap.gap < 25 ? 'rgba(239, 68, 68, 0.15)' // Красный если < 25 мин (более прозрачный)\n                              : 'rgba(107, 114, 128, 0.15)',\n                              // Серый если >= 25 мин (более прозрачный)\n                              border: timeGapInfo.afterGap.gap < 25 ? '1px dashed #ef4444' : '1px dashed #6b7280',\n                              borderRadius: '3px',\n                              zIndex: 15,\n                              display: 'flex',\n                              alignItems: 'center',\n                              justifyContent: 'center',\n                              fontSize: '8px',\n                              color: timeGapInfo.afterGap.gap < 25 ? '#dc2626' : '#374151',\n                              fontWeight: '500'\n                            },\n                            children: [Math.floor(timeGapInfo.afterGap.gap), \"\\u043C\\u0438\\u043D\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1932,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true), machine && /*#__PURE__*/_jsxDEV(DroppableMachineSlot, {\n                          machine: machine,\n                          laneH: dynamicLaneH,\n                          totalWidth: totalWidth,\n                          children: [(_chainsByMachine$mach = chainsByMachine[machine.id]) === null || _chainsByMachine$mach === void 0 ? void 0 : _chainsByMachine$mach.map((chain, idx) => {\n                            const xPos = (chain.start - DAY_START) * pxPerMin;\n                            const xPosEnd = (chain.end - DAY_START) * pxPerMin;\n                            const width = Math.max(4, xPosEnd - xPos);\n                            const currentChainWindows = chainWindows[chain.chainId] || {};\n\n                            // Получаем границы цепочки по слоям\n                            const layerBounds = getChainLayerBounds(chain.chainId, machine.id);\n                            return /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"absolute border-2 border-purple-500\",\n                                style: {\n                                  left: xPos,\n                                  width: width,\n                                  top: layerBounds.top,\n                                  // Позиционируем от верхнего слоя\n                                  height: layerBounds.height,\n                                  // Высота охватывает все слои\n                                  borderRadius: '4px',\n                                  backgroundColor: selectedChain === chain.chainId ? 'rgba(239, 68, 68, 0.2)' // Красноватый для выбранной\n                                  : 'rgba(147, 51, 234, 0.1)',\n                                  // Обычный фиолетовый\n                                  border: selectedChain === chain.chainId ? '2px solid #EF4444' // Красная граница для выбранной\n                                  : '2px solid #9333EA',\n                                  // Фиолетовая граница\n                                  zIndex: 1,\n                                  cursor: 'pointer'\n                                },\n                                onClick: () => handleChainClick(chain.chainId),\n                                title: \"\\u041A\\u043B\\u0438\\u043A\\u043D\\u0438\\u0442\\u0435 \\u0434\\u043B\\u044F \\u0432\\u044B\\u0431\\u043E\\u0440\\u0430 \\u0441\\u043A\\u043E\\u0431\\u043A\\u0438, \\u0437\\u0430\\u0442\\u0435\\u043C \\u043D\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435 '\\u0420\\u0430\\u0437\\u0431\\u0438\\u0442\\u044C \\u0441\\u043A\\u043E\\u0431\\u043A\\u0443' \\u0432 \\u043F\\u0430\\u043D\\u0435\\u043B\\u0438 \\u0443\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1981,\n                                columnNumber: 37\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                style: {\n                                  position: 'absolute',\n                                  left: xPos - 2,\n                                  // Немного левее начала полосы\n                                  top: layerBounds.top + layerBounds.height / 2,\n                                  // Центрируем по высоте цепочки\n                                  transform: 'translateY(-50%)',\n                                  height: 15,\n                                  // Меньше высоты полосы\n                                  minWidth: '40px',\n                                  backgroundColor: 'rgba(5, 150, 105, 0.7)',\n                                  // Полупрозрачный зеленый\n                                  color: 'white',\n                                  borderRadius: '3px',\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  justifyContent: 'center',\n                                  fontSize: '9px',\n                                  fontWeight: '600',\n                                  zIndex: 5,\n                                  border: '1px solid rgba(4, 120, 87, 0.8)'\n                                },\n                                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                                  value: currentChainWindows.loadingWindow || '',\n                                  onChange: e => {\n                                    const newValue = e.target.value ? Number(e.target.value) : undefined;\n                                    setChainWindows(prev => ({\n                                      ...prev,\n                                      [chain.chainId]: {\n                                        ...prev[chain.chainId],\n                                        loadingWindow: newValue\n                                      }\n                                    }));\n                                  },\n                                  style: {\n                                    backgroundColor: 'transparent',\n                                    border: 'none',\n                                    color: 'white',\n                                    fontSize: '9px',\n                                    fontWeight: '600',\n                                    outline: 'none',\n                                    cursor: 'pointer',\n                                    width: '100%',\n                                    textAlign: 'center'\n                                  },\n                                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                    value: \"\",\n                                    style: {\n                                      color: '#000'\n                                    },\n                                    children: \"\\u2014\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2047,\n                                    columnNumber: 41\n                                  }, this), Array.from({\n                                    length: 19\n                                  }, (_, i) => i + 1).map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n                                    value: num,\n                                    style: {\n                                      color: '#000'\n                                    },\n                                    children: num\n                                  }, num, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2049,\n                                    columnNumber: 43\n                                  }, this))]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 2023,\n                                  columnNumber: 39\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 2003,\n                                columnNumber: 37\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                style: {\n                                  position: 'absolute',\n                                  left: xPos + width - 38,\n                                  // Немного левее конца полосы (ширина селектора ~40px)\n                                  top: layerBounds.top + layerBounds.height / 2,\n                                  // Центрируем по высоте цепочки\n                                  transform: 'translateY(-50%)',\n                                  height: 15,\n                                  // Меньше высоты полосы\n                                  minWidth: '40px',\n                                  backgroundColor: 'rgba(220, 38, 38, 0.7)',\n                                  color: 'white',\n                                  borderRadius: '3px',\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  justifyContent: 'center',\n                                  fontSize: '9px',\n                                  fontWeight: '600',\n                                  zIndex: 5,\n                                  border: '1px solid #B91C1C'\n                                },\n                                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                                  value: currentChainWindows.unloadingWindow || '',\n                                  onChange: e => {\n                                    const newValue = e.target.value ? Number(e.target.value) : undefined;\n                                    setChainWindows(prev => ({\n                                      ...prev,\n                                      [chain.chainId]: {\n                                        ...prev[chain.chainId],\n                                        unloadingWindow: newValue\n                                      }\n                                    }));\n                                  },\n                                  style: {\n                                    backgroundColor: 'transparent',\n                                    border: 'none',\n                                    color: 'white',\n                                    fontSize: '9px',\n                                    fontWeight: '600',\n                                    outline: 'none',\n                                    cursor: 'pointer',\n                                    width: '100%',\n                                    textAlign: 'center'\n                                  },\n                                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                    value: \"\",\n                                    style: {\n                                      color: '#000'\n                                    },\n                                    children: \"\\u2014\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2099,\n                                    columnNumber: 41\n                                  }, this), [20, 21, 22, 23].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n                                    value: num,\n                                    style: {\n                                      color: '#000'\n                                    },\n                                    children: num\n                                  }, num, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2101,\n                                    columnNumber: 43\n                                  }, this))]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 2075,\n                                  columnNumber: 39\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 2055,\n                                columnNumber: 37\n                              }, this), width > 100 && (() => {\n                                // Получаем автолифт по умолчанию для этой цепочки на основе машины\n                                const defaultAutolift = chainAutolifts[chain.chainId] || getAutoliftFromMachine(chain.machineId);\n\n                                // Если автолифт не был назначен ранее, автоматически назначаем\n                                if (!chainAutolifts[chain.chainId] && defaultAutolift) {\n                                  autoAssignAutolift(chain.chainId, chain.machineId);\n                                }\n                                return /*#__PURE__*/_jsxDEV(\"select\", {\n                                  value: defaultAutolift,\n                                  onChange: e => {\n                                    const value = e.target.value;\n                                    setChainAutolifts(prev => ({\n                                      ...prev,\n                                      [chain.chainId]: value\n                                    }));\n                                  },\n                                  style: {\n                                    position: 'absolute',\n                                    left: xPos + width / 2,\n                                    top: '50%',\n                                    transform: 'translate(-50%, -50%)',\n                                    fontSize: '9px',\n                                    color: selectedChain === chain.chainId ? '#DC2626' : '#8B5CF6',\n                                    fontWeight: '600',\n                                    backgroundColor: 'rgba(255, 255, 255, 0.95)',\n                                    border: `1px solid ${selectedChain === chain.chainId ? '#DC2626' : '#8B5CF6'}`,\n                                    borderRadius: '3px',\n                                    padding: '2px 4px',\n                                    minWidth: '60px',\n                                    maxWidth: '80px',\n                                    textAlign: 'center',\n                                    zIndex: 3,\n                                    outline: 'none',\n                                    cursor: 'pointer'\n                                  },\n                                  onClick: e => e.stopPropagation() // Предотвращаем выбор цепочки при клике на поле\n                                  ,\n                                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                    value: \"\",\n                                    style: {\n                                      color: '#000'\n                                    },\n                                    children: \"\\u2014\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2147,\n                                    columnNumber: 43\n                                  }, this), (autolifts.length > 0 ? autolifts : ['133', '135', '136', '139', '140', '141', '149', '150', '151']).map(autolift => /*#__PURE__*/_jsxDEV(\"option\", {\n                                    value: autolift,\n                                    style: {\n                                      color: '#000'\n                                    },\n                                    children: autolift\n                                  }, autolift, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2149,\n                                    columnNumber: 45\n                                  }, this))]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 2117,\n                                  columnNumber: 41\n                                }, this);\n                              })()]\n                            }, `chain-${machine.id}-${chain.chainId}-${idx}`, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1979,\n                              columnNumber: 35\n                            }, this);\n                          }), machineFlights.map((flight, index) => {\n                            const left = (flight.loadStart - DAY_START) * pxPerMin;\n                            const width = Math.max(12, (flight.loadEnd - flight.loadStart) * pxPerMin);\n                            const isPending = pendingChanges.some(c => c.flightId === flight.id);\n                            const flightLayer = machine ? getFlightLayer(flight.id, machine.id) : 0;\n                            const totalLayers = machine ? getLayerCount(machine.id) : 1;\n\n                            // Расчет позиции для центровки в строке\n                            const flightHeight = laneH - 12; // Увеличили высоту рейса\n                            let layerTop = 0;\n                            if (totalLayers === 1) {\n                              // Если только один слой, центрируем в строке\n                              layerTop = 0; // Будет центрироваться через CSS (top: 50%, transform: translateY(-50%))\n                            } else {\n                              // Если несколько слоев, располагаем симметрично\n                              const layerSpacing = flightHeight + 4; // Расстояние между слоями\n                              const totalHeight = totalLayers * layerSpacing;\n                              const centerY = dynamicLaneH / 2;\n                              const startY = centerY - totalHeight / 2;\n                              layerTop = startY + flightLayer * layerSpacing;\n                            }\n\n                            // Определяем позицию в скобке (цепочке)\n                            const flightsInSameChain = machineFlights.filter(f => f.chainId === flight.chainId);\n                            const indexInChain = flightsInSameChain.findIndex(f => f.id === flight.id);\n                            const chainLength = flightsInSameChain.length;\n                            let bracketPosition = 'single';\n                            let showBracket = false;\n                            if (chainLength > 1 && flight.chainId && flight.chainId.trim() !== '') {\n                              showBracket = true;\n                              if (indexInChain === 0) {\n                                bracketPosition = 'start';\n                              } else if (indexInChain === chainLength - 1) {\n                                bracketPosition = 'end';\n                              } else {\n                                bracketPosition = 'middle';\n                              }\n                            }\n\n                            // НЕ показываем окна под рейсами - они будут только на краях скобок\n                            let loadingWindow;\n                            let unloadingWindow;\n                            return /*#__PURE__*/_jsxDEV(DraggableFlight, {\n                              flight: flight,\n                              left: left,\n                              width: width,\n                              laneH: laneH - 6 // Уменьшили отступ: было laneH-12, стало laneH-6 для увеличения высоты\n                              ,\n                              fontPx: fontPx,\n                              isAssigned: true,\n                              isPending: isPending,\n                              status: getFlightStatus(flight),\n                              showBracket: showBracket,\n                              bracketPosition: bracketPosition,\n                              loadingWindow: loadingWindow,\n                              unloadingWindow: unloadingWindow,\n                              onStatusChange: status => updateFlightStatus(flight.flightNo, status),\n                              onClick: handleFlightClick,\n                              isSelected: selectedFlights.has(flight.id),\n                              layerTop: layerTop,\n                              useLayerPositioning: totalLayers > 1 // Включаем слоевое позиционирование для перекрывающихся рейсов\n                            }, flight.id, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2208,\n                              columnNumber: 35\n                            }, this);\n                          })]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1963,\n                          columnNumber: 29\n                        }, this), !machine && /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: 'absolute',\n                            top: 0,\n                            left: 0,\n                            right: 0,\n                            bottom: 0,\n                            backgroundColor: 'rgba(239, 68, 68, 0.1)',\n                            border: '2px dashed #ef4444',\n                            borderRadius: '4px',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            color: '#ef4444',\n                            fontSize: '9px',\n                            // Уменьшили с 12px до 9px\n                            fontWeight: 'bold',\n                            zIndex: 2\n                          },\n                          children: \"\\u041D\\u0430\\u0437\\u043D\\u0430\\u0447\\u044C\\u0442\\u0435 \\u043C\\u0430\\u0448\\u0438\\u043D\\u0443 \\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u044E\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2235,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: 'absolute',\n                            left: nowLeft,\n                            top: 0,\n                            height: '100%',\n                            width: '2px',\n                            backgroundColor: '#ef4444',\n                            zIndex: 10\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2259,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1864,\n                        columnNumber: 25\n                      }, this)\n                    }, driver.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1863,\n                      columnNumber: 23\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1853,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1848,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1675,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1674,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1518,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1516,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed bottom-0 left-0 right-0 border-t-2 border-blue-300 bg-blue-50 z-40\",\n        style: {\n          height: basementHeight,\n          background: 'linear-gradient(135deg, #e3eef7 0%, #d7e8f0 100%)',\n          boxShadow: '0 -4px 8px rgba(0,0,0,0.1)',\n          borderColor: '#cbd5e1'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full bg-blue-400 cursor-ns-resize hover:bg-blue-500 transition-colors flex items-center justify-center\",\n          style: {\n            height: '6px'\n          },\n          onMouseDown: e => {\n            setIsResizing(true);\n            const startY = e.clientY;\n            const startHeight = basementHeight;\n            const handleMouseMove = e => {\n              const deltaY = startY - e.clientY;\n              const newHeight = Math.max(80, Math.min(400, startHeight + deltaY));\n              setBasementHeight(newHeight);\n            };\n            const handleMouseUp = () => {\n              setIsResizing(false);\n              document.removeEventListener('mousemove', handleMouseMove);\n              document.removeEventListener('mouseup', handleMouseUp);\n            };\n            document.addEventListener('mousemove', handleMouseMove);\n            document.addEventListener('mouseup', handleMouseUp);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-12 h-1 bg-blue-600 rounded-full opacity-60\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2317,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2293,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          style: {\n            height: basementHeight - 6\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-none p-3 flex items-center\",\n            style: {\n              width: `${TOTAL_DRIVERS_WIDTH}px`,\n              borderRight: '2px solid #cbd5e1',\n              boxShadow: '2px 0 8px rgba(0,0,0,0.1)',\n              background: 'linear-gradient(135deg, #e3eef7 0%, #d7e8f0 100%)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-semibold\",\n              style: {\n                color: '#475569'\n              },\n              children: [\"\\u041D\\u0435\\u043D\\u0430\\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0440\\u0435\\u0439\\u0441\\u044B (\", arrangeUnassignedFlights.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2331,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2322,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: basementRef,\n            className: \"flex-1 overflow-auto\",\n            style: {\n              boxShadow: 'inset 2px 0 8px rgba(0,0,0,0.05)',\n              background: '#f9fafb'\n            },\n            children: /*#__PURE__*/_jsxDEV(DroppableUnassigned, {\n              totalWidth: totalWidth,\n              height: arrangeUnassignedFlights.length > 0 ? Math.max(basementHeight - 6, (Math.max(...arrangeUnassignedFlights.map(f => f.laneIndex)) + 1) * laneH) : basementHeight - 6,\n              children: [gridLines.map(minutes => {\n                // Вычисляем максимальную высоту на основе неназначенных рейсов\n                const maxLaneIndex = arrangeUnassignedFlights.length > 0 ? Math.max(...arrangeUnassignedFlights.map(f => f.laneIndex)) : 0;\n                const actualHeight = Math.max(basementHeight - 6, (maxLaneIndex + 1) * laneH);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    position: 'absolute',\n                    left: (minutes - DAY_START) * pxPerMin,\n                    top: 0,\n                    height: actualHeight,\n                    width: '1px',\n                    backgroundColor: minutes % 60 === 0 ? '#9ca3af' : '#e5e7eb',\n                    opacity: 0.7,\n                    zIndex: 1\n                  }\n                }, `basement-grid-${minutes}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2360,\n                  columnNumber: 17\n                }, this);\n              }), (() => {\n                // Вычисляем количество линий на основе фактического количества рядов с рейсами\n                const maxLaneIndex = arrangeUnassignedFlights.length > 0 ? Math.max(...arrangeUnassignedFlights.map(f => f.laneIndex)) : 0;\n                const minLines = Math.floor((basementHeight - 6) / laneH) + 1;\n                const actualLines = Math.max(minLines, maxLaneIndex + 2); // +2 для дополнительной линии снизу\n\n                return Array.from({\n                  length: actualLines\n                }, (_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    position: 'absolute',\n                    left: 0,\n                    right: 0,\n                    top: i * laneH,\n                    height: '1px',\n                    backgroundColor: '#e5e7eb',\n                    opacity: 0.5,\n                    zIndex: 1\n                  }\n                }, `basement-horizontal-${i}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2386,\n                  columnNumber: 19\n                }, this));\n              })(), arrangeUnassignedFlights.map(flight => {\n                const left = (flight.loadStart - DAY_START) * pxPerMin;\n                const width = Math.max(12, (flight.loadEnd - flight.loadStart) * pxPerMin);\n                const top = flight.laneIndex * laneH + (laneH - (laneH - 16)) / 2; // Центрируем рейс в строке как в основной диаграмме\n                const isPending = pendingChanges.some(c => c.flightId === flight.id);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    position: 'absolute',\n                    left: left,\n                    top: top,\n                    width: width,\n                    height: laneH - 12 // Увеличили высоту для соответствия основной диаграмме\n                  },\n                  children: /*#__PURE__*/_jsxDEV(DraggableFlight, {\n                    flight: flight,\n                    left: 0,\n                    width: width,\n                    laneH: laneH - 6 // Такая же высота как у основных рейсов (увеличили с laneH-12)\n                    ,\n                    fontPx: fontPx,\n                    isAssigned: false,\n                    isPending: isPending,\n                    status: getFlightStatus(flight),\n                    onStatusChange: status => updateFlightStatus(flight.flightNo, status),\n                    onClick: handleFlightClick,\n                    isSelected: selectedFlights.has(flight.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2420,\n                    columnNumber: 21\n                  }, this)\n                }, flight.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2410,\n                  columnNumber: 19\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'absolute',\n                  left: nowLeft,\n                  top: 0,\n                  bottom: 0,\n                  width: '2px',\n                  backgroundColor: '#ef4444',\n                  zIndex: 10\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2438,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2345,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2337,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2320,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2283,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-none bg-white border-t border-gray-200 px-4 py-2\",\n        style: {\n          marginBottom: `${basementHeight}px`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600\",\n            children: [\"\\u0412\\u044B\\u0441\\u043E\\u0442\\u0430 \\u043F\\u043E\\u0434\\u0432\\u0430\\u043B\\u0430: \", basementHeight, \"px\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2458,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setBasementHeight(120),\n            className: \"text-xs px-2 py-1 bg-gray-200 rounded hover:bg-gray-300\",\n            children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2461,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2457,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2455,\n        columnNumber: 7\n      }, this), showSaveDialog && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-[9999]\",\n        style: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          zIndex: 9999\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-50 rounded-lg shadow-2xl max-w-lg w-full mx-4 max-h-80 flex flex-col border-2 border-blue-300\",\n          style: {\n            backgroundColor: '#f0f8ff'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-4 py-3 border-b-2 border-blue-300 bg-gradient-to-r from-blue-100 to-blue-200 rounded-t-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-sm font-semibold text-blue-900\",\n              children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u0440\\u0430\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043A\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2486,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-blue-700 mt-1\",\n              children: \"\\u041F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0438\\u0442\\u0435 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F \\u0438 \\u043F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u0445\\u0440\\u0430\\u043D\\u0435\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2489,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2485,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 overflow-y-auto px-4 py-3\",\n            style: {\n              backgroundColor: '#f0f8ff'\n            },\n            children: pendingChanges.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-blue-600 text-center py-6 text-sm\",\n              children: \"\\u041D\\u0435\\u0442 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0439 \\u0434\\u043B\\u044F \\u0441\\u043E\\u0445\\u0440\\u0430\\u043D\\u0435\\u043D\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2496,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: pendingChanges.map(change => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between bg-white rounded-md p-2 border border-blue-200 shadow-sm\",\n                style: {\n                  backgroundColor: '#ffffff',\n                  borderColor: '#b3d9ff'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm font-medium text-blue-900\",\n                    children: [change.flightNo, \": \", change.fromMachine, \" \\u2192 \", change.toMachine]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2508,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2507,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleRemoveChange(change.id),\n                  className: \"ml-2 px-2 py-1 text-xs bg-red-100 text-red-700 rounded hover:bg-red-200 border border-red-300 transition-colors\",\n                  children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2512,\n                  columnNumber: 23\n                }, this)]\n              }, change.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2502,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2500,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2494,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-4 py-3 border-t-2 border-blue-300 flex justify-end gap-2 bg-gradient-to-r from-blue-100 to-blue-200 rounded-b-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCancelChanges,\n              className: \"px-3 py-1.5 text-sm font-semibold rounded shadow-sm border transition-all duration-200\",\n              style: {\n                backgroundColor: '#e0f2fe',\n                color: '#0c4a6e',\n                borderColor: '#7dd3fc',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n              },\n              children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2525,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleApplyChanges,\n              disabled: loading || pendingChanges.length === 0,\n              className: \"px-3 py-1.5 text-sm font-semibold rounded shadow-sm border transition-all duration-200\",\n              style: {\n                backgroundColor: loading || pendingChanges.length === 0 ? '#f1f5f9' : '#e0f2fe',\n                color: loading || pendingChanges.length === 0 ? '#64748b' : '#0c4a6e',\n                borderColor: loading || pendingChanges.length === 0 ? '#cbd5e1' : '#7dd3fc',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n                cursor: loading || pendingChanges.length === 0 ? 'not-allowed' : 'pointer'\n              },\n              children: loading ? 'Сохранение...' : 'Применить'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2537,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2524,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2483,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2472,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragOverlay, {\n        modifiers: [restrictToVerticalAxis],\n        children: activeFlight && /*#__PURE__*/_jsxDEV(DraggableFlight, {\n          flight: activeFlight,\n          left: 0,\n          width: Math.max(12, (activeFlight.loadEnd - activeFlight.loadStart) * pxPerMin),\n          laneH: laneH,\n          fontPx: fontPx,\n          isAssigned: !!activeFlight.vehicleId,\n          isPending: false,\n          status: getFlightStatus(activeFlight),\n          onClick: handleFlightClick,\n          isSelected: selectedFlights.has(activeFlight.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2559,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2557,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1250,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1236,\n    columnNumber: 5\n  }, this);\n};\n_s(PlannerPage, \"N8kr8Gyotk2XESb60eaqKjumaio=\");\n_c = PlannerPage;\nexport default PlannerPage;\nvar _c;\n$RefreshReg$(_c, \"PlannerPage\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","DndContext","DragOverlay","rectIntersection","flightAPI","machineAPI","DAY_START","DAY_END","GRID_STEP","toHHMM","DraggableFlight","DroppableMachineSlot","DroppableUnassigned","jsxDEV","_jsxDEV","Fragment","_Fragment","restrictToVerticalAxis","args","transform","draggingNodeRect","activatorEvent","x","y","scaleX","scaleY","PlannerPage","_s","machines","setMachines","flights","setFlights","autolifts","setAutolifts","loading","setLoading","error","setError","activeFlight","setActiveFlight","pendingChanges","setPendingChanges","showSaveDialog","setShowSaveDialog","drivers","setDrivers","customShiftTimes","setCustomShiftTimes","basementHeight","setBasementHeight","isResizing","setIsResizing","horizontalScale","setHorizontalScale","chainWindows","setChainWindows","chainAutolifts","setChainAutolifts","flightStatuses","setFlightStatuses","selectedFlights","setSelectedFlights","Set","isMultiSelectMode","setIsMultiSelectMode","selectedChain","setSelectedChain","isDragging","setIsDragging","hoverMachineId","setHoverMachineId","timeGapInfo","setTimeGapInfo","getFlightStatus","flight","flightNo","updateFlightStatus","status","prev","loadData","console","log","machinesData","flightsData","autoliftsResponse","Promise","all","getMachines","getFlights","fetch","length","autoliftsText","text","substring","autoliftsData","split","slice","map","line","trim","filter","e","warn","fallbackAutolifts","driversData","machine","id","name","driver","machineId","shiftStart","shiftEnd","defaultTimes","forEach","savedChains","localStorage","getItem","chainData","JSON","parse","Object","keys","updatedFlights","chainId","savedAutolifts","autoliftData","err","setItem","stringify","getAutoliftFromMachine","find","m","autoliftNumber","replace","autoAssignAutolift","getDriverShiftTime","driverId","d","calculateShiftDuration","duration","hours","Math","floor","minutes","updateDriverShiftTime","field","value","formatDriverName","fullName","parts","surname","firstName","charAt","toUpperCase","middleName","DRIVER_INFO_WIDTH","MACHINE_SELECT_WIDTH","SHIFT_TIME_WIDTH","WORK_DURATION_WIDTH","TOTAL_DRIVERS_WIDTH","basePxPerMin","pxPerMin","laneH","fontPx","max","min","mainRef","footRef","basementRef","driversRef","timer","setTimeout","timeHeader","current","mainArea","basement","isScrolling","onMainScroll","scrollLeft","requestAnimationFrame","addEventListener","passive","removeEventListener","clearTimeout","driversArea","isVerticalScrolling","syncScrollTop","sourceScrollTop","source","scrollTop","onMainVerticalScroll","onDriversVerticalScroll","nowLeft","setNowLeft","tick","Date","getHours","getMinutes","left","setInterval","clearInterval","handleKeyDown","event","key","clearSelection","document","body","style","overflow","fileRef","autoAfterImport","setAutoAfterImport","onPick","_fileRef$current","click","onFile","_e$target$files","file","target","files","size","importedFlights","importCSV","handleAutoAssign","Error","message","autoAssign","handleResetAssign","resetAssignments","totalWidth","gridLines","push","flightsByMachine","byMachine","f","vehicleId","values","list","sort","a","b","serviceStart","calculateFlightLayers","layersByMachine","entries","machineFlights","flightsWithLayers","layer","placed","conflictOnLayer","some","item","serviceEnd","getLayerCount","layers","getFlightLayer","flightId","getChainLayerBounds","chainLayers","minLayer","maxLayer","top","height","totalLayers","flightHeight","layerSpacing","dynamicLaneH","totalHeight","centerY","startY","chainTop","chainBottom","chainHeight","unassignedFlights","chainsByMachine","byM","mid","cid","res","chains","arr","startsWith","start","kitchenOut","end","unloadEnd","arrangeUnassignedFlights","flightsWithPositions","lanes","laneIndex","hasConflict","existing","customCollisionDetection","droppableRects","droppableContainers","active","pointerCoordinates","unassignedContainer","container","rect","get","isWithinUnassigned","right","bottom","calculateTimeGap","insertTime","sortedFlights","draggedFlightStart","draggedFlightEnd","draggedFlightDuration","beforeFlight","afterFlight","i","result","beforeGap","gap","afterGap","handleDragStart","handleDragOver","_over$data$current","over","data","type","currentTime","gapInfo","handleDragEnd","_over$data$current2","_over$data$current3","_over$data$current4","activeId","overId","overType","existingChangeIndex","findIndex","c","existingChange","originalVehicleId","updatedChange","toMachine","newVehicleId","_machines$find","changeId","now","toString","change","fromMachine","handleRemoveChange","handleApplyChanges","assignFlight","unassignFlight","handleCancelChanges","toggleFlightSelection","newSelected","has","delete","_selectedFlightObject","selectedFlightIds","Array","from","selectedFlightObjects","includes","firstMachine","add","handleChainClick","breakSelectedChain","alert","breakChain","createChainFromSelected","allOnSameMachine","every","newChainId","handleFlightClick","shiftKey","_selectedFlightObject2","element","currentTarget","originalBorder","border","backgroundColor","preventDefault","stopPropagation","handleDriverMachineChange","prevDrivers","checkDriverOvertime","firstFlight","lastFlight","shiftTime","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDragStart","onDragOver","onDragEnd","onDragCancel","autoScroll","collisionDetection","background","cursor","display","alignItems","justifyContent","boxShadow","margin","lineHeight","color","onClick","disabled","borderColor","title","ref","accept","onChange","checked","Number","borderBottomColor","boxSizing","width","borderRight","position","paddingBottom","fontSize","padding","borderRadius","fontWeight","textShadow","zIndex","maxHeight","minHeight","index","_machines$find2","hasNoMachine","hasOvertime","layerCount","marginBottom","textAlign","_chainsByMachine$mach","opacity","chain","idx","xPos","xPosEnd","currentChainWindows","layerBounds","minWidth","loadingWindow","newValue","undefined","outline","_","num","unloadingWindow","defaultAutolift","maxWidth","autolift","loadStart","loadEnd","isPending","flightLayer","layerTop","flightsInSameChain","indexInChain","chainLength","bracketPosition","showBracket","isAssigned","onStatusChange","isSelected","useLayerPositioning","onMouseDown","clientY","startHeight","handleMouseMove","deltaY","newHeight","handleMouseUp","maxLaneIndex","actualHeight","minLines","actualLines","modifiers","_c","$RefreshReg$"],"sources":["/Users/igordvoretskii/Documents/aeromar-python/frontend/src/PlannerPage.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { \n  DndContext, \n  DragEndEvent, \n  DragOverlay, \n  DragStartEvent,\n  closestCenter,\n  pointerWithin,\n  rectIntersection \n} from '@dnd-kit/core';\nimport { Flight, Machine, Driver } from './types';\nimport { flightAPI, machineAPI } from './api';\nimport { DAY_START, DAY_END, GRID_STEP, toHHMM } from './utils';\nimport { DraggableFlight } from './components/DraggableFlight';\nimport { DroppableMachineSlot } from './components/DroppableMachineSlot';\nimport { DroppableUnassigned } from './components/DroppableUnassigned';\nimport { PlannerControls } from './components/PlannerControls';\n\n// Интерфейс для изменений назначений\ninterface FlightAssignmentChange {\n  id: string;\n  flightId: string;\n  flightNo: string;\n  fromMachine?: string;\n  toMachine?: string;\n  originalVehicleId?: string;\n  newVehicleId?: string;\n}\n\n// Кастомный модификатор для ограничения перемещения только по вертикали\nconst restrictToVerticalAxis = (args: any) => {\n  const { transform, draggingNodeRect, activatorEvent } = args;\n  \n  if (!draggingNodeRect || !activatorEvent) {\n    return transform;\n  }\n\n  return {\n    x: 0, // Блокируем горизонтальное перемещение\n    y: transform.y, // Оставляем вертикальное перемещение\n    scaleX: transform.scaleX,\n    scaleY: transform.scaleY,\n  };\n};\n\nconst PlannerPage: React.FC = () => {\n  const [machines, setMachines] = useState<Machine[]>([]);\n  const [flights, setFlights] = useState<Flight[]>([]);\n  const [autolifts, setAutolifts] = useState<string[]>([]); // Добавляем состояние для автолифтов\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Drag and Drop состояние\n  const [activeFlight, setActiveFlight] = useState<Flight | null>(null);\n  \n  // Состояние для отслеживания изменений назначений\n  const [pendingChanges, setPendingChanges] = useState<FlightAssignmentChange[]>([]);\n  const [showSaveDialog, setShowSaveDialog] = useState(false);\n  \n  // Водители и назначения машин\n  const [drivers, setDrivers] = useState<Driver[]>([]);\n  \n  // Состояние для редактируемых времен смены водителей\n  const [customShiftTimes, setCustomShiftTimes] = useState<{\n    [driverId: string]: {\n      shiftStart: number;\n      shiftEnd: number;\n    }\n  }>({});\n  \n  // Состояние для высоты подвала\n  const [basementHeight, setBasementHeight] = useState(120); // Высота для неназначенных рейсов\n  const [isResizing, setIsResizing] = useState(false);\n\n  // Новые состояния для управления\n  const [horizontalScale, setHorizontalScale] = useState(1);\n  // Состояние окон для каждой цепочки отдельно\n  const [chainWindows, setChainWindows] = useState<{\n    [chainId: string]: {\n      loadingWindow?: number;\n      unloadingWindow?: number;\n    }\n  }>({});\n  \n  // Состояние автолифтов для каждой цепочки\n  const [chainAutolifts, setChainAutolifts] = useState<{\n    [chainId: string]: string;\n  }>({});\n  \n  // Статусы рейсов\n  const [flightStatuses, setFlightStatuses] = useState<Record<string, 'completed' | 'in-progress' | 'planned'>>({});\n\n  // Множественный выбор рейсов для создания скобок\n  const [selectedFlights, setSelectedFlights] = useState<Set<string>>(new Set());\n  const [isMultiSelectMode, setIsMultiSelectMode] = useState(false);\n  const [selectedChain, setSelectedChain] = useState<string | null>(null);\n  const [isDragging, setIsDragging] = useState(false);\n\n  // Состояние для отображения временного зазора при перетаскивании\n  const [hoverMachineId, setHoverMachineId] = useState<string | null>(null);\n  const [timeGapInfo, setTimeGapInfo] = useState<{\n    machineId: string;\n    beforeGap?: {\n      flight?: Flight;\n      gap: number;\n      insertTime: number;\n    };\n    afterGap?: {\n      flight?: Flight;\n      gap: number;\n      insertTime: number;\n    };\n  } | null>(null);\n\n  // Функция для получения статуса рейса\n  const getFlightStatus = (flight: Flight): 'completed' | 'in-progress' | 'planned' => {\n    return flightStatuses[flight.flightNo] || 'planned';\n  };\n\n  // Функция для обновления статуса рейса\n  const updateFlightStatus = (flightNo: string, status: 'completed' | 'in-progress' | 'planned') => {\n    setFlightStatuses(prev => ({\n      ...prev,\n      [flightNo]: status\n    }));\n  };\n\n  // Загружаем данные при инициализации\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        console.log('🔄 Загружаем данные...');\n        const [machinesData, flightsData, autoliftsResponse] = await Promise.all([\n          machineAPI.getMachines(),\n          flightAPI.getFlights(),\n          fetch('/autolifts.csv') // Загружаем список автолифтов\n        ]);\n        console.log('✅ Машины загружены:', machinesData.length);\n        console.log('✅ Рейсы загружены:', flightsData.length);\n        setMachines(machinesData);\n        setFlights(flightsData);\n        \n        // Парсим автолифты из CSV\n        try {\n          const autoliftsText = await autoliftsResponse.text();\n          console.log('📄 Сырой текст автолифтов:', autoliftsText.substring(0, 200));\n          const autoliftsData = autoliftsText\n            .split('\\n')\n            .slice(1) // Пропускаем заголовок\n            .map(line => line.trim())\n            .filter(line => line.length > 0);\n          console.log('✅ Автолифты загружены:', autoliftsData);\n          setAutolifts(autoliftsData);\n        } catch (e) {\n          console.warn('⚠️ Ошибка загрузки автолифтов, используем резервный список:', e);\n          // Резервный список автолифтов\n          const fallbackAutolifts = ['133', '135', '136', '139', '140', '141', '149', '150', '151', '152', '153', '154', '155', '156', '157', '158', '159', '160'];\n          setAutolifts(fallbackAutolifts);\n        }\n        \n        // Создаем водителей на основе машин\n        const driversData: Driver[] = machinesData.map(machine => ({\n          id: `driver-${machine.id}`,\n          name: machine.driver,\n          machineId: machine.id,\n          shiftStart: machine.shiftStart,\n          shiftEnd: machine.shiftEnd\n        }));\n        setDrivers(driversData);\n        \n        // Инициализируем времена смен водителей по умолчанию\n        const defaultTimes: { [driverId: string]: { shiftStart: number; shiftEnd: number } } = {};\n        driversData.forEach(driver => {\n          defaultTimes[driver.id] = {\n            shiftStart: driver.shiftStart,\n            shiftEnd: driver.shiftEnd\n          };\n        });\n        setCustomShiftTimes(defaultTimes);\n        \n        console.log('✅ Водители созданы:', driversData.length);\n        \n        // Загружаем сохраненные цепочки из localStorage\n        const savedChains = localStorage.getItem('flight-chains');\n        if (savedChains) {\n          try {\n            const chainData = JSON.parse(savedChains);\n            console.log('✅ Загружены сохраненные цепочки:', Object.keys(chainData).length);\n            \n            // Применяем сохраненные chainId к рейсам\n            const updatedFlights = flightsData.map(flight => ({\n              ...flight,\n              chainId: chainData[flight.id] || flight.chainId || ''\n            }));\n            setFlights(updatedFlights);\n          } catch (e) {\n            console.warn('⚠️ Ошибка загрузки сохраненных цепочек:', e);\n          }\n        }\n        \n        // Загружаем сохраненные автолифты для цепочек\n        const savedAutolifts = localStorage.getItem('chain-autolifts');\n        if (savedAutolifts) {\n          try {\n            const autoliftData = JSON.parse(savedAutolifts);\n            console.log('✅ Загружены сохраненные автолифты:', Object.keys(autoliftData).length);\n            setChainAutolifts(autoliftData);\n          } catch (e) {\n            console.warn('⚠️ Ошибка загрузки сохраненных автолифтов:', e);\n          }\n        }\n        \n      } catch (err) {\n        console.error('❌ Ошибка загрузки данных:', err);\n        setError('Ошибка загрузки данных');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  // Сохранение цепочек в localStorage при изменении\n  useEffect(() => {\n    if (flights.length > 0) {\n      const chainData: Record<string, string> = {};\n      flights.forEach(flight => {\n        if (flight.chainId) {\n          chainData[flight.id] = flight.chainId;\n        }\n      });\n      localStorage.setItem('flight-chains', JSON.stringify(chainData));\n      console.log('💾 Цепочки сохранены в localStorage');\n    }\n  }, [flights]);\n  \n  // Сохранение автолифтов в localStorage при изменении\n  useEffect(() => {\n    localStorage.setItem('chain-autolifts', JSON.stringify(chainAutolifts));\n    console.log('💾 Автолифты сохранены в localStorage');\n  }, [chainAutolifts]);\n\n  // Функция для извлечения номера автолифта из машины\n  const getAutoliftFromMachine = (machineId: string): string => {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return '';\n    \n    // Извлекаем номер из ID машины (например, \"M133\" -> \"133\")\n    const autoliftNumber = machine.id.replace('M', '');\n    return autoliftNumber;\n  };\n\n  // Функция для автоматического назначения автолифта цепочке на основе машины\n  const autoAssignAutolift = (chainId: string, machineId: string) => {\n    // Если автолифт уже назначен, не меняем\n    if (chainAutolifts[chainId]) return;\n    \n    const autoliftNumber = getAutoliftFromMachine(machineId);\n    if (autoliftNumber) {\n      setChainAutolifts(prev => ({\n        ...prev,\n        [chainId]: autoliftNumber\n      }));\n      console.log(`🔧 Автоматически назначен автолифт ${autoliftNumber} для цепочки ${chainId}`);\n    }\n  };\n\n  // Функция для получения времени смены водителя (пользовательское или по умолчанию)\n  const getDriverShiftTime = (driverId: string) => {\n    return customShiftTimes[driverId] || drivers.find(d => d.id === driverId) || { shiftStart: 6 * 60, shiftEnd: 22 * 60 };\n  };\n\n  // Функция для вычисления длительности смены\n  const calculateShiftDuration = (shiftStart: number, shiftEnd: number) => {\n    const duration = shiftEnd - shiftStart;\n    const hours = Math.floor(duration / 60);\n    const minutes = duration % 60;\n    return `${hours}ч ${minutes > 0 ? minutes + 'м' : ''}`.trim();\n  };\n\n  // Функция для обновления времени смены водителя\n  const updateDriverShiftTime = (driverId: string, field: 'shiftStart' | 'shiftEnd', value: number) => {\n    setCustomShiftTimes(prev => ({\n      ...prev,\n      [driverId]: {\n        ...prev[driverId],\n        [field]: value\n      }\n    }));\n  };\n\n  // Функция для сокращения имени до формата \"Фамилия И.О.\"\n  const formatDriverName = (fullName: string): string => {\n    if (!fullName || fullName.trim() === '') return 'Без имени';\n    \n    const parts = fullName.trim().split(/\\s+/);\n    if (parts.length === 1) return parts[0]; // Если только одно слово\n    \n    if (parts.length === 2) {\n      // Если два слова: \"Фамилия Имя\" -> \"Фамилия И.\"\n      const surname = parts[0];\n      const firstName = parts[1];\n      return `${surname} ${firstName.charAt(0).toUpperCase()}.`;\n    }\n    \n    if (parts.length >= 3) {\n      // Если три или больше слов: \"Фамилия Имя Отчество\" -> \"Фамилия И.О.\"\n      const surname = parts[0];\n      const firstName = parts[1];\n      const middleName = parts[2];\n      return `${surname} ${firstName.charAt(0).toUpperCase()}.${middleName.charAt(0).toUpperCase()}.`;\n    }\n    \n    return fullName; // Fallback\n  };\n\n  // Константы для ширины колонок\n  const DRIVER_INFO_WIDTH = 140;  // Ширина колонки с информацией о водителе (уменьшена с 160 до 140)\n  const MACHINE_SELECT_WIDTH = 75; // Ширина колонки с выбором машины (увеличена с 65 до 75)\n  const SHIFT_TIME_WIDTH = 95; // Ширина колонки с временем смены (увеличена с 80 до 95)\n  const WORK_DURATION_WIDTH = 59; // Ширина колонки с расчетным временем работы (уменьшена с 79 до 59)\n  const TOTAL_DRIVERS_WIDTH = 369; // Фиксированная общая ширина (140 + 75 + 95 + 59 = 369)\n\n  // Масштаб и настройки отображения\n  const basePxPerMin = 4;  // Увеличили с 2 до 4 для лучшего разделения\n  const pxPerMin = basePxPerMin * horizontalScale;  // X - масштабируется только горизонтально\n  const laneH = 55;      // Увеличили высоту строк с 45 до 55 для отображения полной информации\n  const fontPx = Math.max(9, Math.min(11, laneH/5)); // Адаптировали размер шрифта\n\n  // Скролл и «сейчас»\n  const mainRef = useRef<HTMLDivElement>(null);\n  const footRef = useRef<HTMLDivElement>(null);\n  const basementRef = useRef<HTMLDivElement>(null); // Для подвала с неназначенными рейсами\n  const driversRef = useRef<HTMLDivElement>(null); // Для синхронизации скролла водителей\n  \n  useEffect(() => {\n    // Синхронизация горизонтального скролла между временной шкалой, основной диаграммой и basement\n    const timer = setTimeout(() => {\n      const timeHeader = footRef.current;\n      const mainArea = mainRef.current;\n      const basement = basementRef.current;\n      \n      console.log('🔄 Настройка синхронизации скролла...');\n      \n      if (!timeHeader || !mainArea || !basement) {\n        console.log('❌ Не все контейнеры найдены:', {\n          timeHeader: !!timeHeader, \n          mainArea: !!mainArea,\n          basement: !!basement\n        });\n        return;\n      }\n\n      let isScrolling = false;\n\n      // Основная диаграмма - главный источник скролла\n      const onMainScroll = () => {\n        if (isScrolling) return;\n        isScrolling = true;\n        \n        const scrollLeft = mainArea.scrollLeft;\n        \n        // Синхронизируем заголовок и подвал\n        if (timeHeader.scrollLeft !== scrollLeft) {\n          timeHeader.scrollLeft = scrollLeft;\n        }\n        if (basement.scrollLeft !== scrollLeft) {\n          basement.scrollLeft = scrollLeft;\n        }\n        \n        requestAnimationFrame(() => {\n          isScrolling = false;\n        });\n      };\n\n      // Добавляем только один слушатель - на основную диаграмму\n      mainArea.addEventListener('scroll', onMainScroll, { passive: true });\n      \n      console.log('✅ Синхронизация горизонтального скролла настроена');\n\n      return () => {\n        mainArea.removeEventListener('scroll', onMainScroll);\n      };\n    }, 500);\n\n    return () => clearTimeout(timer);\n  }, []);\n  \n  // Синхронизация вертикального скролла между основной диаграммой и блоком водителей\n  useEffect(() => {\n    const mainArea = mainRef.current;\n    const driversArea = driversRef.current;\n    \n    if (!mainArea || !driversArea) return;\n    \n    let isVerticalScrolling = false;\n    \n    const syncScrollTop = (sourceScrollTop: number, source: string) => {\n      if (isVerticalScrolling) return;\n      isVerticalScrolling = true;\n      \n      if (source !== 'main') mainArea.scrollTop = sourceScrollTop;\n      if (source !== 'drivers') driversArea.scrollTop = sourceScrollTop;\n      \n      requestAnimationFrame(() => {\n        isVerticalScrolling = false;\n      });\n    };\n    \n    const onMainVerticalScroll = () => {\n      if (!isVerticalScrolling) {\n        syncScrollTop(mainArea.scrollTop, 'main');\n      }\n    };\n    \n    const onDriversVerticalScroll = () => {\n      if (!isVerticalScrolling) {\n        syncScrollTop(driversArea.scrollTop, 'drivers');\n      }\n    };\n    \n    mainArea.addEventListener('scroll', onMainVerticalScroll);\n    driversArea.addEventListener('scroll', onDriversVerticalScroll);\n    \n    return () => {\n      mainArea.removeEventListener('scroll', onMainVerticalScroll);\n      driversArea.removeEventListener('scroll', onDriversVerticalScroll);\n    };\n  }, []);\n\n  const [nowLeft, setNowLeft] = useState(0);\n  useEffect(() => {\n    const tick = () => {\n      const d = new Date();\n      const m = d.getHours() * 60 + d.getMinutes();\n      const left = (m - DAY_START) * pxPerMin;\n      setNowLeft(left);\n    };\n    \n    tick();\n    const timer = setInterval(tick, 10_000);\n    return () => clearInterval(timer);\n  }, [pxPerMin]);\n\n  // Обработка клавиш для управления режимом multi-select\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape' && isMultiSelectMode) {\n        clearSelection();\n        console.log('🔄 Выход из режима multi-select по Escape');\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isMultiSelectMode]);\n\n  // Очистка overflow при размонтировании компонента\n  useEffect(() => {\n    return () => {\n      document.body.style.overflow = '';\n    };\n  }, []);\n\n  // Импорт CSV\n  const fileRef = useRef<HTMLInputElement>(null);\n  const [autoAfterImport, setAutoAfterImport] = useState(true);\n  \n  const onPick = () => fileRef.current?.click();\n  \n  const onFile = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n    \n    try {\n      setLoading(true);\n      setError(null); // Очищаем предыдущие ошибки\n      console.log('📁 Импортируем файл:', file.name, 'размер:', file.size);\n      \n      const importedFlights = await flightAPI.importCSV(file);\n      console.log('✅ Импорт завершен, получено рейсов:', importedFlights.length);\n      \n      // Принудительно обновляем состояние\n      setFlights([...importedFlights]); // Создаем новый массив для триггера ререндера\n      \n      if (autoAfterImport) {\n        console.log('🤖 Запускаем автоназначение...');\n        await handleAutoAssign();\n      }\n      \n      // Очищаем input для возможности повторного импорта того же файла\n      if (fileRef.current) {\n        fileRef.current.value = '';\n      }\n    } catch (err) {\n      console.error('❌ Ошибка импорта CSV:', err);\n      setError(`Ошибка импорта CSV: ${err instanceof Error ? err.message : 'Неизвестная ошибка'}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Автоназначение\n  const handleAutoAssign = async () => {\n    try {\n      setLoading(true);\n      await flightAPI.autoAssign();\n      const updatedFlights = await flightAPI.getFlights();\n      setFlights(updatedFlights);\n      setError(null);\n    } catch (err) {\n      setError('Ошибка автоназначения');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Сброс назначений\n  const handleResetAssign = async () => {\n    try {\n      setLoading(true);\n      await flightAPI.resetAssignments();\n      const updatedFlights = await flightAPI.getFlights();\n      setFlights(updatedFlights);\n      setError(null);\n    } catch (err) {\n      setError('Ошибка сброса');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Вычисления для отображения\n  const totalWidth = (DAY_END - DAY_START) * pxPerMin;\n  const gridLines: number[] = [];\n  for (let m = DAY_START; m <= DAY_END; m += GRID_STEP) {\n    gridLines.push(m);\n  }\n\n  // Группируем рейсы по машинам\n  const flightsByMachine = useMemo(() => {\n    const byMachine: Record<string, Flight[]> = {};\n    machines.forEach(m => byMachine[m.id] = []);\n    \n    flights.forEach(f => {\n      if (f.vehicleId && f.vehicleId.trim() !== '') {\n        byMachine[f.vehicleId] = byMachine[f.vehicleId] || [];\n        byMachine[f.vehicleId].push(f);\n      }\n    });\n    \n    // Сортируем по времени\n    Object.values(byMachine).forEach(list => \n      list.sort((a, b) => a.serviceStart - b.serviceStart)\n    );\n    \n    console.log('🔄 Рейсы по машинам:', byMachine);\n    console.log('🔄 Всего рейсов:', flights.length, 'назначенных:', flights.filter(f => f.vehicleId && f.vehicleId.trim() !== '').length);\n    \n    return byMachine;\n  }, [flights, machines]);\n\n  // Функция для расчета слоев перекрывающихся рейсов\n  const calculateFlightLayers = useMemo(() => {\n    const layersByMachine: Record<string, Array<{ flight: Flight; layer: number }>> = {};\n    \n    Object.entries(flightsByMachine).forEach(([machineId, machineFlights]) => {\n      const flightsWithLayers: Array<{ flight: Flight; layer: number }> = [];\n      \n      machineFlights.forEach(flight => {\n        // Находим подходящий слой для этого рейса\n        let layer = 0;\n        let placed = false;\n        \n        while (!placed) {\n          // Проверяем, есть ли конфликт с рейсами на этом слое\n          const conflictOnLayer = flightsWithLayers.some(item => \n            item.layer === layer && \n            !(flight.serviceEnd <= item.flight.serviceStart || flight.serviceStart >= item.flight.serviceEnd)\n          );\n          \n          if (!conflictOnLayer) {\n            flightsWithLayers.push({ flight, layer });\n            placed = true;\n          } else {\n            layer++;\n          }\n        }\n      });\n      \n      layersByMachine[machineId] = flightsWithLayers;\n    });\n    \n    return layersByMachine;\n  }, [flightsByMachine]);\n\n  // Функция для получения количества слоев для машины\n  const getLayerCount = (machineId: string): number => {\n    const layers = calculateFlightLayers[machineId] || [];\n    return Math.max(1, ...layers.map(item => item.layer + 1));\n  };\n\n  // Функция для получения слоя рейса\n  const getFlightLayer = (flightId: string, machineId: string): number => {\n    const layers = calculateFlightLayers[machineId] || [];\n    const item = layers.find(item => item.flight.id === flightId);\n    return item?.layer || 0;\n  };\n\n  // Функция для получения границ цепочки по слоям (верхний и нижний слой)\n  const getChainLayerBounds = (chainId: string, machineId: string): { minLayer: number; maxLayer: number; top: number; height: number } => {\n    const layers = calculateFlightLayers[machineId] || [];\n    const chainLayers = layers.filter(item => item.flight.chainId === chainId).map(item => item.layer);\n    \n    if (chainLayers.length === 0) {\n      return { minLayer: 0, maxLayer: 0, top: 0, height: 25 };\n    }\n    \n    const minLayer = Math.min(...chainLayers);\n    const maxLayer = Math.max(...chainLayers);\n    const totalLayers = getLayerCount(machineId);\n    const flightHeight = laneH - 12; // Увеличили высоту рейса\n    const layerSpacing = flightHeight + 6; // Увеличили расстояние между слоями\n    \n    if (totalLayers === 1) {\n      // Если только один слой, скобка центрируется как обычно\n      return {\n        minLayer: 0,\n        maxLayer: 0,\n        top: (laneH - 25) / 2, // Центрируем скобку увеличенной высоты\n        height: 25 // Увеличили высоту скобки\n      };\n    } else {\n      // Если несколько слоев, скобка охватывает все слои цепочки\n      const dynamicLaneH = Math.max(laneH, totalLayers * layerSpacing + 12);\n      const totalHeight = totalLayers * layerSpacing;\n      const centerY = dynamicLaneH / 2;\n      const startY = centerY - totalHeight / 2;\n      \n      const chainTop = startY + minLayer * layerSpacing;\n      const chainBottom = startY + maxLayer * layerSpacing + flightHeight;\n      const chainHeight = Math.max(25, chainBottom - chainTop); // Увеличили минимальную высоту\n      \n      return {\n        minLayer,\n        maxLayer,\n        top: chainTop,\n        height: chainHeight\n      };\n    }\n  };\n\n  // Неназначенные рейсы\n  const unassignedFlights = flights.filter(f => !f.vehicleId || f.vehicleId.trim() === '');\n  \n  // Цепочки/скобки по chainId, от kitchenOut первого до unloadEnd последнего\n  const chainsByMachine = useMemo(() => {\n    // сгруппировать рейсы по машине и chainId (пустым рейсам даём свой \"solo-...\" chainId)\n    const byM: Record<string, Record<string, Flight[]>> = {};\n    for (const m of machines) byM[m.id] = {};\n    for (const f of flights) if (f.vehicleId) {\n      const mid = f.vehicleId;\n      const cid = f.chainId && f.chainId.length ? f.chainId : `solo-${f.id}`;\n      (byM[mid][cid] ??= []).push(f);\n    }\n    const res: Record<string, Array<{chainId: string; machineId: string; start: number; end: number}>> = {};\n    for (const mid of Object.keys(byM)) {\n      const chains = byM[mid];\n      const arr: Array<{chainId: string; machineId: string; start: number; end: number}> = [];\n      for (const cid of Object.keys(chains)) {\n        const list = chains[cid].slice().sort((a,b)=>a.serviceStart-b.serviceStart);\n        // Показываем скобки только для реальных цепочек (не solo) и если в цепочке больше 1 рейса\n        if (cid.startsWith('solo-') || list.length < 2) continue; \n        const start = Math.min(...list.map(x=>x.kitchenOut));\n        const end   = Math.max(...list.map(x=>x.unloadEnd));\n        arr.push({ chainId: cid, machineId: mid, start: Math.max(DAY_START, start), end: Math.min(DAY_END, end) });\n      }\n      // сортируем только для стабильного рендера\n      arr.sort((a,b)=>a.start-b.start);\n      res[mid] = arr;\n    }\n    return res;\n  }, [flights, machines]);\n  \n  // Алгоритм размещения неназначенных рейсов без наложений\n  const arrangeUnassignedFlights = useMemo(() => {\n    const flightsWithPositions = [...unassignedFlights].sort((a, b) => a.serviceStart - b.serviceStart);\n    const lanes: { [key: number]: { start: number; end: number }[] } = {};\n    \n    return flightsWithPositions.map(flight => {\n      let laneIndex = 0;\n      \n      // Найдем свободную полосу\n      while (lanes[laneIndex]) {\n        const hasConflict = lanes[laneIndex].some(existing => \n          !(flight.serviceEnd <= existing.start || flight.serviceStart >= existing.end)\n        );\n        if (!hasConflict) break;\n        laneIndex++;\n      }\n      \n      // Добавим рейс в эту полосу\n      if (!lanes[laneIndex]) lanes[laneIndex] = [];\n      lanes[laneIndex].push({ start: flight.serviceStart, end: flight.serviceEnd });\n      \n      return { ...flight, laneIndex };\n    });\n  }, [unassignedFlights]);\n\n  // Custom collision detection для приоритизации области неназначенных\n  const customCollisionDetection = (args: any) => {\n    const { droppableRects, droppableContainers, active, pointerCoordinates } = args;\n    \n    if (!pointerCoordinates) {\n      return rectIntersection(args);\n    }\n    \n    // Сначала проверяем, находимся ли мы в области неназначенных\n    const unassignedContainer = droppableContainers.find((container: any) => container.id === 'unassigned');\n    if (unassignedContainer) {\n      const rect = droppableRects.get('unassigned');\n      if (rect) {\n        const isWithinUnassigned = \n          pointerCoordinates.x >= rect.left &&\n          pointerCoordinates.x <= rect.right &&\n          pointerCoordinates.y >= rect.top &&\n          pointerCoordinates.y <= rect.bottom;\n        \n        if (isWithinUnassigned) {\n          return [{ id: 'unassigned' }];\n        }\n      }\n    }\n    \n    // Если не в области неназначенных, используем стандартный алгоритм\n    return rectIntersection(args);\n  };\n\n  // Функция для вычисления временных зазоров при вставке рейса\n  const calculateTimeGap = (machineId: string, insertTime: number) => {\n    const machineFlights = flightsByMachine[machineId] || [];\n    const sortedFlights = [...machineFlights].sort((a, b) => a.serviceStart - b.serviceStart);\n    \n    if (!activeFlight) return { machineId };\n    \n    const draggedFlightStart = activeFlight.serviceStart;\n    const draggedFlightEnd = activeFlight.serviceEnd;\n    const draggedFlightDuration = draggedFlightEnd - draggedFlightStart;\n    \n    let beforeFlight: Flight | undefined;\n    let afterFlight: Flight | undefined;\n    \n    // Находим рейсы до и после позиции вставки\n    for (let i = 0; i < sortedFlights.length; i++) {\n      const flight = sortedFlights[i];\n      if (flight.serviceStart <= insertTime) {\n        beforeFlight = flight;\n      }\n      if (flight.serviceStart > insertTime && !afterFlight) {\n        afterFlight = flight;\n        break;\n      }\n    }\n    \n    const result: {\n      machineId: string;\n      beforeGap?: { flight?: Flight; gap: number; insertTime: number };\n      afterGap?: { flight?: Flight; gap: number; insertTime: number };\n    } = { machineId };\n    \n    // Вычисляем зазор слева от перетаскиваемого рейса (от начала обслуживания)\n    if (beforeFlight) {\n      const beforeGap = draggedFlightStart - beforeFlight.serviceEnd;\n      if (beforeGap >= 0) {\n        result.beforeGap = {\n          flight: beforeFlight,\n          gap: beforeGap,\n          insertTime: beforeFlight.serviceEnd\n        };\n      }\n    } else {\n      // Перед первым рейсом\n      const beforeGap = draggedFlightStart - DAY_START;\n      if (beforeGap >= 0) {\n        result.beforeGap = {\n          gap: beforeGap,\n          insertTime: DAY_START\n        };\n      }\n    }\n    \n    // Вычисляем зазор справа от перетаскиваемого рейса (от конца обслуживания)\n    if (afterFlight) {\n      const afterGap = afterFlight.serviceStart - draggedFlightEnd;\n      if (afterGap >= 0) {\n        result.afterGap = {\n          flight: afterFlight,\n          gap: afterGap,\n          insertTime: draggedFlightEnd\n        };\n      }\n    } else {\n      // После последнего рейса\n      const afterGap = DAY_END - draggedFlightEnd;\n      if (afterGap >= 0) {\n        result.afterGap = {\n          gap: afterGap,\n          insertTime: draggedFlightEnd\n        };\n      }\n    }\n    \n    return result;\n  };\n  \n  const handleDragStart = (event: DragStartEvent) => {\n    const { active } = event;\n    const flight = flights.find(f => f.id === active.id);\n    if (flight) {\n      setActiveFlight(flight);\n      setIsDragging(true);\n      // Блокируем скролл страницы во время перетаскивания\n      document.body.style.overflow = 'hidden';\n    }\n  };\n\n  const handleDragOver = (event: any) => {\n    const { active, over } = event;\n    \n    if (!active || !over || !activeFlight) return;\n    \n    // Если наводимся на машину, вычисляем временной зазор\n    if (over.data.current?.type === 'machine') {\n      const machineId = over.id as string;\n      \n      // Используем время начала обслуживания рейса как позицию вставки\n      const currentTime = activeFlight.serviceStart;\n      \n      const gapInfo = calculateTimeGap(machineId, currentTime);\n      setTimeGapInfo(gapInfo);\n      setHoverMachineId(machineId);\n    } else {\n      // Сбрасываем информацию о зазоре\n      setTimeGapInfo(null);\n      setHoverMachineId(null);\n    }\n  };\n\n  const handleDragEnd = async (event: DragEndEvent) => {\n    const { active, over } = event;\n    setActiveFlight(null);\n    setIsDragging(false);\n    setTimeGapInfo(null); // Очищаем информацию о зазоре\n    setHoverMachineId(null);\n    // Восстанавливаем скролл страницы\n    document.body.style.overflow = '';\n    \n    console.log('🎯 DragEnd:', { \n      activeId: active.id, \n      overId: over?.id, \n      overType: over?.data.current?.type\n    });\n    \n    if (!over) {\n      return;\n    }\n    \n    const flightId = active.id as string;\n    const flight = flights.find(f => f.id === flightId);\n    if (!flight) return;\n    \n    // Если перетаскиваем на машину\n    if (over.data.current?.type === 'machine') {\n      const machineId = over.id as string;\n      const machine = machines.find(m => m.id === machineId);\n      \n      // Проверяем, действительно ли это изменение (не на ту же машину)\n      if (flight.vehicleId === machineId) {\n        return; // Никаких изменений не было\n      }\n      \n      // Проверяем, есть ли уже изменение для этого рейса\n      const existingChangeIndex = pendingChanges.findIndex(c => c.flightId === flight.id);\n      \n      if (existingChangeIndex >= 0) {\n        // Обновляем существующее изменение\n        const existingChange = pendingChanges[existingChangeIndex];\n        \n        // Если возвращаем на исходную машину, удаляем изменение\n        if (existingChange.originalVehicleId === machineId) {\n          setPendingChanges(prev => prev.filter(c => c.flightId !== flight.id));\n          setFlights(prev => prev.map(f => \n            f.id === flightId ? { ...f, vehicleId: machineId } : f\n          ));\n          return;\n        }\n        \n        // Иначе обновляем изменение\n        const updatedChange: FlightAssignmentChange = {\n          ...existingChange,\n          toMachine: machine?.name || machineId,\n          newVehicleId: machineId\n        };\n        \n        setPendingChanges(prev => prev.map(c => \n          c.id === existingChange.id ? updatedChange : c\n        ));\n      } else {\n        // Создаем новое изменение\n        const changeId = Date.now().toString();\n        const change: FlightAssignmentChange = {\n          id: changeId,\n          flightId: flight.id,\n          flightNo: flight.flightNo,\n          fromMachine: flight.vehicleId ? machines.find(m => m.id === flight.vehicleId)?.name : 'Неназначенные',\n          toMachine: machine?.name || machineId,\n          originalVehicleId: flight.vehicleId,\n          newVehicleId: machineId\n        };\n        \n        setPendingChanges(prev => [...prev, change]);\n      }\n      \n      // Локально обновляем рейс\n      setFlights(prev => prev.map(f => \n        f.id === flightId ? { ...f, vehicleId: machineId } : f\n      ));\n    }\n    \n    // Если перетаскиваем в неназначенные\n    if (over.data.current?.type === 'unassigned') {\n      // Проверяем, действительно ли это изменение (не был ли уже неназначенным)\n      if (!flight.vehicleId) {\n        return; // Никаких изменений не было\n      }\n      \n      // Проверяем, есть ли уже изменение для этого рейса\n      const existingChangeIndex = pendingChanges.findIndex(c => c.flightId === flight.id);\n      \n      if (existingChangeIndex >= 0) {\n        const existingChange = pendingChanges[existingChangeIndex];\n        \n        // Если возвращаем к исходному неназначенному состоянию, удаляем изменение\n        if (!existingChange.originalVehicleId) {\n          setPendingChanges(prev => prev.filter(c => c.flightId !== flight.id));\n          setFlights(prev => prev.map(f => \n            f.id === flightId ? { ...f, vehicleId: '' } : f\n          ));\n          return;\n        }\n        \n        // Иначе обновляем изменение\n        const updatedChange: FlightAssignmentChange = {\n          ...existingChange,\n          toMachine: 'Неназначенные',\n          newVehicleId: ''\n        };\n        \n        setPendingChanges(prev => prev.map(c => \n          c.id === existingChange.id ? updatedChange : c\n        ));\n      } else {\n        const changeId = Date.now().toString();\n        const machine = machines.find(m => m.id === flight.vehicleId);\n        const change: FlightAssignmentChange = {\n          id: changeId,\n          flightId: flight.id,\n          flightNo: flight.flightNo,\n          fromMachine: machine?.name || flight.vehicleId,\n          toMachine: 'Неназначенные',\n          originalVehicleId: flight.vehicleId,\n          newVehicleId: ''\n        };\n        \n        setPendingChanges(prev => [...prev, change]);\n      }\n      \n      // Локально обновляем рейс\n      setFlights(prev => prev.map(f => \n        f.id === flightId ? { ...f, vehicleId: '' } : f\n      ));\n    }\n  };\n\n  // Функции для работы с изменениями назначений\n  const handleRemoveChange = (changeId: string) => {\n    const change = pendingChanges.find(c => c.id === changeId);\n    if (!change) return;\n    \n    // Возвращаем рейс к оригинальному состоянию\n    setFlights(prev => prev.map(f => \n      f.id === change.flightId \n        ? { ...f, vehicleId: change.originalVehicleId || '' }\n        : f\n    ));\n    \n    // Удаляем изменение из списка\n    setPendingChanges(prev => prev.filter(c => c.id !== changeId));\n  };\n  \n  const handleApplyChanges = async () => {\n    try {\n      setLoading(true);\n      \n      // Применяем все изменения на сервере\n      for (const change of pendingChanges) {\n        if (change.newVehicleId) {\n          await flightAPI.assignFlight(change.flightId, change.newVehicleId);\n        } else {\n          await flightAPI.unassignFlight(change.flightId);\n        }\n      }\n      \n      // Обновляем данные с сервера\n      const updatedFlights = await flightAPI.getFlights();\n      setFlights(updatedFlights);\n      \n      // Очищаем список изменений\n      setPendingChanges([]);\n      setShowSaveDialog(false);\n      \n    } catch (err) {\n      setError('Ошибка применения изменений');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const handleCancelChanges = () => {\n    // Возвращаем все рейсы к оригинальному состоянию\n    let updatedFlights = [...flights];\n    \n    pendingChanges.forEach(change => {\n      updatedFlights = updatedFlights.map(f => \n        f.id === change.flightId \n          ? { ...f, vehicleId: change.originalVehicleId || '' }\n          : f\n      );\n    });\n    \n    setFlights(updatedFlights);\n    setPendingChanges([]);\n    setShowSaveDialog(false);\n  };\n    // Функции для работы с изменениями назначений\n  \n  // Функции для работы с множественным выбором и скобками\n  const toggleFlightSelection = (flightId: string) => {\n    const flight = flights.find(f => f.id === flightId);\n    if (!flight) return;\n\n    setSelectedFlights(prev => {\n      const newSelected = new Set(prev);\n      \n      if (newSelected.has(flightId)) {\n        // Убираем рейс из выбора\n        newSelected.delete(flightId);\n      } else {\n        // Добавляем рейс в выбор, но только если он на той же машине\n        if (newSelected.size > 0) {\n          // Проверяем что все уже выбранные рейсы на той же машине\n          const selectedFlightIds = Array.from(newSelected);\n          const selectedFlightObjects = flights.filter(f => selectedFlightIds.includes(f.id));\n          const firstMachine = selectedFlightObjects[0]?.vehicleId;\n          \n          if (flight.vehicleId !== firstMachine) {\n            // Показываем сообщение и не добавляем рейс\n            console.log('Нельзя выбрать рейсы с разных машин');\n            return prev; // Возвращаем предыдущий набор без изменений\n          }\n        }\n        \n        // Все проверки пройдены - добавляем рейс\n        newSelected.add(flightId);\n      }\n      return newSelected;\n    });\n  };\n\n  const clearSelection = () => {\n    setSelectedFlights(new Set());\n    setIsMultiSelectMode(false);\n    setSelectedChain(null);\n  };\n\n  const handleChainClick = (chainId: string) => {\n    setSelectedChain(selectedChain === chainId ? null : chainId);\n  };\n\n  const breakSelectedChain = () => {\n    if (!selectedChain) {\n      alert('Выберите скобку для разбития, кликнув по ней');\n      return;\n    }\n    \n    breakChain(selectedChain);\n    setSelectedChain(null);\n  };\n\n  const createChainFromSelected = () => {\n    if (selectedFlights.size < 2) {\n      alert('Выберите минимум 2 рейса для создания скобки');\n      return;\n    }\n\n    // Проверяем что все выбранные рейсы на одной машине\n    const selectedFlightIds = Array.from(selectedFlights);\n    const selectedFlightObjects = flights.filter(f => selectedFlightIds.includes(f.id));\n    \n    if (selectedFlightObjects.length === 0) return;\n    \n    const firstMachine = selectedFlightObjects[0].vehicleId;\n    const allOnSameMachine = selectedFlightObjects.every(f => f.vehicleId === firstMachine);\n    \n    if (!allOnSameMachine) {\n      alert('Все рейсы должны быть на одной машине для создания скобки');\n      return;\n    }\n\n    if (!firstMachine) {\n      alert('Нельзя создать скобку для неназначенных рейсов');\n      return;\n    }\n\n    // Создаем новый chainId\n    const newChainId = `chain-${Date.now()}`;\n    \n    // Обновляем рейсы\n    setFlights(prev => prev.map(f => \n      selectedFlightIds.includes(f.id) \n        ? { ...f, chainId: newChainId }\n        : f\n    ));\n\n    // Автоматически назначаем автолифт для новой цепочки на основе машины\n    autoAssignAutolift(newChainId, firstMachine);\n\n    // Очищаем выбор\n    clearSelection();\n  };\n\n  const breakChain = (chainId: string) => {\n    if (!chainId || chainId.startsWith('solo-')) return;\n    \n    // Убираем chainId у всех рейсов в этой скобке\n    setFlights(prev => prev.map(f => \n      f.chainId === chainId \n        ? { ...f, chainId: '' }\n        : f\n    ));\n  };\n\n  const handleFlightClick = (event: React.MouseEvent, flightId: string) => {\n    if (event.shiftKey) {\n      setIsMultiSelectMode(true);\n      \n      const flight = flights.find(f => f.id === flightId);\n      if (!flight) return;\n      \n      // Проверяем совместимость с уже выбранными рейсами\n      if (selectedFlights.size > 0) {\n        const selectedFlightIds = Array.from(selectedFlights);\n        const selectedFlightObjects = flights.filter(f => selectedFlightIds.includes(f.id));\n        const firstMachine = selectedFlightObjects[0]?.vehicleId;\n        \n        if (flight.vehicleId !== firstMachine) {\n          // Визуальная обратная связь - подсветим неудачную попытку\n          console.log('❌ Нельзя выбрать рейсы с разных машин');\n          \n          // Временно подсветим рейс красным\n          const element = event.currentTarget as HTMLElement;\n          const originalBorder = element.style.border;\n          element.style.border = '3px solid #DC2626';\n          element.style.backgroundColor = '#FEE2E2';\n          \n          setTimeout(() => {\n            element.style.border = originalBorder;\n            element.style.backgroundColor = '';\n          }, 500);\n          \n          event.preventDefault();\n          event.stopPropagation();\n          return;\n        }\n      }\n      \n      toggleFlightSelection(flightId);\n      event.preventDefault();\n      event.stopPropagation();\n    } else if (!isMultiSelectMode) {\n      // Обычный клик без shift - очищаем выбор\n      clearSelection();\n    }\n  };\n  \n  // Функция для назначения машины водителю\n  const handleDriverMachineChange = (driverId: string, machineId: string) => {\n    setDrivers(prevDrivers => \n      prevDrivers.map(d => \n        d.id === driverId \n          ? { ...d, machineId: machineId || '' }\n          : { ...d, machineId: d.machineId === machineId ? '' : d.machineId } // Убираем машину у других водителей\n      )\n    );\n  };\n  \n  // Функция для проверки превышения времени смены\n  const checkDriverOvertime = (driverId: string) => {\n    const driver = drivers.find(d => d.id === driverId);\n    if (!driver || !driver.machineId || driver.machineId === '') return false;\n    \n    const machineFlights = flightsByMachine[driver.machineId] || [];\n    if (machineFlights.length === 0) return false;\n    \n    const firstFlight = machineFlights[0];\n    const lastFlight = machineFlights[machineFlights.length - 1];\n    \n    const shiftTime = getDriverShiftTime(driver.id);\n    return firstFlight.serviceStart < shiftTime.shiftStart || lastFlight.serviceEnd > shiftTime.shiftEnd;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-screen\">\n        <div className=\"text-lg\">Загрузка...</div>\n      </div>\n    );\n  }\n\n  return (\n    <DndContext \n      onDragStart={handleDragStart} \n      onDragOver={handleDragOver}\n      onDragEnd={handleDragEnd}\n      onDragCancel={() => {\n        setActiveFlight(null);\n        setIsDragging(false);\n        setTimeGapInfo(null);\n        setHoverMachineId(null);\n        document.body.style.overflow = '';\n      }}\n      autoScroll={false}\n      collisionDetection={customCollisionDetection}\n    >\n      <div className=\"h-screen flex flex-col overflow-hidden\" style={{ \n        background: 'linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)',\n        cursor: isResizing ? 'ns-resize' : 'default' \n      }}>\n      {/* Компактный заголовок в спокойном стиле */}\n      <div className=\"shadow-md border-b flex-none z-50\" style={{ \n        background: 'linear-gradient(135deg, #e3eef7 0%, #d7e8f0 100%)',\n        height: '32px', \n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'center',\n        boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n      }}>\n        <h1 className=\"text-xl font-semibold\" style={{ \n          margin: 0, \n          lineHeight: '1',\n          color: '#475569'\n        }}>\n          Аэромар\n        </h1>\n      </div>\n\n      {/* Компактная панель действий */}\n      <div className=\"border-b px-4 py-2 flex-none z-40\" style={{\n        background: 'linear-gradient(135deg, #e3eef7 0%, #d7e8f0 100%)',\n        boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n      }}>\n        <div className=\"flex items-center justify-between\">\n          {/* Левая группа - основные действия */}\n          <div className=\"flex items-center gap-2\">\n            {/* Импорт CSV */}\n            <button\n              onClick={onPick}\n              disabled={loading}\n              className=\"px-3 py-1 text-xs font-semibold rounded shadow-sm border transition-all duration-200\"\n              style={{\n                backgroundColor: '#e0f2fe',\n                color: '#0c4a6e',\n                borderColor: '#7dd3fc',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n              }}\n              title=\"Импорт CSV файла\"\n            >\n              Импорт\n            </button>\n            \n            <input\n              ref={fileRef}\n              type=\"file\"\n              accept=\".csv\"\n              onChange={onFile}\n              className=\"hidden\"\n            />\n            \n            {/* Автоназначение */}\n            <button\n              onClick={handleAutoAssign}\n              disabled={loading || flights.length === 0}\n              className=\"px-3 py-1 text-xs font-semibold rounded shadow-sm border transition-all duration-200\"\n              style={{\n                backgroundColor: '#e0f2fe',\n                color: '#0c4a6e',\n                borderColor: '#7dd3fc',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n              }}\n              title=\"Автоматическое назначение рейсов\"\n            >\n              Авто\n            </button>\n            \n            {/* Сброс */}\n            <button\n              onClick={handleResetAssign}\n              disabled={loading}\n              className=\"px-3 py-1 text-xs font-semibold rounded shadow-sm border transition-all duration-200\"\n              style={{\n                backgroundColor: '#e0f2fe',\n                color: '#0c4a6e',\n                borderColor: '#7dd3fc',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n              }}\n              title=\"Сброс всех назначений\"\n            >\n              Сброс\n            </button>\n\n            {/* Обновить */}\n            <button\n              onClick={async () => {\n                console.log('🔄 Перезагружаем данные...');\n                try {\n                  setLoading(true);\n                  const [machinesData, flightsData] = await Promise.all([\n                    machineAPI.getMachines(),\n                    flightAPI.getFlights()\n                  ]);\n                  console.log('✅ Обновлены данные - машины:', machinesData.length, 'рейсы:', flightsData.length);\n                  setMachines(machinesData);\n                  setFlights(flightsData);\n                } catch (err) {\n                  console.error('❌ Ошибка обновления:', err);\n                } finally {\n                  setLoading(false);\n                }\n              }}\n              disabled={loading}\n              className=\"px-3 py-1 text-xs font-semibold rounded shadow-sm border transition-all duration-200\"\n              style={{\n                backgroundColor: '#e0f2fe',\n                color: '#0c4a6e',\n                borderColor: '#7dd3fc',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n              }}\n              title=\"Обновить данные\"\n            >\n              Обновить\n            </button>\n            \n            {/* Сохранить расстановку */}\n            <button\n              onClick={() => setShowSaveDialog(true)}\n              disabled={loading || pendingChanges.length === 0}\n              className=\"px-3 py-1 text-xs font-semibold rounded shadow-sm border transition-all duration-200\"\n              style={{\n                backgroundColor: pendingChanges.length > 0 ? '#e0f2fe' : '#f1f5f9',\n                color: pendingChanges.length > 0 ? '#0c4a6e' : '#64748b',\n                borderColor: pendingChanges.length > 0 ? '#7dd3fc' : '#cbd5e1',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n              }}\n              title={`Сохранить изменения (${pendingChanges.length})`}\n            >\n              Сохранить {pendingChanges.length > 0 && `(${pendingChanges.length})`}\n            </button>\n            \n            {/* Управление скобками */}\n            <div className=\"flex items-center gap-1 border-l pl-3 ml-2\">\n              <button\n                onClick={createChainFromSelected}\n                disabled={selectedFlights.size < 2}\n                className=\"px-3 py-1 text-xs font-medium rounded shadow-sm border transition-all duration-200\"\n                style={{\n                  backgroundColor: selectedFlights.size >= 2 ? '#e0f2fe' : '#f8fafc',\n                  color: selectedFlights.size >= 2 ? '#0369a1' : '#94a3b8',\n                  borderColor: selectedFlights.size >= 2 ? '#7dd3fc' : '#e2e8f0',\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n                }}\n                title=\"Создать скобку из выбранных рейсов (Shift+клик для выбора)\"\n              >\n                Скобка ({selectedFlights.size})\n              </button>\n              \n              <button\n                onClick={breakSelectedChain}\n                disabled={!selectedChain}\n                className=\"px-3 py-1 text-xs font-medium rounded shadow-sm border transition-all duration-200\"\n                style={{\n                  backgroundColor: selectedChain ? '#fecaca' : '#f8fafc',\n                  color: selectedChain ? '#dc2626' : '#94a3b8',\n                  borderColor: selectedChain ? '#fca5a5' : '#e2e8f0',\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n                }}\n                title=\"Разбить выбранную скобку (сначала кликните по скобке)\"\n              >\n                Разбить\n              </button>\n              \n              <button\n                onClick={clearSelection}\n                disabled={selectedFlights.size === 0}\n                className=\"px-3 py-1 text-xs font-medium rounded shadow-sm border transition-all duration-200\"\n                style={{\n                  backgroundColor: selectedFlights.size > 0 ? '#fef3c7' : '#f8fafc',\n                  color: selectedFlights.size > 0 ? '#92400e' : '#94a3b8',\n                  borderColor: selectedFlights.size > 0 ? '#fde68a' : '#e2e8f0',\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n                }}\n                title=\"Очистить выбор\"\n              >\n                Очистить\n              </button>\n            </div>\n            \n            {/* Индикатор режима multi-select */}\n            {isMultiSelectMode && (\n              <div className=\"px-2 py-1 text-xs font-medium rounded border transition-all duration-200\"\n                style={{\n                  backgroundColor: '#fef3c7',\n                  color: '#92400e',\n                  borderColor: '#fde68a',\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n                }}\n                title=\"Режим выбора рейсов активен. Перетаскивание отключено. Нажмите 'Очистить' для выхода.\"\n              >\n                🎯 Режим выбора\n              </div>\n            )}\n          </div>\n\n          {/* Правая группа - настройки */}\n          <div className=\"flex items-center gap-2\">\n            {/* Автоназначение после импорта в стиле кнопки */}\n            <label \n              className=\"px-3 py-1 text-xs font-semibold rounded shadow-sm border transition-all duration-200 flex items-center gap-2 cursor-pointer\"\n              style={{\n                backgroundColor: autoAfterImport ? '#e0f2fe' : '#f8fafc',\n                color: autoAfterImport ? '#0c4a6e' : '#64748b',\n                borderColor: autoAfterImport ? '#7dd3fc' : '#e2e8f0',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n              }}\n              title=\"Автоматически назначать рейсы после импорта\"\n            >\n              <input\n                type=\"checkbox\"\n                checked={autoAfterImport}\n                onChange={e => setAutoAfterImport(e.target.checked)}\n                className=\"hidden\"\n              />\n              <span className=\"w-3 h-3 rounded border flex items-center justify-center text-xs\"\n                style={{\n                  backgroundColor: autoAfterImport ? '#0c4a6e' : 'transparent',\n                  borderColor: autoAfterImport ? '#0c4a6e' : '#94a3b8',\n                  color: 'white'\n                }}\n              >\n                {autoAfterImport && '✓'}\n              </span>\n              Автоназначение\n            </label>\n            \n            {/* Масштаб в стиле кнопки */}\n            <div className=\"flex items-center\">\n              <select\n                value={horizontalScale}\n                onChange={(e) => setHorizontalScale(Number(e.target.value))}\n                className=\"px-3 py-1 text-xs font-semibold rounded shadow-sm border transition-all duration-200\"\n                style={{\n                  backgroundColor: '#e0f2fe',\n                  color: '#0c4a6e',\n                  borderColor: '#7dd3fc',\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n                  cursor: 'pointer'\n                }}\n                title=\"Масштаб диаграммы\"\n              >\n                <option value={0.5}>Масштаб 50%</option>\n                <option value={1}>Масштаб 100%</option>\n                <option value={1.5}>Масштаб 150%</option>\n                <option value={2}>Масштаб 200%</option>\n              </select>\n            </div>\n          </div>\n        </div>\n        \n        {error && (\n          <div className=\"mt-1 p-2 rounded text-xs\" style={{\n            background: 'linear-gradient(135deg, #fee2e2 0%, #fecaca 100%)',\n            color: '#dc2626',\n            border: '1px solid #fca5a5',\n            boxShadow: '0 1px 2px rgba(220, 38, 38, 0.1)'\n          }}>\n            {error}\n          </div>\n        )}\n      </div>\n\n      {/* Основной контент */}\n      <div className=\"flex-1 flex flex-col min-h-0\">\n          {/* Главная диаграмма Ганта */}\n          <div className=\"flex-1 flex flex-col min-h-0\">\n            {/* Заголовок с временной шкалой */}\n            <div className=\"flex-none border-b flex z-30\" style={{\n              background: 'linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)',\n              borderBottomColor: '#cbd5e1',\n              boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\n              height: `${laneH}px`,\n              boxSizing: 'border-box'\n            }}>\n              {/* Разделенный заголовок для водителей и автолифтов */}\n              <div className=\"flex-none flex\" style={{ \n                width: `${TOTAL_DRIVERS_WIDTH}px`,\n                borderRight: '1px solid #e5e7eb'\n              }}>\n                {/* Заголовок \"Работник\" */}\n                <div \n                  className=\"flex-none px-2 py-1 flex items-center justify-center\"\n                  style={{ \n                    width: `${DRIVER_INFO_WIDTH}px`, \n                    height: '100%',\n                    borderRight: '1px solid #cbd5e1',\n                    background: 'linear-gradient(135deg, #e3eef7 0%, #d7e8f0 100%)',\n                    boxShadow: '0 2px 4px rgba(0,0,0,0.1), inset -1px 0 3px rgba(0,0,0,0.05)',\n                    boxSizing: 'border-box'\n                  }}\n                >\n                  <div className=\"text-xs font-semibold\" style={{ \n                    color: '#475569'\n                  }}>\n                    Работник\n                  </div>\n                </div>\n                \n                {/* Заголовок \"Автолифт\" */}\n                <div \n                  className=\"flex-none px-2 py-1 flex items-center justify-center\"\n                  style={{ \n                    width: `${MACHINE_SELECT_WIDTH}px`, \n                    height: '100%',\n                    borderRight: '1px solid #cbd5e1',\n                    background: 'linear-gradient(135deg, #e3eef7 0%, #d7e8f0 100%)',\n                    boxShadow: '0 2px 4px rgba(0,0,0,0.1), inset -1px 0 3px rgba(0,0,0,0.05)',\n                    boxSizing: 'border-box'\n                  }}\n                >\n                  <div className=\"text-xs font-semibold\" style={{ \n                    color: '#475569'\n                  }}>\n                    Автолифт\n                  </div>\n                </div>\n                \n                {/* Заголовок \"Время смены\" */}\n                <div \n                  className=\"flex-none px-2 py-1 flex items-center justify-center\"\n                  style={{ \n                    width: `${SHIFT_TIME_WIDTH}px`, \n                    height: '100%',\n                    borderRight: '1px solid #cbd5e1',\n                    background: 'linear-gradient(135deg, #e3eef7 0%, #d7e8f0 100%)',\n                    boxShadow: '0 2px 4px rgba(0,0,0,0.1), inset -1px 0 3px rgba(0,0,0,0.05)',\n                    boxSizing: 'border-box'\n                  }}\n                >\n                  <div className=\"text-xs font-semibold\" style={{ \n                    color: '#475569'\n                  }}>\n                    Время смены\n                  </div>\n                </div>\n                \n                {/* Заголовок \"Длительность\" */}\n                <div \n                  className=\"flex-none px-2 py-1 flex items-center justify-center\"\n                  style={{ \n                    width: `${WORK_DURATION_WIDTH}px`, \n                    height: '100%',\n                    background: 'linear-gradient(135deg, #e3eef7 0%, #d7e8f0 100%)',\n                    boxShadow: '0 2px 4px rgba(0,0,0,0.1), inset -1px 0 3px rgba(0,0,0,0.05)',\n                    boxSizing: 'border-box'\n                  }}\n                >\n                  <div className=\"text-xs font-semibold\" style={{ \n                    color: '#475569'\n                  }}>\n                    Δt\n                  </div>\n                </div>\n              </div>\n              \n              {/* Временная шкала с прямым скроллом */}\n              <div \n                ref={footRef}\n                className=\"flex-1 overflow-x-auto overflow-y-hidden\"\n                style={{ height: `${laneH}px`, boxSizing: 'border-box' }}\n              >\n                <div style={{ \n                  position: 'relative', \n                  width: totalWidth,\n                  height: '100%',\n                  background: 'linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%)',\n                  boxShadow: 'inset 0 1px 3px rgba(0,0,0,0.1)'\n                }}>\n                    {gridLines.map(minutes => (\n                      <div\n                        key={minutes}\n                        style={{\n                          position: 'absolute',\n                          left: (minutes - DAY_START) * pxPerMin,\n                          top: 0,\n                          bottom: 0,\n                          width: '1px',\n                          backgroundColor: minutes % 60 === 0 ? '#64748b' : '#cbd5e1',\n                          display: 'flex',\n                          alignItems: 'flex-end',\n                          justifyContent: 'center',\n                          paddingBottom: '2px',\n                          boxShadow: minutes % 60 === 0 ? '0 0 2px rgba(100,116,139,0.3)' : 'none'\n                        }}\n                      >\n                        {minutes % 60 === 0 && (\n                          <span style={{\n                            fontSize: '8px',\n                            color: '#475569',\n                            backgroundColor: 'rgba(255,255,255,0.9)',\n                            padding: '1px 3px',\n                            borderRadius: '2px',\n                            border: '1px solid #cbd5e1',\n                            fontWeight: '500',\n                            textShadow: '0 1px 1px rgba(255,255,255,0.8)',\n                            boxShadow: '0 1px 2px rgba(0,0,0,0.1)'\n                          }}>\n                            {toHHMM(minutes)}\n                          </span>\n                        )}\n                      </div>\n                    ))}\n                    \n                    {/* Линия \"сейчас\" в заголовке */}\n                    <div\n                      style={{\n                        position: 'absolute',\n                        left: nowLeft,\n                        top: 0,\n                        bottom: 0,\n                        width: '2px',\n                        background: 'linear-gradient(180deg, #ef4444 0%, #dc2626 100%)',\n                        zIndex: 10,\n                        boxShadow: '0 0 8px rgba(239,68,68,0.6), 0 0 4px rgba(239,68,68,0.8)'\n                      }}\n                    />\n                  </div>\n                </div>\n            </div>\n            \n            {/* Область с машинами и рейсами */}\n            <div className=\"flex-1 overflow-y-auto\" style={{ maxHeight: 'calc(100vh - 200px)' }}>\n              <div className=\"flex\" style={{ minHeight: '100%' }}>\n              {/* Фиксированный столбец с водителями и машинами */}\n              <div \n                ref={driversRef}\n                className=\"flex-none bg-white sticky left-0 z-10\"\n                style={{ \n                  width: `${TOTAL_DRIVERS_WIDTH}px`, \n                  borderRight: '1px solid #e5e7eb',\n                  boxShadow: '2px 0 8px rgba(0,0,0,0.1)'\n                }}\n              >\n                {drivers.map((driver, index) => {\n                  const hasNoMachine = !driver.machineId || driver.machineId === '';\n                  const hasOvertime = checkDriverOvertime(driver.id);\n                  const machine = driver.machineId && driver.machineId !== '' ? machines.find(m => m.id === driver.machineId) : null;\n                  const layerCount = machine ? getLayerCount(machine.id) : 1;\n                  const flightHeight = laneH - 12;\n                  const layerSpacing = flightHeight + 6;\n                  const dynamicLaneH = layerCount === 1 ? laneH : Math.max(laneH, layerCount * layerSpacing + 12);\n                  \n                  return (\n                    <div key={driver.id} className=\"border-b border-gray-200 flex\" style={{ height: dynamicLaneH, boxSizing: 'border-box' }}>\n                      {/* Информация о водителе */}\n                      <div \n                        className={`flex-none px-2 py-1 ${hasOvertime ? 'bg-red-100' : 'bg-white'} flex flex-col justify-center`} \n                        style={{ \n                          width: `${DRIVER_INFO_WIDTH}px`, \n                          borderRight: '1px solid #e5e7eb',\n                          boxSizing: 'border-box'\n                        }}\n                      >\n                        {/* Имя водителя в сокращенном формате */}\n                        <div style={{ \n                          fontSize: '11px', \n                          fontWeight: '600', \n                          color: '#111827',\n                          lineHeight: '1.2',\n                          marginBottom: '2px'\n                        }}>\n                          {formatDriverName(driver.name)}\n                        </div>\n                        \n                        {/* Время смены (оригинальное для справки) */}\n                        <div style={{ \n                          fontSize: '9px', \n                          color: '#6b7280',\n                          lineHeight: '1.2'\n                        }}>\n                          {toHHMM(driver.shiftStart)} - {toHHMM(driver.shiftEnd)}\n                        </div>\n                      </div>\n                      \n                      {/* Панель назначения машины */}\n                      <div \n                        className={`flex-none px-2 py-1 ${hasNoMachine ? 'bg-red-100' : 'bg-white'} flex flex-col justify-center`} \n                        style={{ \n                          width: `${MACHINE_SELECT_WIDTH}px`,\n                          borderRight: '1px solid #e5e7eb',\n                          boxSizing: 'border-box'\n                        }}\n                      >\n                        <select\n                          value={driver.machineId || ''}\n                          onChange={(e) => handleDriverMachineChange(driver.id, e.target.value)}\n                          className=\"w-full text-xs border border-gray-300 rounded px-2 py-1 bg-white mb-1\"\n                          style={{ fontSize: '10px' }}\n                        >\n                          <option value=\"\">Выберите машину</option>\n                          {machines.map(machine => (\n                            <option key={machine.id} value={machine.id}>\n                              {machine.name}\n                            </option>\n                          ))}\n                        </select>\n                        \n                        {/* Отображаем название назначенной машины или статус */}\n                        <div style={{ fontSize: '9px', color: '#6b7280', lineHeight: '1.2' }}>\n                          {driver.machineId && driver.machineId !== '' \n                            ? machines.find(m => m.id === driver.machineId)?.name || 'Машина не найдена'\n                            : 'Машина не назначена'\n                          }\n                        </div>\n                        \n                        {/* Предупреждения */}\n                        {hasNoMachine && (\n                          <div className=\"text-xs text-red-600\" style={{ fontSize: '8px', lineHeight: '1.2' }}>\n                            ⚠️ Назначить машину\n                          </div>\n                        )}\n                      </div>\n                      \n                      {/* Колонка редактируемого времени смены */}\n                      <div \n                        className=\"flex-none bg-white flex flex-col justify-center items-center gap-1\" \n                        style={{ \n                          width: `${SHIFT_TIME_WIDTH}px`,\n                          borderRight: '1px solid #e5e7eb',\n                          boxSizing: 'border-box',\n                          padding: '1px 2px'\n                        }}\n                      >\n                        {/* Время начала смены */}\n                        <input\n                          type=\"time\"\n                          value={toHHMM(getDriverShiftTime(driver.id).shiftStart)}\n                          onChange={(e) => {\n                            const [hours, minutes] = e.target.value.split(':').map(Number);\n                            updateDriverShiftTime(driver.id, 'shiftStart', hours * 60 + minutes);\n                          }}\n                          className=\"text-xs border border-gray-300 rounded bg-white\"\n                          style={{ \n                            fontSize: '9px', \n                            height: '16px', \n                            width: '65px',\n                            padding: '1px 3px',\n                            textAlign: 'center'\n                          }}\n                        />\n                        \n                        {/* Время окончания смены */}\n                        <input\n                          type=\"time\"\n                          value={toHHMM(getDriverShiftTime(driver.id).shiftEnd)}\n                          onChange={(e) => {\n                            const [hours, minutes] = e.target.value.split(':').map(Number);\n                            updateDriverShiftTime(driver.id, 'shiftEnd', hours * 60 + minutes);\n                          }}\n                          className=\"text-xs border border-gray-300 rounded bg-white\"\n                          style={{ \n                            fontSize: '9px', \n                            height: '16px', \n                            width: '65px',\n                            padding: '1px 3px',\n                            textAlign: 'center'\n                          }}\n                        />\n                      </div>\n                      \n                      {/* Колонка продолжительности смены */}\n                      <div \n                        className=\"flex-none px-1 py-1 bg-gray-50 flex items-center justify-center\" \n                        style={{ \n                          width: `${WORK_DURATION_WIDTH}px`,\n                          boxSizing: 'border-box'\n                        }}\n                      >\n                        <div className=\"text-center\">\n                          <div style={{ \n                            fontSize: '11px', \n                            fontWeight: '600', \n                            color: '#374151',\n                            lineHeight: '1.2'\n                          }}>\n                            {(() => {\n                              const shiftTime = getDriverShiftTime(driver.id);\n                              return calculateShiftDuration(shiftTime.shiftStart, shiftTime.shiftEnd);\n                            })()}\n                          </div>\n                          <div style={{ \n                            fontSize: '8px', \n                            color: '#6b7280',\n                            lineHeight: '1.2'\n                          }}>\n                            часов\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              \n              {/* Область с рейсами с активным скроллом */}\n              <div \n                ref={mainRef}\n                className=\"flex-1 bg-gray-50 overflow-x-auto\"\n                style={{ boxShadow: 'inset 2px 0 8px rgba(0,0,0,0.05)' }}\n              >\n                <div style={{ width: totalWidth, minHeight: '100%' }}>\n                  {drivers.map((driver, index) => {\n                    const machine = driver.machineId && driver.machineId !== '' ? machines.find(m => m.id === driver.machineId) : null;\n                    const machineFlights = machine ? (flightsByMachine[machine.id] || []) : [];\n                    const layerCount = machine ? getLayerCount(machine.id) : 1;\n                    const flightHeight = laneH - 12;\n                    const layerSpacing = flightHeight + 6;\n                    const dynamicLaneH = layerCount === 1 ? laneH : Math.max(laneH, layerCount * layerSpacing + 12);\n                    \n                    return (\n                      <div key={driver.id} className=\"border-b border-gray-200\" style={{ height: dynamicLaneH, boxSizing: 'border-box' }}>\n                        <div style={{ position: 'relative', width: totalWidth, height: '100%', boxSizing: 'border-box' }}>\n                          {/* Вертикальные линии сетки времени */}\n                          {gridLines.map(minutes => (\n                            <div\n                              key={minutes}\n                              style={{\n                                position: 'absolute',\n                                left: (minutes - DAY_START) * pxPerMin,\n                                top: 0,\n                                bottom: 0,\n                                width: '1px',\n                                backgroundColor: minutes % 60 === 0 ? '#9ca3af' : '#e5e7eb',\n                                opacity: 0.7,\n                                zIndex: 1\n                              }}\n                            />\n                          ))}\n                          \n                          {/* Смена водителя (небесно-голубой фон) - используем пользовательское время */}\n                          <div\n                            style={{\n                              position: 'absolute',\n                              left: (getDriverShiftTime(driver.id).shiftStart - DAY_START) * pxPerMin,\n                              top: 0,\n                              width: (getDriverShiftTime(driver.id).shiftEnd - getDriverShiftTime(driver.id).shiftStart) * pxPerMin,\n                              height: '100%',\n                              backgroundColor: '#87ceeb', // Небесно-голубой\n                              opacity: 0.15, // Уменьшенная прозрачность для лучшей читаемости\n                              borderRadius: '2px',\n                              zIndex: 1\n                            }}\n                          />\n                          \n                          {/* Визуализация временных зазоров при перетаскивании */}\n                          {timeGapInfo && timeGapInfo.machineId === machine?.id && activeFlight && (\n                            <>\n                              {/* Зазор слева от рейса (от начала обслуживания) */}\n                              {timeGapInfo.beforeGap && (\n                                <div\n                                  style={{\n                                    position: 'absolute',\n                                    left: (timeGapInfo.beforeGap.insertTime - DAY_START) * pxPerMin,\n                                    top: '50%',\n                                    transform: 'translateY(-50%)',\n                                    width: Math.max(30, timeGapInfo.beforeGap.gap * pxPerMin),\n                                    height: 10,\n                                    backgroundColor: timeGapInfo.beforeGap.gap < 25 \n                                      ? 'rgba(239, 68, 68, 0.15)' // Красный если < 25 мин (более прозрачный)\n                                      : 'rgba(107, 114, 128, 0.15)', // Серый если >= 25 мин (более прозрачный)\n                                    border: timeGapInfo.beforeGap.gap < 25 \n                                      ? '1px dashed #ef4444' \n                                      : '1px dashed #6b7280',\n                                    borderRadius: '3px',\n                                    zIndex: 15,\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                    fontSize: '8px',\n                                    color: timeGapInfo.beforeGap.gap < 25 ? '#dc2626' : '#374151',\n                                    fontWeight: '500'\n                                  }}\n                                >\n                                  {Math.floor(timeGapInfo.beforeGap.gap)}мин\n                                </div>\n                              )}\n                              \n                              {/* Зазор справа от рейса (от конца обслуживания) */}\n                              {timeGapInfo.afterGap && (\n                                <div\n                                  style={{\n                                    position: 'absolute',\n                                    left: (timeGapInfo.afterGap.insertTime - DAY_START) * pxPerMin,\n                                    top: '30%',\n                                    transform: 'translateY(-50%)',\n                                    width: Math.max(30, timeGapInfo.afterGap.gap * pxPerMin),\n                                    height: 10,\n                                    backgroundColor: timeGapInfo.afterGap.gap < 25 \n                                      ? 'rgba(239, 68, 68, 0.15)' // Красный если < 25 мин (более прозрачный)\n                                      : 'rgba(107, 114, 128, 0.15)', // Серый если >= 25 мин (более прозрачный)\n                                    border: timeGapInfo.afterGap.gap < 25 \n                                      ? '1px dashed #ef4444' \n                                      : '1px dashed #6b7280',\n                                    borderRadius: '3px',\n                                    zIndex: 15,\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                    fontSize: '8px',\n                                    color: timeGapInfo.afterGap.gap < 25 ? '#dc2626' : '#374151',\n                                    fontWeight: '500'\n                                  }}\n                                >\n                                  {Math.floor(timeGapInfo.afterGap.gap)}мин\n                                </div>\n                              )}\n                            </>\n                          )}\n                          \n                          {machine && (\n                            <DroppableMachineSlot\n                              machine={machine}\n                              laneH={dynamicLaneH}\n                              totalWidth={totalWidth}\n                            >\n                              {/* Полоски для скобок-цепочек с индивидуальными окнами */}\n                              {chainsByMachine[machine.id]?.map((chain, idx) => {\n                                const xPos = (chain.start - DAY_START) * pxPerMin;\n                                const xPosEnd = (chain.end - DAY_START) * pxPerMin;\n                                const width = Math.max(4, xPosEnd - xPos);\n                                const currentChainWindows = chainWindows[chain.chainId] || {};\n                                \n                                // Получаем границы цепочки по слоям\n                                const layerBounds = getChainLayerBounds(chain.chainId, machine.id);\n                                \n                                return (\n                                  <div key={`chain-${machine.id}-${chain.chainId}-${idx}`}>\n                                    {/* Фиолетовая полоса */}\n                                    <div \n                                      className=\"absolute border-2 border-purple-500\"\n                                      style={{\n                                        left: xPos,\n                                        width: width,\n                                        top: layerBounds.top, // Позиционируем от верхнего слоя\n                                        height: layerBounds.height, // Высота охватывает все слои\n                                        borderRadius: '4px',\n                                        backgroundColor: selectedChain === chain.chainId \n                                          ? 'rgba(239, 68, 68, 0.2)' // Красноватый для выбранной\n                                          : 'rgba(147, 51, 234, 0.1)', // Обычный фиолетовый\n                                        border: selectedChain === chain.chainId \n                                          ? '2px solid #EF4444' // Красная граница для выбранной\n                                          : '2px solid #9333EA', // Фиолетовая граница\n                                        zIndex: 1,\n                                        cursor: 'pointer'\n                                      }}\n                                      onClick={() => handleChainClick(chain.chainId)}\n                                      title=\"Кликните для выбора скобки, затем нажмите 'Разбить скобку' в панели управления\"\n                                    />\n                                    \n                                    {/* Окно погрузки - слева на фиолетовой полосе */}\n                                    <div \n                                      style={{\n                                        position: 'absolute',\n                                        left: xPos - 2, // Немного левее начала полосы\n                                        top: layerBounds.top + layerBounds.height / 2, // Центрируем по высоте цепочки\n                                        transform: 'translateY(-50%)',\n                                        height: 15, // Меньше высоты полосы\n                                        minWidth: '40px',\n                                        backgroundColor: 'rgba(5, 150, 105, 0.7)', // Полупрозрачный зеленый\n                                        color: 'white',\n                                        borderRadius: '3px',\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                        fontSize: '9px',\n                                        fontWeight: '600',\n                                        zIndex: 5,\n                                        border: '1px solid rgba(4, 120, 87, 0.8)'\n                                      }}\n                                    >\n                                      <select\n                                        value={currentChainWindows.loadingWindow || ''}\n                                        onChange={(e) => {\n                                          const newValue = e.target.value ? Number(e.target.value) : undefined;\n                                          setChainWindows(prev => ({\n                                            ...prev,\n                                            [chain.chainId]: {\n                                              ...prev[chain.chainId],\n                                              loadingWindow: newValue\n                                            }\n                                          }));\n                                        }}\n                                        style={{\n                                          backgroundColor: 'transparent',\n                                          border: 'none',\n                                          color: 'white',\n                                          fontSize: '9px',\n                                          fontWeight: '600',\n                                          outline: 'none',\n                                          cursor: 'pointer',\n                                          width: '100%',\n                                          textAlign: 'center'\n                                        }}\n                                      >\n                                        <option value=\"\" style={{ color: '#000' }}>—</option>\n                                        {Array.from({ length: 19 }, (_, i) => i + 1).map(num => (\n                                          <option key={num} value={num} style={{ color: '#000' }}>{num}</option>\n                                        ))}\n                                      </select>\n                                    </div>\n                                    \n                                    {/* Окно разгрузки - справа на фиолетовой полосе */}\n                                    <div \n                                      style={{\n                                        position: 'absolute',\n                                        left: xPos + width - 38, // Немного левее конца полосы (ширина селектора ~40px)\n                                        top: layerBounds.top + layerBounds.height / 2, // Центрируем по высоте цепочки\n                                        transform: 'translateY(-50%)',\n                                        height: 15, // Меньше высоты полосы\n                                        minWidth: '40px',\n                                        backgroundColor: 'rgba(220, 38, 38, 0.7)',\n                                        color: 'white',\n                                        borderRadius: '3px',\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                        fontSize: '9px',\n                                        fontWeight: '600',\n                                        zIndex: 5,\n                                        border: '1px solid #B91C1C'\n                                      }}\n                                    >\n                                      <select\n                                        value={currentChainWindows.unloadingWindow || ''}\n                                        onChange={(e) => {\n                                          const newValue = e.target.value ? Number(e.target.value) : undefined;\n                                          setChainWindows(prev => ({\n                                            ...prev,\n                                            [chain.chainId]: {\n                                              ...prev[chain.chainId],\n                                              unloadingWindow: newValue\n                                            }\n                                          }));\n                                        }}\n                                        style={{\n                                          backgroundColor: 'transparent',\n                                          border: 'none',\n                                          color: 'white',\n                                          fontSize: '9px',\n                                          fontWeight: '600',\n                                          outline: 'none',\n                                          cursor: 'pointer',\n                                          width: '100%',\n                                          textAlign: 'center'\n                                        }}\n                                      >\n                                        <option value=\"\" style={{ color: '#000' }}>—</option>\n                                        {[20, 21, 22, 23].map(num => (\n                                          <option key={num} value={num} style={{ color: '#000' }}>{num}</option>\n                                        ))}\n                                      </select>\n                                    </div>\n                                    \n                                    {/* Номер автолифта - выпадающий список по центру полосы */}\n                                    {width > 100 && (() => {\n                                      // Получаем автолифт по умолчанию для этой цепочки на основе машины\n                                      const defaultAutolift = chainAutolifts[chain.chainId] || getAutoliftFromMachine(chain.machineId);\n                                      \n                                      // Если автолифт не был назначен ранее, автоматически назначаем\n                                      if (!chainAutolifts[chain.chainId] && defaultAutolift) {\n                                        autoAssignAutolift(chain.chainId, chain.machineId);\n                                      }\n                                      \n                                      return (\n                                        <select\n                                          value={defaultAutolift}\n                                          onChange={(e) => {\n                                            const value = e.target.value;\n                                            setChainAutolifts(prev => ({\n                                              ...prev,\n                                              [chain.chainId]: value\n                                            }));\n                                          }}\n                                          style={{\n                                            position: 'absolute',\n                                            left: xPos + width / 2,\n                                            top: '50%',\n                                            transform: 'translate(-50%, -50%)',\n                                            fontSize: '9px',\n                                            color: selectedChain === chain.chainId ? '#DC2626' : '#8B5CF6',\n                                            fontWeight: '600',\n                                            backgroundColor: 'rgba(255, 255, 255, 0.95)',\n                                            border: `1px solid ${selectedChain === chain.chainId ? '#DC2626' : '#8B5CF6'}`,\n                                            borderRadius: '3px',\n                                            padding: '2px 4px',\n                                            minWidth: '60px',\n                                            maxWidth: '80px',\n                                            textAlign: 'center',\n                                            zIndex: 3,\n                                            outline: 'none',\n                                            cursor: 'pointer'\n                                          }}\n                                          onClick={(e) => e.stopPropagation()} // Предотвращаем выбор цепочки при клике на поле\n                                        >\n                                          <option value=\"\" style={{ color: '#000' }}>—</option>\n                                          {(autolifts.length > 0 ? autolifts : ['133', '135', '136', '139', '140', '141', '149', '150', '151']).map(autolift => (\n                                            <option key={autolift} value={autolift} style={{ color: '#000' }}>\n                                              {autolift}\n                                            </option>\n                                          ))}\n                                        </select>\n                                      );\n                                    })()}\n                                  </div>\n                                );\n                              })}\n                              \n                              {/* Рейсы */}\n                              {machineFlights.map((flight, index) => {\n                                const left = (flight.loadStart - DAY_START) * pxPerMin;\n                                const width = Math.max(12, (flight.loadEnd - flight.loadStart) * pxPerMin);\n                                const isPending = pendingChanges.some(c => c.flightId === flight.id);\n                                const flightLayer = machine ? getFlightLayer(flight.id, machine.id) : 0;\n                                const totalLayers = machine ? getLayerCount(machine.id) : 1;\n                                \n                                // Расчет позиции для центровки в строке\n                                const flightHeight = laneH - 12; // Увеличили высоту рейса\n                                let layerTop = 0;\n                                \n                                if (totalLayers === 1) {\n                                  // Если только один слой, центрируем в строке\n                                  layerTop = 0; // Будет центрироваться через CSS (top: 50%, transform: translateY(-50%))\n                                } else {\n                                  // Если несколько слоев, располагаем симметрично\n                                  const layerSpacing = flightHeight + 4; // Расстояние между слоями\n                                  const totalHeight = totalLayers * layerSpacing;\n                                  const centerY = dynamicLaneH / 2;\n                                  const startY = centerY - totalHeight / 2;\n                                  layerTop = startY + flightLayer * layerSpacing;\n                                }\n                                \n                                // Определяем позицию в скобке (цепочке)\n                                const flightsInSameChain = machineFlights.filter(f => f.chainId === flight.chainId);\n                                const indexInChain = flightsInSameChain.findIndex(f => f.id === flight.id);\n                                const chainLength = flightsInSameChain.length;\n                                \n                                let bracketPosition: 'start' | 'middle' | 'end' | 'single' = 'single';\n                                let showBracket = false;\n                                \n                                if (chainLength > 1 && flight.chainId && flight.chainId.trim() !== '') {\n                                  showBracket = true;\n                                  if (indexInChain === 0) {\n                                    bracketPosition = 'start';\n                                  } else if (indexInChain === chainLength - 1) {\n                                    bracketPosition = 'end';\n                                  } else {\n                                    bracketPosition = 'middle';\n                                  }\n                                }\n                                \n                                // НЕ показываем окна под рейсами - они будут только на краях скобок\n                                let loadingWindow: number | undefined;\n                                let unloadingWindow: number | undefined;\n                                \n                                return (\n                                  <DraggableFlight\n                                    key={flight.id}\n                                    flight={flight}\n                                    left={left}\n                                    width={width}\n                                    laneH={laneH - 6} // Уменьшили отступ: было laneH-12, стало laneH-6 для увеличения высоты\n                                    fontPx={fontPx}\n                                    isAssigned={true}\n                                    isPending={isPending}\n                                    status={getFlightStatus(flight)}\n                                    showBracket={showBracket}\n                                    bracketPosition={bracketPosition}\n                                    loadingWindow={loadingWindow}\n                                    unloadingWindow={unloadingWindow}\n                                    onStatusChange={(status: 'completed' | 'in-progress' | 'planned') => updateFlightStatus(flight.flightNo, status)}\n                                    onClick={handleFlightClick}\n                                    isSelected={selectedFlights.has(flight.id)}\n                                    layerTop={layerTop}\n                                    useLayerPositioning={totalLayers > 1} // Включаем слоевое позиционирование для перекрывающихся рейсов\n                                  />\n                                );\n                              })}\n                            </DroppableMachineSlot>\n                          )}\n                          \n                          {/* Если водителю не назначена машина, но нужна droppable зона */}\n                          {!machine && (\n                            <div\n                              style={{\n                                position: 'absolute',\n                                top: 0,\n                                left: 0,\n                                right: 0,\n                                bottom: 0,\n                                backgroundColor: 'rgba(239, 68, 68, 0.1)',\n                                border: '2px dashed #ef4444',\n                                borderRadius: '4px',\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                                color: '#ef4444',\n                                fontSize: '9px', // Уменьшили с 12px до 9px\n                                fontWeight: 'bold',\n                                zIndex: 2\n                              }}\n                            >\n                              Назначьте машину водителю\n                            </div>\n                          )}\n                          \n                          {/* Линия \"сейчас\" для этой строки */}\n                          <div\n                            style={{\n                              position: 'absolute',\n                              left: nowLeft,\n                              top: 0,\n                              height: '100%',\n                              width: '2px',\n                              backgroundColor: '#ef4444',\n                              zIndex: 10\n                            }}\n                          />\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n              </div>\n            </div>\n          </div>\n\n      </div>\n      \n      {/* Фиксированная панель неназначенных рейсов внизу экрана */}\n      <div \n        className=\"fixed bottom-0 left-0 right-0 border-t-2 border-blue-300 bg-blue-50 z-40\"\n        style={{ \n          height: basementHeight,\n          background: 'linear-gradient(135deg, #e3eef7 0%, #d7e8f0 100%)',\n          boxShadow: '0 -4px 8px rgba(0,0,0,0.1)',\n          borderColor: '#cbd5e1'\n        }}\n      >\n        {/* Хэндл для изменения размера */}\n        <div\n          className=\"w-full bg-blue-400 cursor-ns-resize hover:bg-blue-500 transition-colors flex items-center justify-center\"\n          style={{ height: '6px' }}\n          onMouseDown={(e) => {\n            setIsResizing(true);\n            const startY = e.clientY;\n            const startHeight = basementHeight;\n            \n            const handleMouseMove = (e: MouseEvent) => {\n              const deltaY = startY - e.clientY;\n              const newHeight = Math.max(80, Math.min(400, startHeight + deltaY));\n              setBasementHeight(newHeight);\n            };\n            \n            const handleMouseUp = () => {\n              setIsResizing(false);\n              document.removeEventListener('mousemove', handleMouseMove);\n              document.removeEventListener('mouseup', handleMouseUp);\n            };\n            \n            document.addEventListener('mousemove', handleMouseMove);\n            document.addEventListener('mouseup', handleMouseUp);\n          }}\n        >\n          <div className=\"w-12 h-1 bg-blue-600 rounded-full opacity-60\"></div>\n        </div>\n        \n        <div className=\"flex\" style={{ height: basementHeight - 6 }}>\n          {/* Заголовок подвала */}\n          <div \n            className=\"flex-none p-3 flex items-center\"\n            style={{ \n              width: `${TOTAL_DRIVERS_WIDTH}px`, \n              borderRight: '2px solid #cbd5e1',\n              boxShadow: '2px 0 8px rgba(0,0,0,0.1)',\n              background: 'linear-gradient(135deg, #e3eef7 0%, #d7e8f0 100%)'\n            }}\n          >\n            <div className=\"text-sm font-semibold\" style={{ color: '#475569' }}>\n              Неназначенные рейсы ({arrangeUnassignedFlights.length})\n            </div>\n          </div>\n          \n          {/* Область с неназначенными рейсами с активным скроллом */}\n          <div \n            ref={basementRef}\n            className=\"flex-1 overflow-auto\"\n            style={{ \n              boxShadow: 'inset 2px 0 8px rgba(0,0,0,0.05)',\n              background: '#f9fafb'\n            }}\n          >\n            <DroppableUnassigned\n              totalWidth={totalWidth}\n              height={arrangeUnassignedFlights.length > 0 \n                ? Math.max(basementHeight - 6, (Math.max(...arrangeUnassignedFlights.map(f => f.laneIndex)) + 1) * laneH)\n                : basementHeight - 6}\n            >\n              {/* Вертикальные линии сетки времени для подвала */}\n              {gridLines.map(minutes => {\n                // Вычисляем максимальную высоту на основе неназначенных рейсов\n                const maxLaneIndex = arrangeUnassignedFlights.length > 0 \n                  ? Math.max(...arrangeUnassignedFlights.map(f => f.laneIndex)) \n                  : 0;\n                const actualHeight = Math.max(basementHeight - 6, (maxLaneIndex + 1) * laneH);\n                \n                return (\n                <div\n                  key={`basement-grid-${minutes}`}\n                  style={{\n                    position: 'absolute',\n                    left: (minutes - DAY_START) * pxPerMin,\n                    top: 0,\n                    height: actualHeight,\n                    width: '1px',\n                    backgroundColor: minutes % 60 === 0 ? '#9ca3af' : '#e5e7eb',\n                    opacity: 0.7,\n                    zIndex: 1\n                  }}\n                />\n                );\n              })}\n              \n              {/* Горизонтальные линии для подвала */}\n              {(() => {\n                // Вычисляем количество линий на основе фактического количества рядов с рейсами\n                const maxLaneIndex = arrangeUnassignedFlights.length > 0 \n                  ? Math.max(...arrangeUnassignedFlights.map(f => f.laneIndex)) \n                  : 0;\n                const minLines = Math.floor((basementHeight - 6) / laneH) + 1;\n                const actualLines = Math.max(minLines, maxLaneIndex + 2); // +2 для дополнительной линии снизу\n                \n                return Array.from({ length: actualLines }, (_, i) => (\n                  <div\n                    key={`basement-horizontal-${i}`}\n                    style={{\n                      position: 'absolute',\n                    left: 0,\n                    right: 0,\n                    top: i * laneH,\n                    height: '1px',\n                    backgroundColor: '#e5e7eb',\n                    opacity: 0.5,\n                    zIndex: 1\n                  }}\n                />\n                ));\n              })()}\n              \n              {/* Неназначенные рейсы */}\n              {arrangeUnassignedFlights.map((flight) => {\n                const left = (flight.loadStart - DAY_START) * pxPerMin;\n                const width = Math.max(12, (flight.loadEnd - flight.loadStart) * pxPerMin);\n                const top = flight.laneIndex * laneH + (laneH - (laneH - 16)) / 2; // Центрируем рейс в строке как в основной диаграмме\n                const isPending = pendingChanges.some(c => c.flightId === flight.id);\n                \n                return (\n                  <div\n                    key={flight.id}\n                    style={{\n                      position: 'absolute',\n                      left: left,\n                      top: top,\n                      width: width,\n                      height: laneH - 12 // Увеличили высоту для соответствия основной диаграмме\n                    }}\n                  >\n                    <DraggableFlight\n                      flight={flight}\n                      left={0}\n                      width={width}\n                      laneH={laneH - 6} // Такая же высота как у основных рейсов (увеличили с laneH-12)\n                      fontPx={fontPx}\n                      isAssigned={false}\n                      isPending={isPending}\n                      status={getFlightStatus(flight)}\n                      onStatusChange={(status: 'completed' | 'in-progress' | 'planned') => updateFlightStatus(flight.flightNo, status)}\n                      onClick={handleFlightClick}\n                      isSelected={selectedFlights.has(flight.id)}\n                    />\n                  </div>\n                );\n              })}\n              \n              {/* Линия \"сейчас\" для подвала */}\n              <div\n                style={{\n                  position: 'absolute',\n                  left: nowLeft,\n                  top: 0,\n                  bottom: 0,\n                  width: '2px',\n                  backgroundColor: '#ef4444',\n                  zIndex: 10\n                }}\n              />\n            </DroppableUnassigned>\n          </div>\n        </div>\n      </div>\n      \n      {/* Панель управления отображением */}\n      <div className=\"flex-none bg-white border-t border-gray-200 px-4 py-2\"\n           style={{ marginBottom: `${basementHeight}px` }}>\n        <div className=\"flex items-center gap-4\">\n          <div className=\"text-sm text-gray-600\">\n            Высота подвала: {basementHeight}px\n          </div>\n          <button\n            onClick={() => setBasementHeight(120)}\n            className=\"text-xs px-2 py-1 bg-gray-200 rounded hover:bg-gray-300\"\n          >\n            Сбросить\n          </button>\n        </div>\n      </div>\n      \n      {/* Модальное окно для сохранения расстановки */}\n      {showSaveDialog && (\n        <div \n          className=\"fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-[9999]\"\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            zIndex: 9999\n          }}\n        >\n          <div className=\"bg-blue-50 rounded-lg shadow-2xl max-w-lg w-full mx-4 max-h-80 flex flex-col border-2 border-blue-300\" \n               style={{ backgroundColor: '#f0f8ff' }}>\n            <div className=\"px-4 py-3 border-b-2 border-blue-300 bg-gradient-to-r from-blue-100 to-blue-200 rounded-t-lg\">\n              <h3 className=\"text-sm font-semibold text-blue-900\">\n                Сохранить расстановку\n              </h3>\n              <p className=\"text-xs text-blue-700 mt-1\">\n                Просмотрите изменения и подтвердите сохранение\n              </p>\n            </div>\n            \n            <div className=\"flex-1 overflow-y-auto px-4 py-3\" style={{ backgroundColor: '#f0f8ff' }}>\n              {pendingChanges.length === 0 ? (\n                <p className=\"text-blue-600 text-center py-6 text-sm\">\n                  Нет изменений для сохранения\n                </p>\n              ) : (\n                <div className=\"space-y-2\">\n                  {pendingChanges.map((change) => (\n                    <div\n                      key={change.id}\n                      className=\"flex items-center justify-between bg-white rounded-md p-2 border border-blue-200 shadow-sm\"\n                      style={{ backgroundColor: '#ffffff', borderColor: '#b3d9ff' }}\n                    >\n                      <div className=\"flex-1\">\n                        <span className=\"text-sm font-medium text-blue-900\">\n                          {change.flightNo}: {change.fromMachine} → {change.toMachine}\n                        </span>\n                      </div>\n                      <button\n                        onClick={() => handleRemoveChange(change.id)}\n                        className=\"ml-2 px-2 py-1 text-xs bg-red-100 text-red-700 rounded hover:bg-red-200 border border-red-300 transition-colors\"\n                      >\n                        Отменить\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n            \n            <div className=\"px-4 py-3 border-t-2 border-blue-300 flex justify-end gap-2 bg-gradient-to-r from-blue-100 to-blue-200 rounded-b-lg\">\n              <button\n                onClick={handleCancelChanges}\n                className=\"px-3 py-1.5 text-sm font-semibold rounded shadow-sm border transition-all duration-200\"\n                style={{\n                  backgroundColor: '#e0f2fe',\n                  color: '#0c4a6e',\n                  borderColor: '#7dd3fc',\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n                }}\n              >\n                Отмена\n              </button>\n              <button\n                onClick={handleApplyChanges}\n                disabled={loading || pendingChanges.length === 0}\n                className=\"px-3 py-1.5 text-sm font-semibold rounded shadow-sm border transition-all duration-200\"\n                style={{\n                  backgroundColor: loading || pendingChanges.length === 0 ? '#f1f5f9' : '#e0f2fe',\n                  color: loading || pendingChanges.length === 0 ? '#64748b' : '#0c4a6e',\n                  borderColor: loading || pendingChanges.length === 0 ? '#cbd5e1' : '#7dd3fc',\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n                  cursor: loading || pendingChanges.length === 0 ? 'not-allowed' : 'pointer'\n                }}\n              >\n                {loading ? 'Сохранение...' : 'Применить'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* DragOverlay для отображения перетаскиваемого элемента */}\n      <DragOverlay modifiers={[restrictToVerticalAxis]}>\n        {activeFlight && (\n          <DraggableFlight\n            flight={activeFlight}\n            left={0}\n            width={Math.max(12, (activeFlight.loadEnd - activeFlight.loadStart) * pxPerMin)}\n            laneH={laneH}\n            fontPx={fontPx}\n            isAssigned={!!activeFlight.vehicleId}\n            isPending={false}\n            status={getFlightStatus(activeFlight)}\n            onClick={handleFlightClick}\n            isSelected={selectedFlights.has(activeFlight.id)}\n          />\n        )}\n      </DragOverlay>\n      </div>\n    </DndContext>\n  );\n};\n\nexport default PlannerPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}