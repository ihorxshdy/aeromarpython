{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});export const flightAPI={// Получить все рейсы\ngetFlights:async()=>{const response=await api.get('/flights');return response.data;},// Добавить рейсы\naddFlights:async flights=>{const response=await api.post('/flights',flights);return response.data;},// Импорт из CSV\nimportCSV:async file=>{const formData=new FormData();formData.append('file',file);const response=await api.post('/flights/import-csv',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;},// Обновить рейс\nupdateFlight:async(flightId,flight)=>{const response=await api.put(\"/flights/\".concat(flightId),flight);return response.data;},// Удалить рейс\ndeleteFlight:async flightId=>{await api.delete(\"/flights/\".concat(flightId));},// Автоназначение\nautoAssign:async()=>{const response=await api.post('/assign/auto');return response.data;},// Сброс назначений\nresetAssignments:async()=>{const response=await api.post('/assign/reset');return response.data;},// Назначить рейс на машину\nassignFlight:async(flightId,machineId)=>{const response=await api.post(\"/assign/flight/\".concat(flightId,\"/machine/\").concat(machineId));return response.data;},// Снять назначение рейса\nunassignFlight:async flightId=>{const response=await api.delete(\"/assign/flight/\".concat(flightId));return response.data;}};export const machineAPI={// Получить все машины\ngetMachines:async()=>{const response=await api.get('/machines');return response.data;},// Обновить водителя машины\nupdateDriver:async(machineId,driverName)=>{const response=await api.put(\"/machines/\".concat(machineId,\"/driver\"),{driver:driverName});return response.data;}};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","flightAPI","getFlights","response","get","data","addFlights","flights","post","importCSV","file","formData","FormData","append","updateFlight","flightId","flight","put","concat","deleteFlight","delete","autoAssign","resetAssignments","assignFlight","machineId","unassignFlight","machineAPI","getMachines","updateDriver","driverName","driver"],"sources":["/Users/igordvoretskii/Documents/aeromar-python/frontend/src/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { Flight, Machine } from './types';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const flightAPI = {\n  // Получить все рейсы\n  getFlights: async (): Promise<Flight[]> => {\n    const response = await api.get('/flights');\n    return response.data;\n  },\n\n  // Добавить рейсы\n  addFlights: async (flights: Flight[]): Promise<Flight[]> => {\n    const response = await api.post('/flights', flights);\n    return response.data;\n  },\n\n  // Импорт из CSV\n  importCSV: async (file: File): Promise<Flight[]> => {\n    const formData = new FormData();\n    formData.append('file', file);\n    \n    const response = await api.post('/flights/import-csv', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  // Обновить рейс\n  updateFlight: async (flightId: string, flight: Flight): Promise<Flight> => {\n    const response = await api.put(`/flights/${flightId}`, flight);\n    return response.data;\n  },\n\n  // Удалить рейс\n  deleteFlight: async (flightId: string): Promise<void> => {\n    await api.delete(`/flights/${flightId}`);\n  },\n\n  // Автоназначение\n  autoAssign: async (): Promise<{ message: string; assigned_count: number }> => {\n    const response = await api.post('/assign/auto');\n    return response.data;\n  },\n\n  // Сброс назначений\n  resetAssignments: async (): Promise<{ message: string }> => {\n    const response = await api.post('/assign/reset');\n    return response.data;\n  },\n\n  // Назначить рейс на машину\n  assignFlight: async (flightId: string, machineId: string): Promise<Flight> => {\n    const response = await api.post(`/assign/flight/${flightId}/machine/${machineId}`);\n    return response.data;\n  },\n\n  // Снять назначение рейса\n  unassignFlight: async (flightId: string): Promise<Flight> => {\n    const response = await api.delete(`/assign/flight/${flightId}`);\n    return response.data;\n  },\n};\n\nexport const machineAPI = {\n  // Получить все машины\n  getMachines: async (): Promise<Machine[]> => {\n    const response = await api.get('/machines');\n    return response.data;\n  },\n\n  // Обновить водителя машины\n  updateDriver: async (machineId: string, driverName: string): Promise<Machine> => {\n    const response = await api.put(`/machines/${machineId}/driver`, { driver: driverName });\n    return response.data;\n  },\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}