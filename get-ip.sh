#!/bin/bash

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ IP-–∞–¥—Ä–µ—Å–∞
get_local_ip() {
    # –ü—Ä–æ–±—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–ª—É—á–∏—Ç—å IP
    local ip=""
    
    # –°–ø–æ—Å–æ–± 1: ifconfig (–¥–ª—è macOS/Linux)
    ip=$(ifconfig | grep "inet " | grep -v 127.0.0.1 | head -1 | awk '{print $2}')
    
    # –°–ø–æ—Å–æ–± 2: –µ—Å–ª–∏ –ø–µ—Ä–≤—ã–π –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π —Ñ–æ—Ä–º–∞—Ç
    if [ -z "$ip" ]; then
        ip=$(ifconfig | grep "inet " | grep -v 127.0.0.1 | head -1 | sed 's/.*inet \([0-9.]*\).*/\1/')
    fi
    
    # –°–ø–æ—Å–æ–± 3: —á–µ—Ä–µ–∑ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—é (–µ—Å–ª–∏ ifconfig –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)
    if [ -z "$ip" ]; then
        ip=$(route get default | grep interface | awk '{print $2}' | xargs ifconfig | grep "inet " | grep -v 127.0.0.1 | head -1 | awk '{print $2}')
    fi
    
    # –°–ø–æ—Å–æ–± 4: —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º–Ω—É—é —É—Ç–∏–ª–∏—Ç—É (–¥–ª—è macOS)
    if [ -z "$ip" ]; then
        ip=$(ipconfig getifaddr en0 2>/dev/null || ipconfig getifaddr en1 2>/dev/null)
    fi
    
    echo "$ip"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ IP
is_valid_ip() {
    local ip=$1
    if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        return 0
    else
        return 1
    fi
}

# –ü–æ–ª—É—á–∞–µ–º IP
LOCAL_IP=$(get_local_ip)

if [ -z "$LOCAL_IP" ] || ! is_valid_ip "$LOCAL_IP"; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π IP-–∞–¥—Ä–µ—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
    echo "üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—Ä—É—á–Ω—É—é:"
    echo "   ifconfig | grep 'inet '"
    echo "   –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –≤—Ä—É—á–Ω—É—é –≤ –∫–æ–¥–µ"
    exit 1
fi

echo "üì° –û–±–Ω–∞—Ä—É–∂–µ–Ω –ª–æ–∫–∞–ª—å–Ω—ã–π IP: $LOCAL_IP"
export LOCAL_IP
